[
    {
      "title": "Issues · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-asc",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nIssues: sui-foundation/sui-move-intro-course\n Labels 9\n Milestones 0\nNew issue\n Clear current search query, filters, and sorts\n 1 Open  12 Closed\nAuthor \nLabel \nProjects  Milestones \nAssignee \nSort \nIssues list\nRPC Error trying to publish the contract from unit one\n#76 opened  by Skunkw0rks\n updated \n ProTip! Add no:assignee to see everything that’s not assigned.\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Issues · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nIssues: sui-foundation/sui-move-intro-course\n Labels 9\n Milestones 0\nNew issue\n Clear current search query, filters, and sorts\n 1 Open  12 Closed\nAuthor \nLabel \nProjects  Milestones \nAssignee \nSort \nIssues list\nRPC Error trying to publish the contract from unit one\n#76 opened  by Skunkw0rks\n updated \n ProTip! Add no:assignee to see everything that’s not assigned.\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Issues · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/issues?q=is%3Aissue+is%3Aopen+sort%3Acomments-desc",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nIssues: sui-foundation/sui-move-intro-course\n Labels 9\n Milestones 0\nNew issue\n Clear current search query, filters, and sorts\n 1 Open  12 Closed\nAuthor \nLabel \nProjects  Milestones \nAssignee \nSort \nIssues list\nRPC Error trying to publish the contract from unit one\n#76 opened  by Skunkw0rks\n ProTip! Add no:assignee to see everything that’s not assigned.\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Issues · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/issues?q=is%3Aissue+is%3Aopen+sort%3Acomments-asc",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nIssues: sui-foundation/sui-move-intro-course\n Labels 9\n Milestones 0\nNew issue\n Clear current search query, filters, and sorts\n 1 Open  12 Closed\nAuthor \nLabel \nProjects  Milestones \nAssignee \nSort \nIssues list\nRPC Error trying to publish the contract from unit one\n#76 opened  by Skunkw0rks\n ProTip! Find all open issues with in progress development work with linked:pr.\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Issues · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/issues?q=is%3Aissue+is%3Aopen+sort%3Acreated-asc",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nIssues: sui-foundation/sui-move-intro-course\n Labels 9\n Milestones 0\nNew issue\n Clear current search query, filters, and sorts\n 1 Open  12 Closed\nAuthor \nLabel \nProjects  Milestones \nAssignee \nSort \nIssues list\nRPC Error trying to publish the contract from unit one\n#76 opened  by Skunkw0rks\n ProTip! Type g p on any issue or pull request to go back to the pull request listing page.\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Issues · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/issues?q=is%3Aissue+is%3Aclosed",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nIssues: sui-foundation/sui-move-intro-course\n Labels 9\n Milestones 0\nNew issue\n Clear current search query, filters, and sorts\n 1 Open  12 Closed\nAuthor \nLabel \nProjects  Milestones \nAssignee \nSort \nIssues list\nerror: failed to compile sui v1.18.0 (https://github.com/MystenLabs/sui.git?branch=testnet#673fcb2a), intermediate artifacts can be found at /tmp/cargo-installeVtYDN.\n#71 by Aryan-Bin-Jahur was closed \n 4\nfailed to compile sui v1.18.0 (https://github.com/MystenLabs/sui.git?branch=testnet#673fcb2a)\n#70 by Brusantos55 was closed \nhello_world example display 403 Forbidden\n#66 by dethan3 was closed \nexample of end to end test\n#56 by georgescharlesbrain was closed \n 3\nunit-one/lessons/3_custom_types_and_abilities.md\n#45 by Dipuchvasiya was closed \nRunning hello world with error InsufficientGas in command 0\n#29 by lidh15 was closed \n 1\nSui wallet\n#21 by nmm5060 was closed \ncreate-example-nft subcommand\n#20 by sreckovic was closed \n 1\nLoops : Sui Move\n#15 by Shaik-Sirajuddin was closed \n 1\n这教程太牛了\n#12 by yekai9527 was closed \n 1\nWe don't need to run docker if we install sui binary locally, right?\n#7 by llllllluc was closed \n 1\nSui docker Image's platform supports arm based machine but its not native to intel machines.\n#3 by BrianSeong99 was closed \n 3\n ProTip! Add no:assignee to see everything that’s not assigned.\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Issues · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/issues?q=is%3Aissue+is%3Aopen+no%3Aassignee",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nIssues: sui-foundation/sui-move-intro-course\n Labels 9\n Milestones 0\nNew issue\n Clear current search query, filters, and sorts\n 1 Open  12 Closed\nAuthor \nLabel \nProjects  Milestones \nAssignee \nSort \nIssues list\nRPC Error trying to publish the contract from unit one\n#76 opened  by Skunkw0rks\n ProTip! Adding no:label will show everything without a label.\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Issues · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/issues?q=is%3Aopen+is%3Aissue",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nIssues: sui-foundation/sui-move-intro-course\n Labels 9\n Milestones 0\nNew issue\n Clear current search query, filters, and sorts\n 1 Open  12 Closed\nAuthor \nLabel \nProjects  Milestones \nAssignee \nSort \nIssues list\nRPC Error trying to publish the contract from unit one\n#76 opened  by Skunkw0rks\n ProTip! What’s not been updated in a month: updated:<2024-04-15.\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Milestones - sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/milestones",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\n Labels\n Milestones\n 0 Open  0 Closed\nSort \nNo Milestones found!\n\nIf this project had milestones, we’d show you them here. Promise!\n\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Labels · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/labels",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\n Labels\n Milestones\n9 labels\nSort \nbug\nSomething isn't working\ndocumentation\nImprovements or additions to documentation\n1\nduplicate\nThis issue or pull request already exists\nenhancement\nNew feature or request\ngood first issue\nGood for newcomers\nhelp wanted\nExtra attention is needed\ninvalid\nThis doesn't seem right\nquestion\nFurther information is requested\nwontfix\nThis will not be worked on\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "GitHub - sui-foundation/sui-move-intro-course at zihe-update-linux-install",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/tree/zihe-update-linux-install",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nsui-foundation/sui-move-intro-course\n zihe-update-linux-install\n4 Branches\n0 Tags\nCode\nThis branch is 25 commits behind main.\nFolders and files\nName\tLast commit message\tLast commit date\n\nLatest commit\nzihehuang\nupdate installation doc for linux\nf69752b\n · \nHistory\n310 Commits\n\n\n.github\n\t\nfix ci\n\t\n\n\nadvanced-topics\n\t\nDoc update\n\t\n\n\nexercises\n\t\nlocked_coin contract\n\t\n\n\nsrc\n\t\nfeat: check code\n\t\n\n\nunit-four\n\t\nSwitch to function level lint\n\t\n\n\nunit-one\n\t\nupdate installation doc for linux\n\t\n\n\nunit-three\n\t\nSwitch to function level lint\n\t\n\n\nunit-two\n\t\nDoc update\n\t\n\n\n.gitignore\n\t\nclosed loop token parity contract\n\t\n\n\nLICENSE\n\t\nUpdate LICENSE\n\t\n\n\nREADME.md\n\t\nMerge branch 'main' of https://github.com/sui-foundation/sui-move-int…\n\t\n\n\nSUMMARY.md\n\t\nClock title\n\t\n\n\nbook.toml\n\t\nadd mdbook\n\t\nRepository files navigation\nREADME\nLicense\nMove Intro Course\n\nIntroductory course to the Move language maintained by Sui Foundation.\n\nContent\nUnit One: Environment Setup and Hello World\nSet Up Environment\nSui Project Structure\nCustom Types and Abilities\nFunctions\nContract Deployment\nUnit Two: Working with Sui Objects\nIntroduction\nOwnership\nParameter Passing and Object Deletion\nObject Wrapping\nObject Wrapping by Example\nCapability Design Pattern\nEvents\nUnit Three: Fungible Tokens\nSui Framework\nIntro to Generics\nWitness Design Pattern\nThe Coin Resource and create_currency Method\nManaged Coin Example\nClock and Locked Coin\nUnit Testing\nUnit Four: Marketplace\nHomogeneous Collections\nDynamic Fields\nHeterogeneous Collections\nMarketplace Contract\nDeployment and Testing\nAdvanced Topics\nBCS Encoding\nTODOs\n Write BCS lesson for advanced topics\n Create a multi-platform Docker image\n Create exercises for each unit\n Add content on Display.move\n Add content on clock and example on token unlocking\n Write advanced topic lesson on closed loop token standard\n Write advanced topic lesson on package upgrades\n Write new lesson on kiosks\n Check and update Unit One against latest version of Sui\n Check and update Unit Two against latest version of Sui\n Check and update Unit Three against latest version of Sui\n Check and update Unit Four against latest version of Sui\n Check and update Advanced Topics against latest version of Sui\nGeneral Developer Resources\nSui Developer Documentation\nSui Developer Portal\nSui GitHub\nSui Framework Documentaton\nSui Typescript SDK (official)\nSui Typescript SDK (community)\nSui Rust SDK (official)\nSui Golang SDK (community)\nSui Python SDK (community)\nSui Java SDK (community)\nSui Kotlin SDK (community)\nSui C# SDK (community)\nSui Dart SDK(community)\nSui Explorer\nSocials and Communities\n\nIf you want to join Sui's online communities, you can join via following links:\n\nSui Network Twitter\nSui Official Discord\nSui Developer Forums\nRepo Translations\n English\n Chinese\n Thai\n\nPlease get in touch if you want to help translate this into other languages.\n\nVideos and Other Formats\n Encode Club Video Series (English) YouTube playlist | tutorial and code\n BuidlerDAO Video Series (Chinese)\n MoveBit Move on Sui Course (English) YouTube playlist | tutorial and code\nFAQ\n\nCan I use the content of this repo to produce other educational content related to Sui or Sui Move programming language?\n\nYes. That is the original intention of this repo, to allow content creators and educational platforms to use and expand on the material within this repo to create different forms of media or technical content about Sui or the Sui Move language.\n\nThis repo is licensed under the Creative Common License; CC-BY-SA-4.0 license, to be specific. This allows anyone to remix, transform, build or share the content in this repo for whatever purposes, but any content based on this repo also needs to be licensed under the same Creative Common License, and give an attribution to the source.\n\nHow can I contribute to this repo?\n\nFork and open a PR against the upstream repo. We are open to community contributions.\n\nAbout\n\nIntroductory Course to the Sui Move language\n\nResources\n Readme\nLicense\n CC-BY-SA-4.0 license\n Activity\n Custom properties\nStars\n 2k stars\nWatchers\n 17 watching\nForks\n 73 forks\nReport repository\n\n\nReleases\nNo releases published\n\n\nPackages\nNo packages published\n\n\n\nContributors\n20\n+ 6 contributors\n\n\nLanguages\nMove\n91.4%\n \nJavaScript\n8.6%\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "update installation doc for linux by zihehuang · Pull Request #72 · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/pull/72",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nNew issue\nupdate installation doc for linux #72\n Merged\nhyd628 merged 1 commit into main from zihe-update-linux-install \n+14 −3 \n Conversation 2\n Commits 1\n Checks 1\n Files changed 1\nConversation\nContributor\nzihehuang commented  • \nedited \n\nI encountered some tmpfs issue while compiling from source but managed to found a solution\n\nupdate installation doc for linux\nf69752b\n zihehuang requested a review from hyd628 \nSuiSunbeam commented \n\nGlad you got past this issue, I'd caution against recommending using assigning more than 70% of installed RAM size to tmpfs though?\n\nI'm not affiliated with Mysten Labs, just my two cents.\n\nhyd628 approved these changes \nView reviewed changes\nMember\nhyd628 left a comment\n\nLGTM\n\nView details\n hyd628 merged commit 92f9853 into main \n1 check failed\nSign up for free to join this conversation on GitHub. Already have an account? Sign in to comment\nReviewers\n\nhyd628\n\nAssignees\nNo one assigned\nLabels\nNone yet\nProjects\nNone yet\nMilestone\nNo milestone\nDevelopment\n\nSuccessfully merging this pull request may close these issues.\n\nNone yet\n\n3 participants\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "GitHub - sui-foundation/sui-move-intro-course at daniel/adding-kiosk-basics",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/tree/daniel/adding-kiosk-basics",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nsui-foundation/sui-move-intro-course\n daniel/adding-kiosk-basics\n4 Branches\n0 Tags\nCode\nThis branch is 8 commits behind main.\nFolders and files\nName\tLast commit message\tLast commit date\n\nLatest commit\ndaniellam258\nfix: change rust to move for code example\n5aca07f\n · \nHistory\n327 Commits\n\n\n.github\n\t\nfix ci\n\t\n\n\nadvanced-topics\n\t\nDoc update\n\t\n\n\nexercises\n\t\nlocked_coin contract\n\t\n\n\nsrc\n\t\nfeat: check code\n\t\n\n\nunit-five\n\t\nfix: change rust to move for code example\n\t\n\n\nunit-four\n\t\nSwitch to function level lint\n\t\n\n\nunit-one\n\t\nupdate installation doc for linux\n\t\n\n\nunit-three\n\t\nSwitch to function level lint\n\t\n\n\nunit-two\n\t\nDoc update\n\t\n\n\n.gitignore\n\t\nfeat: Sui Kiosk (wip)\n\t\n\n\nLICENSE\n\t\nUpdate LICENSE\n\t\n\n\nREADME.md\n\t\nfeat: update readme\n\t\n\n\nSUMMARY.md\n\t\nClock title\n\t\n\n\nbook.toml\n\t\nadd mdbook\n\t\nRepository files navigation\nREADME\nLicense\nMove Intro Course\n\nIntroductory course to the Move language maintained by Sui Foundation.\n\nContent\nUnit One: Environment Setup and Hello World\nSet Up Environment\nSui Project Structure\nCustom Types and Abilities\nFunctions\nContract Deployment\nUnit Two: Working with Sui Objects\nIntroduction\nOwnership\nParameter Passing and Object Deletion\nObject Wrapping\nObject Wrapping by Example\nCapability Design Pattern\nEvents\nUnit Three: Fungible Tokens\nSui Framework\nIntro to Generics\nWitness Design Pattern\nThe Coin Resource and create_currency Method\nManaged Coin Example\nClock and Locked Coin\nUnit Testing\nUnit Four: Marketplace\nHomogeneous Collections\nDynamic Fields\nHeterogeneous Collections\nMarketplace Contract\nDeployment and Testing\nUnit Five: Sui Kiosk\nProgrammable Transaction Block\nHot Potato Design Pattern\nSui Kiosk Basic Concepts\nSui Kiosk Basic Usage\nTransfer Policy\nAdvanced Topics\nBCS Encoding\nTODOs\n Write BCS lesson for advanced topics\n Create a multi-platform Docker image\n Create exercises for each unit\n Add content on Display.move\n Add content on clock and example on token unlocking\n Write advanced topic lesson on closed loop token standard\n Write advanced topic lesson on package upgrades\n Write new lesson on kiosks\n Check and update Unit One against latest version of Sui\n Check and update Unit Two against latest version of Sui\n Check and update Unit Three against latest version of Sui\n Check and update Unit Four against latest version of Sui\n Check and update Advanced Topics against latest version of Sui\nGeneral Developer Resources\nSui Developer Documentation\nSui Developer Portal\nSui GitHub\nSui Framework Documentaton\nSui Typescript SDK (official)\nSui Typescript SDK (community)\nSui Rust SDK (official)\nSui Golang SDK (community)\nSui Python SDK (community)\nSui Java SDK (community)\nSui Kotlin SDK (community)\nSui C# SDK (community)\nSui Dart SDK(community)\nSui Explorer\nSocials and Communities\n\nIf you want to join Sui's online communities, you can join via following links:\n\nSui Network Twitter\nSui Official Discord\nSui Developer Forums\nRepo Translations\n English\n Chinese\n Thai\n\nPlease get in touch if you want to help translate this into other languages.\n\nVideos and Other Formats\n Encode Club Video Series (English) YouTube playlist | tutorial and code\n BuidlerDAO Video Series (Chinese)\n MoveBit Move on Sui Course (English) YouTube playlist | tutorial and code\nFAQ\n\nCan I use the content of this repo to produce other educational content related to Sui or Sui Move programming language?\n\nYes. That is the original intention of this repo, to allow content creators and educational platforms to use and expand on the material within this repo to create different forms of media or technical content about Sui or the Sui Move language.\n\nThis repo is licensed under the Creative Common License; CC-BY-SA-4.0 license, to be specific. This allows anyone to remix, transform, build or share the content in this repo for whatever purposes, but any content based on this repo also needs to be licensed under the same Creative Common License, and give an attribution to the source.\n\nHow can I contribute to this repo?\n\nFork and open a PR against the upstream repo. We are open to community contributions.\n\nAbout\n\nIntroductory Course to the Sui Move language\n\nResources\n Readme\nLicense\n CC-BY-SA-4.0 license\n Activity\n Custom properties\nStars\n 2k stars\nWatchers\n 17 watching\nForks\n 73 forks\nReport repository\n\n\nReleases\nNo releases published\n\n\nPackages\nNo packages published\n\n\n\nContributors\n20\n+ 6 contributors\n\n\nLanguages\nMove\n91.4%\n \nJavaScript\n8.6%\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Adding Kiosk Unit by daniellam258 · Pull Request #73 · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/pull/73",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nNew issue\nAdding Kiosk Unit #73\n Merged\nhyd628 merged 16 commits into main from daniel/adding-kiosk-basics \n+923 −0 \n Conversation 1\n Commits 16\n Checks 1\n Files changed 16\nConversation\nContributor\ndaniellam258 commented \n\nNo description provided.\n\ndaniellam258 added 8 commits \nfeat: adding ptb\nf022f48\nfeat: adding ptb\n1f37c73\nfeat: adding hot potato pattern\n25df555\nfeat: fix readme\n896bb76\nfix: fix readme\ndf98fe7\nfeat: Sui Kiosk (wip)\n716c557\nfeat(kiosk): add kiosk users and asset states\n3ba6f12\nfeat: add kiosk policy\n81b3f53\n daniellam258 requested a review from hyd628 \ndaniellam258 added 7 commits \nfeat: refactor hot potato to exclude ptb\n58dffbf\nRevert to keep PTB\ne321fa3\nfeat: add ptb cli example to hot potato\nb83cf35\nfeat: add create kiosk section\n06e08d4\nfeat: add kiosk buy full flow example\n4724b2b\nfeat: update readme\n12fbf02\nfix: fix ptb kiosk buy\n5801092\n daniellam258 requested a review from damirka \ndamirka reviewed \nView reviewed changes\nunit-five/lessons/2_hot_potato_pattern.md\nOutdated\nShow resolved\nfix: change rust to move for code example\n5aca07f\nhyd628 approved these changes \nView reviewed changes\nView details\n hyd628 merged commit 6e48467 into main \n1 check failed\nSign up for free to join this conversation on GitHub. Already have an account? Sign in to comment\nReviewers\n\ndamirka\n\nhyd628\n\nAssignees\nNo one assigned\nLabels\nNone yet\nProjects\nNone yet\nMilestone\nNo milestone\nDevelopment\n\nSuccessfully merging this pull request may close these issues.\n\nNone yet\n\n3 participants\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "GitHub - sui-foundation/sui-move-intro-course at dan/fixes",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/tree/dan/fixes",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nsui-foundation/sui-move-intro-course\n dan/fixes\n4 Branches\n0 Tags\nCode\nThis branch is 7 commits ahead of main.\n#79\nFolders and files\nName\tLast commit message\tLast commit date\n\nLatest commit\ndantheman8300\nmore spacing\n3c46de0\n · \nHistory\n342 Commits\n\n\n.github\n\t\nfeat: move 2024\n\t\n\n\nadvanced-topics\n\t\nfeat: move 2024\n\t\n\n\nexercises\n\t\nfeat: move 2024\n\t\n\n\nsrc\n\t\nfeat: check code\n\t\n\n\nunit-five\n\t\nfeat: move 2024\n\t\n\n\nunit-four\n\t\nfeat: move 2024\n\t\n\n\nunit-one\n\t\nmore spacing\n\t\n\n\nunit-three\n\t\nfeat: move 2024\n\t\n\n\nunit-two\n\t\nfeat: move 2024\n\t\n\n\n.gitignore\n\t\nfeat: Sui Kiosk (wip)\n\t\n\n\nLICENSE\n\t\nUpdate LICENSE\n\t\n\n\nREADME.md\n\t\nMerge pull request #73 from sui-foundation/daniel/adding-kiosk-basics\n\t\n\n\nSUMMARY.md\n\t\nfeat: move 2024\n\t\n\n\nbook.toml\n\t\nadd mdbook\n\t\nRepository files navigation\nREADME\nLicense\nMove Intro Course\n\nIntroductory course to the Move language maintained by Sui Foundation.\n\nContent\nUnit One: Environment Setup and Hello World\nSet Up Environment\nSui Project Structure\nCustom Types and Abilities\nFunctions\nContract Deployment\nUnit Two: Working with Sui Objects\nIntroduction\nOwnership\nParameter Passing and Object Deletion\nObject Wrapping\nObject Wrapping by Example\nCapability Design Pattern\nEvents\nUnit Three: Fungible Tokens\nSui Framework\nIntro to Generics\nWitness Design Pattern\nThe Coin Resource and create_currency Method\nManaged Coin Example\nClock and Locked Coin\nUnit Testing\nUnit Four: Marketplace\nHomogeneous Collections\nDynamic Fields\nHeterogeneous Collections\nMarketplace Contract\nDeployment and Testing\nUnit Five: Sui Kiosk\nProgrammable Transaction Block\nHot Potato Design Pattern\nSui Kiosk Basic Concepts\nSui Kiosk Basic Usage\nTransfer Policy\nAdvanced Topics\nBCS Encoding\nTODOs\n Write BCS lesson for advanced topics\n Create a multi-platform Docker image\n Create exercises for each unit\n Add content on Display.move\n Add content on clock and example on token unlocking\n Write advanced topic lesson on closed loop token standard\n Write advanced topic lesson on package upgrades\n Write new lesson on kiosks\n Check and update Unit One against latest version of Sui\n Check and update Unit Two against latest version of Sui\n Check and update Unit Three against latest version of Sui\n Check and update Unit Four against latest version of Sui\n Check and update Advanced Topics against latest version of Sui\nGeneral Developer Resources\nSui Developer Documentation\nSui Developer Portal\nSui GitHub\nSui Framework Documentation\nSui Typescript SDK (official)\nSui Typescript SDK (community)\nSui Rust SDK (official)\nSui Golang SDK (community)\nSui Python SDK (community)\nSui Java SDK (community)\nSui Kotlin SDK (community)\nSui C# SDK (community)\nSui Dart SDK(community)\nSui Explorer\nSocials and Communities\n\nIf you want to join Sui's online communities, you can join via following links:\n\nSui Network Twitter\nSui Official Discord\nSui Developer Forums\nRepo Translations\n English\n Chinese\n Thai\n\nPlease get in touch if you want to help translate this into other languages.\n\nVideos and Other Formats\n Encode Club Video Series (English) YouTube playlist | tutorial and code\n BuidlerDAO Video Series (Chinese)\n MoveBit Move on Sui Course (English) YouTube playlist | tutorial and code\nFAQ\n\nCan I use the content of this repo to produce other educational content related to Sui or Sui Move programming language?\n\nYes. That is the original intention of this repo, to allow content creators and educational platforms to use and expand on the material within this repo to create different forms of media or technical content about Sui or the Sui Move language.\n\nThis repo is licensed under the Creative Common License; CC-BY-SA-4.0 license, to be specific. This allows anyone to remix, transform, build or share the content in this repo for whatever purposes, but any content based on this repo also needs to be licensed under the same Creative Common License, and give an attribution to the source.\n\nHow can I contribute to this repo?\n\nFork and open a PR against the upstream repo. We are open to community contributions.\n\nAbout\n\nIntroductory Course to the Sui Move language\n\nResources\n Readme\nLicense\n CC-BY-SA-4.0 license\n Activity\n Custom properties\nStars\n 2k stars\nWatchers\n 17 watching\nForks\n 73 forks\nReport repository\n\n\nReleases\nNo releases published\n\n\nPackages\nNo packages published\n\n\n\nContributors\n20\n+ 6 contributors\n\n\nLanguages\nMove\n91.4%\n \nJavaScript\n8.6%\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Commits · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/commits?author=hyd628",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nCommits\nBranch selector\n main\nUser selector\nhyd628\nDatepicker\nAll time\nCommit History\nCommits on Apr 16, 2024\nMerge pull request #75 from StevenMia/main\nhyd628\ncommitted\nVerified\n322d935\nCommits on Apr 12, 2024\nMerge pull request #73 from sui-foundation/daniel/adding-kiosk-basics\nhyd628\ncommitted\nVerified\n6e48467\nMerge pull request #74 from goodfirm/main\nhyd628\ncommitted\nVerified\na4a5f19\nCommits on Feb 19, 2024\nMerge pull request #72 from sui-foundation/zihe-update-linux-install\nhyd628\ncommitted\nVerified\n92f9853\nCommits on Feb 4, 2024\nMerge branch 'main' of https://github.com/sui-foundation/sui-move-intro-course\nhyd628\ncommitted\n9a1f4f3\nUpdate README.md\nhyd628\ncommitted\nc2efc5a\nMerge pull request #68 from RandyPen/patch-1\nhyd628\ncommitted\nVerified\nc068689\nMerge pull request #67 from Xeonacid/patch-1\nhyd628\ncommitted\nVerified\ne37cfa0\nUpdate README.md\nhyd628\ncommitted\n64c3495\nCommits on Jan 4, 2024\nMerge pull request #65 from ordinary-yobi/patch-1\nhyd628\ncommitted\nVerified\neb27ebc\nCommits on Dec 24, 2023\nClock title\nhyd628\ncommitted\n96e48a8\nCommits on Dec 10, 2023\nparity token\nhyd628\ncommitted\n2d16734\nUpdate closed_loop_token.md\nhyd628\ncommitted\n5ffc4f8\nclosed loop token\nhyd628\ncommitted\n98df20a\nCommits on Dec 9, 2023\nclosed loop token parity contract\nhyd628\ncommitted\nb8529b2\nCommits on Dec 7, 2023\nfixes\nhyd628\ncommitted\n5e0218e\nUpdate README.md\nhyd628\ncommitted\neeacd91\nUpdate SUMMARY.md\nhyd628\ncommitted\n36c0829\nlocked_coin\nhyd628\ncommitted\nec3c799\nassets\nhyd628\ncommitted\nd5b3588\nLocked_coin 1st half\nhyd628\ncommitted\n15c5f63\nlocked_coin contract\nhyd628\ncommitted\n35fa44e\nCommits on Dec 4, 2023\nCreate locked_coin_1.move\nhyd628\ncommitted\n0beb540\nCommits on Nov 9, 2023\nremoving public entry part 2\nhyd628\ncommitted\n583c1cf\nexercises rename\nhyd628\ncommitted\n36b583d\nedits\nhyd628\ncommitted\n4aadf7a\nCommits on Nov 8, 2023\nrename\nhyd628\ncommitted\n39c889d\nrename\nhyd628\ncommitted\n3cd9d39\nchapter name change\nhyd628\ncommitted\nf50a478\nmoving locked coin\nhyd628\ncommitted\n16b3adc\nRemove public entry\nhyd628\ncommitted\n6f10317\nUpdate unit-one-quiz.md\nhyd628\ncommitted\nc49e5d3\nUpdate README.md\nhyd628\ncommitted\n686a1e3\nUpdate unit-one-quiz.md\nhyd628\ncommitted\ndb02032\nquizzes initial\nhyd628\ncommitted\n82b559f\nPagination\nPrevious\nNext\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Update to Unit One READMEs by dantheman8300 · Pull Request #79 · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/pull/79",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nNew issue\nUpdate to Unit One READMEs #79\n Open\ndantheman8300 wants to merge 7 commits into main from dan/fixes \n+2 −2 \n Conversation 0\n Commits 7\n Checks 1\n Files changed 3\nConversation\ndantheman8300 commented  • \nedited \n\nUpdate the following points:\n\nupdated the public_transfer link\nremoved redundant section of description of TxContext\nsubmitted update images of CLI output of deployment to match new CLI's better readability\ndantheman8300 added 4 commits \nremoved redundant info: …\n5212531\nupdate public(friend) visibility desc. …\n0c51508\nupdated link to public_transfer docs\n58690d5\nupdated images of CLI outputs to match new CLI updates\ndd4a1cb\n dantheman8300 added the documentation label \n dantheman8300 requested a review from hyd628 \n dantheman8300 self-assigned this \n dantheman8300 marked this pull request as ready for review \n dantheman8300 marked this pull request as draft \ndantheman8300 added 3 commits \nreverted change on package visibility\n1f1fe20\nspacing\n9ead145\nmore spacing\n3c46de0\n dantheman8300 marked this pull request as ready for review \nSign up for free to join this conversation on GitHub. Already have an account? Sign in to comment\nReviewers\n\nhyd628\n\nAssignees\n\ndantheman8300\n\nLabels\ndocumentation\nProjects\nNone yet\nMilestone\nNo milestone\nDevelopment\n\nSuccessfully merging this pull request may close these issues.\n\nNone yet\n\n1 participant\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Branches · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/branches/all",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nBranches\nOverview\nActive\nStale\nAll\nSearch\nBranch\nUpdated\nCheck status\nBehind\nAhead\nPull request\nAction menu\nmain\n \nDefault\ndan/fixes\n \n0 / 1\n0\n7\n#79\ndaniel/adding-kiosk-basics\n \n0 / 1\n8\n0\n#73\nzihe-update-linux-install\n \n0 / 1\n25\n0\n#72\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "History for LICENSE - sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/commits/main/LICENSE",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nCommits\nBreadcrumbs\nHistory for\nsui-move-intro-courseLICENSE\nonmain\nUser selector\nAll users\nDatepicker\nAll time\nCommit History\nCommits on Nov 23, 2022\nUpdate LICENSE\nhyd628\ncommitted\n9a57c20\nCommits on Nov 11, 2022\nInitial commit\nhyd628\ncommitted\nVerified\n8415552\nEnd of commit history for this file\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Branches · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/branches/active",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nBranches\nOverview\nActive\nStale\nAll\nSearch\nBranch\nUpdated\nCheck status\nBehind\nAhead\nPull request\nAction menu\ndan/fixes\n \n0\n7\ndaniel/adding-kiosk-basics\n \n8\n0\nzihe-update-linux-install\n \n25\n0\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Branches · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/branches/stale",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nBranches\nOverview\nActive\nStale\nAll\nSearch\nNo branches\n\nNo branches match the search\n\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Update LICENSE · sui-foundation/sui-move-intro-course@9a57c20 · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/commit/9a57c20e74ca9d72133e36ef5710bb1f840c5803",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nCommit\nUpdate LICENSE\nBrowse files\n main\nhyd628 committed  \n1 parent c638a3b\ncommit 9a57c20\nShowing 1 changed file with 427 additions and 121 deletions.\nWhitespace\nIgnore whitespace\nSplit\nUnified\n \n548 changes: 427 additions & 121 deletions\n548  \nLICENSE\n\t\t@@ -1,121 +1,427 @@\n\t\tCreative Commons Legal Code\n\t\t\n\n\t\tCC0 1.0 Universal\n\t\t\n\n\t\t    CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE\n\t\t    LEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN\n\t\t    ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS\n\t\t    INFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES\n\t\t    REGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS\n\t\t    PROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM\n\t\t    THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED\n\t\t    HEREUNDER.\n\t\t\n\n\t\tStatement of Purpose\n\t\t\n\n\t\tThe laws of most jurisdictions throughout the world automatically confer\n\t\texclusive Copyright and Related Rights (defined below) upon the creator\n\t\tand subsequent owner(s) (each and all, an \"owner\") of an original work of\n\t\tauthorship and/or a database (each, a \"Work\").\n\t\t\n\n\t\tCertain owners wish to permanently relinquish those rights to a Work for\n\t\tthe purpose of contributing to a commons of creative, cultural and\n\t\tscientific works (\"Commons\") that the public can reliably and without fear\n\t\tof later claims of infringement build upon, modify, incorporate in other\n\t\tworks, reuse and redistribute as freely as possible in any form whatsoever\n\t\tand for any purposes, including without limitation commercial purposes.\n\t\tThese owners may contribute to the Commons to promote the ideal of a free\n\t\tculture and the further production of creative, cultural and scientific\n\t\tworks, or to gain reputation or greater distribution for their Work in\n\t\tpart through the use and efforts of others.\n\t\t\n\n\t\tFor these and/or other purposes and motivations, and without any\n\t\texpectation of additional consideration or compensation, the person\n\t\tassociating CC0 with a Work (the \"Affirmer\"), to the extent that he or she\n\t\tis an owner of Copyright and Related Rights in the Work, voluntarily\n\t\telects to apply CC0 to the Work and publicly distribute the Work under its\n\t\tterms, with knowledge of his or her Copyright and Related Rights in the\n\t\tWork and the meaning and intended legal effect of CC0 on those rights.\n\t\t\n\n\t\t1. Copyright and Related Rights. A Work made available under CC0 may be\n\t\tprotected by copyright and related or neighboring rights (\"Copyright and\n\t\tRelated Rights\"). Copyright and Related Rights include, but are not\n\t\tlimited to, the following:\n\t\t\n\n\t\t  i. the right to reproduce, adapt, distribute, perform, display,\n\t\t     communicate, and translate a Work;\n\t\t ii. moral rights retained by the original author(s) and/or performer(s);\n\t\tiii. publicity and privacy rights pertaining to a person's image or\n\t\t     likeness depicted in a Work;\n\t\t iv. rights protecting against unfair competition in regards to a Work,\n\t\t     subject to the limitations in paragraph 4(a), below;\n\t\t  v. rights protecting the extraction, dissemination, use and reuse of data\n\t\t     in a Work;\n\t\t vi. database rights (such as those arising under Directive 96/9/EC of the\n\t\t     European Parliament and of the Council of 11 March 1996 on the legal\n\t\t     protection of databases, and under any national implementation\n\t\t     thereof, including any amended or successor version of such\n\t\t     directive); and\n\t\tvii. other similar, equivalent or corresponding rights throughout the\n\t\t     world based on applicable law or treaty, and any national\n\t\t     implementations thereof.\n\t\t\n\n\t\t2. Waiver. To the greatest extent permitted by, but not in contravention\n\t\tof, applicable law, Affirmer hereby overtly, fully, permanently,\n\t\tirrevocably and unconditionally waives, abandons, and surrenders all of\n\t\tAffirmer's Copyright and Related Rights and associated claims and causes\n\t\tof action, whether now known or unknown (including existing as well as\n\t\tfuture claims and causes of action), in the Work (i) in all territories\n\t\tworldwide, (ii) for the maximum duration provided by applicable law or\n\t\ttreaty (including future time extensions), (iii) in any current or future\n\t\tmedium and for any number of copies, and (iv) for any purpose whatsoever,\n\t\tincluding without limitation commercial, advertising or promotional\n\t\tpurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\n\t\tmember of the public at large and to the detriment of Affirmer's heirs and\n\t\tsuccessors, fully intending that such Waiver shall not be subject to\n\t\trevocation, rescission, cancellation, termination, or any other legal or\n\t\tequitable action to disrupt the quiet enjoyment of the Work by the public\n\t\tas contemplated by Affirmer's express Statement of Purpose.\n\t\t\n\n\t\t3. Public License Fallback. Should any part of the Waiver for any reason\n\t\tbe judged legally invalid or ineffective under applicable law, then the\n\t\tWaiver shall be preserved to the maximum extent permitted taking into\n\t\taccount Affirmer's express Statement of Purpose. In addition, to the\n\t\textent the Waiver is so judged Affirmer hereby grants to each affected\n\t\tperson a royalty-free, non transferable, non sublicensable, non exclusive,\n\t\tirrevocable and unconditional license to exercise Affirmer's Copyright and\n\t\tRelated Rights in the Work (i) in all territories worldwide, (ii) for the\n\t\tmaximum duration provided by applicable law or treaty (including future\n\t\ttime extensions), (iii) in any current or future medium and for any number\n\t\tof copies, and (iv) for any purpose whatsoever, including without\n\t\tlimitation commercial, advertising or promotional purposes (the\n\t\t\"License\"). The License shall be deemed effective as of the date CC0 was\n\t\tapplied by Affirmer to the Work. Should any part of the License for any\n\t\treason be judged legally invalid or ineffective under applicable law, such\n\t\tpartial invalidity or ineffectiveness shall not invalidate the remainder\n\t\tof the License, and in such case Affirmer hereby affirms that he or she\n\t\twill not (i) exercise any of his or her remaining Copyright and Related\n\t\tRights in the Work or (ii) assert any associated claims and causes of\n\t\taction with respect to the Work, in either case contrary to Affirmer's\n\t\texpress Statement of Purpose.\n\t\t\n\n\t\t4. Limitations and Disclaimers.\n\t\t\n\n\t\t a. No trademark or patent rights held by Affirmer are waived, abandoned,\n\t\t    surrendered, licensed or otherwise affected by this document.\n\t\t b. Affirmer offers the Work as-is and makes no representations or\n\t\t    warranties of any kind concerning the Work, express, implied,\n\t\t    statutory or otherwise, including without limitation warranties of\n\t\t    title, merchantability, fitness for a particular purpose, non\n\t\t    infringement, or the absence of latent or other defects, accuracy, or\n\t\t    the present or absence of errors, whether or not discoverable, all to\n\t\t    the greatest extent permissible under applicable law.\n\t\t c. Affirmer disclaims responsibility for clearing rights of other persons\n\t\t    that may apply to the Work or any use thereof, including without\n\t\t    limitation any person's Copyright and Related Rights in the Work.\n\t\t    Further, Affirmer disclaims responsibility for obtaining any necessary\n\t\t    consents, permissions or other rights required for any use of the\n\t\t    Work.\n\t\t d. Affirmer understands and acknowledges that Creative Commons is not a\n\t\t    party to this document and has no duty or obligation with respect to\n\t\t    this CC0 or use of the Work.\n\t\tAttribution-ShareAlike 4.0 International\n\t\t\n\n\t\t=======================================================================\n\t\t\n\n\t\tCreative Commons Corporation (\"Creative Commons\") is not a law firm and\n\t\tdoes not provide legal services or legal advice. Distribution of\n\t\tCreative Commons public licenses does not create a lawyer-client or\n\t\tother relationship. Creative Commons makes its licenses and related\n\t\tinformation available on an \"as-is\" basis. Creative Commons gives no\n\t\twarranties regarding its licenses, any material licensed under their\n\t\tterms and conditions, or any related information. Creative Commons\n\t\tdisclaims all liability for damages resulting from their use to the\n\t\tfullest extent possible.\n\t\t\n\n\t\tUsing Creative Commons Public Licenses\n\t\t\n\n\t\tCreative Commons public licenses provide a standard set of terms and\n\t\tconditions that creators and other rights holders may use to share\n\t\toriginal works of authorship and other material subject to copyright\n\t\tand certain other rights specified in the public license below. The\n\t\tfollowing considerations are for informational purposes only, are not\n\t\texhaustive, and do not form part of our licenses.\n\t\t\n\n\t\t     Considerations for licensors: Our public licenses are\n\t\t     intended for use by those authorized to give the public\n\t\t     permission to use material in ways otherwise restricted by\n\t\t     copyright and certain other rights. Our licenses are\n\t\t     irrevocable. Licensors should read and understand the terms\n\t\t     and conditions of the license they choose before applying it.\n\t\t     Licensors should also secure all rights necessary before\n\t\t     applying our licenses so that the public can reuse the\n\t\t     material as expected. Licensors should clearly mark any\n\t\t     material not subject to the license. This includes other CC-\n\t\t     licensed material, or material used under an exception or\n\t\t     limitation to copyright. More considerations for licensors:\n\t\t\twiki.creativecommons.org/Considerations_for_licensors\n\t\t\n\n\t\t     Considerations for the public: By using one of our public\n\t\t     licenses, a licensor grants the public permission to use the\n\t\t     licensed material under specified terms and conditions. If\n\t\t     the licensor's permission is not necessary for any reason--for\n\t\t     example, because of any applicable exception or limitation to\n\t\t     copyright--then that use is not regulated by the license. Our\n\t\t     licenses grant only permissions under copyright and certain\n\t\t     other rights that a licensor has authority to grant. Use of\n\t\t     the licensed material may still be restricted for other\n\t\t     reasons, including because others have copyright or other\n\t\t     rights in the material. A licensor may make special requests,\n\t\t     such as asking that all changes be marked or described.\n\t\t     Although not required by our licenses, you are encouraged to\n\t\t     respect those requests where reasonable. More_considerations\n\t\t     for the public: \n\t\t\twiki.creativecommons.org/Considerations_for_licensees\n\t\t\n\n\t\t=======================================================================\n\t\t\n\n\t\tCreative Commons Attribution-ShareAlike 4.0 International Public\n\t\tLicense\n\t\t\n\n\t\tBy exercising the Licensed Rights (defined below), You accept and agree\n\t\tto be bound by the terms and conditions of this Creative Commons\n\t\tAttribution-ShareAlike 4.0 International Public License (\"Public\n\t\tLicense\"). To the extent this Public License may be interpreted as a\n\t\tcontract, You are granted the Licensed Rights in consideration of Your\n\t\tacceptance of these terms and conditions, and the Licensor grants You\n\t\tsuch rights in consideration of benefits the Licensor receives from\n\t\tmaking the Licensed Material available under these terms and\n\t\tconditions.\n\t\t\n\n\t\t\n\n\t\tSection 1 -- Definitions.\n\t\t\n\n\t\t  a. Adapted Material means material subject to Copyright and Similar\n\t\t     Rights that is derived from or based upon the Licensed Material\n\t\t     and in which the Licensed Material is translated, altered,\n\t\t     arranged, transformed, or otherwise modified in a manner requiring\n\t\t     permission under the Copyright and Similar Rights held by the\n\t\t     Licensor. For purposes of this Public License, where the Licensed\n\t\t     Material is a musical work, performance, or sound recording,\n\t\t     Adapted Material is always produced where the Licensed Material is\n\t\t     synched in timed relation with a moving image.\n\t\t\n\n\t\t  b. Adapter's License means the license You apply to Your Copyright\n\t\t     and Similar Rights in Your contributions to Adapted Material in\n\t\t     accordance with the terms and conditions of this Public License.\n\t\t\n\n\t\t  c. BY-SA Compatible License means a license listed at\n\t\t     creativecommons.org/compatiblelicenses, approved by Creative\n\t\t     Commons as essentially the equivalent of this Public License.\n\t\t\n\n\t\t  d. Copyright and Similar Rights means copyright and/or similar rights\n\t\t     closely related to copyright including, without limitation,\n\t\t     performance, broadcast, sound recording, and Sui Generis Database\n\t\t     Rights, without regard to how the rights are labeled or\n\t\t     categorized. For purposes of this Public License, the rights\n\t\t     specified in Section 2(b)(1)-(2) are not Copyright and Similar\n\t\t     Rights.\n\t\t\n\n\t\t  e. Effective Technological Measures means those measures that, in the\n\t\t     absence of proper authority, may not be circumvented under laws\n\t\t     fulfilling obligations under Article 11 of the WIPO Copyright\n\t\t     Treaty adopted on December 20, 1996, and/or similar international\n\t\t     agreements.\n\t\t\n\n\t\t  f. Exceptions and Limitations means fair use, fair dealing, and/or\n\t\t     any other exception or limitation to Copyright and Similar Rights\n\t\t     that applies to Your use of the Licensed Material.\n\t\t\n\n\t\t  g. License Elements means the license attributes listed in the name\n\t\t     of a Creative Commons Public License. The License Elements of this\n\t\t     Public License are Attribution and ShareAlike.\n\t\t\n\n\t\t  h. Licensed Material means the artistic or literary work, database,\n\t\t     or other material to which the Licensor applied this Public\n\t\t     License.\n\t\t\n\n\t\t  i. Licensed Rights means the rights granted to You subject to the\n\t\t     terms and conditions of this Public License, which are limited to\n\t\t     all Copyright and Similar Rights that apply to Your use of the\n\t\t     Licensed Material and that the Licensor has authority to license.\n\t\t\n\n\t\t  j. Licensor means the individual(s) or entity(ies) granting rights\n\t\t     under this Public License.\n\t\t\n\n\t\t  k. Share means to provide material to the public by any means or\n\t\t     process that requires permission under the Licensed Rights, such\n\t\t     as reproduction, public display, public performance, distribution,\n\t\t     dissemination, communication, or importation, and to make material\n\t\t     available to the public including in ways that members of the\n\t\t     public may access the material from a place and at a time\n\t\t     individually chosen by them.\n\t\t\n\n\t\t  l. Sui Generis Database Rights means rights other than copyright\n\t\t     resulting from Directive 96/9/EC of the European Parliament and of\n\t\t     the Council of 11 March 1996 on the legal protection of databases,\n\t\t     as amended and/or succeeded, as well as other essentially\n\t\t     equivalent rights anywhere in the world.\n\t\t\n\n\t\t  m. You means the individual or entity exercising the Licensed Rights\n\t\t     under this Public License. Your has a corresponding meaning.\n\t\t\n\n\t\t\n\n\t\tSection 2 -- Scope.\n\t\t\n\n\t\t  a. License grant.\n\t\t\n\n\t\t       1. Subject to the terms and conditions of this Public License,\n\t\t          the Licensor hereby grants You a worldwide, royalty-free,\n\t\t          non-sublicensable, non-exclusive, irrevocable license to\n\t\t          exercise the Licensed Rights in the Licensed Material to:\n\t\t\n\n\t\t            a. reproduce and Share the Licensed Material, in whole or\n\t\t               in part; and\n\t\t\n\n\t\t            b. produce, reproduce, and Share Adapted Material.\n\t\t\n\n\t\t       2. Exceptions and Limitations. For the avoidance of doubt, where\n\t\t          Exceptions and Limitations apply to Your use, this Public\n\t\t          License does not apply, and You do not need to comply with\n\t\t          its terms and conditions.\n\t\t\n\n\t\t       3. Term. The term of this Public License is specified in Section\n\t\t          6(a).\n\t\t\n\n\t\t       4. Media and formats; technical modifications allowed. The\n\t\t          Licensor authorizes You to exercise the Licensed Rights in\n\t\t          all media and formats whether now known or hereafter created,\n\t\t          and to make technical modifications necessary to do so. The\n\t\t          Licensor waives and/or agrees not to assert any right or\n\t\t          authority to forbid You from making technical modifications\n\t\t          necessary to exercise the Licensed Rights, including\n\t\t          technical modifications necessary to circumvent Effective\n\t\t          Technological Measures. For purposes of this Public License,\n\t\t          simply making modifications authorized by this Section 2(a)\n\t\t          (4) never produces Adapted Material.\n\t\t\n\n\t\t       5. Downstream recipients.\n\t\t\n\n\t\t            a. Offer from the Licensor -- Licensed Material. Every\n\t\t               recipient of the Licensed Material automatically\n\t\t               receives an offer from the Licensor to exercise the\n\t\t               Licensed Rights under the terms and conditions of this\n\t\t               Public License.\n\t\t\n\n\t\t            b. Additional offer from the Licensor -- Adapted Material.\n\t\t               Every recipient of Adapted Material from You\n\t\t               automatically receives an offer from the Licensor to\n\t\t               exercise the Licensed Rights in the Adapted Material\n\t\t               under the conditions of the Adapter's License You apply.\n\t\t\n\n\t\t            c. No downstream restrictions. You may not offer or impose\n\t\t               any additional or different terms or conditions on, or\n\t\t               apply any Effective Technological Measures to, the\n\t\t               Licensed Material if doing so restricts exercise of the\n\t\t               Licensed Rights by any recipient of the Licensed\n\t\t               Material.\n\t\t\n\n\t\t       6. No endorsement. Nothing in this Public License constitutes or\n\t\t          may be construed as permission to assert or imply that You\n\t\t          are, or that Your use of the Licensed Material is, connected\n\t\t          with, or sponsored, endorsed, or granted official status by,\n\t\t          the Licensor or others designated to receive attribution as\n\t\t          provided in Section 3(a)(1)(A)(i).\n\t\t\n\n\t\t  b. Other rights.\n\t\t\n\n\t\t       1. Moral rights, such as the right of integrity, are not\n\t\t          licensed under this Public License, nor are publicity,\n\t\t          privacy, and/or other similar personality rights; however, to\n\t\t          the extent possible, the Licensor waives and/or agrees not to\n\t\t          assert any such rights held by the Licensor to the limited\n\t\t          extent necessary to allow You to exercise the Licensed\n\t\t          Rights, but not otherwise.\n\t\t\n\n\t\t       2. Patent and trademark rights are not licensed under this\n\t\t          Public License.\n\t\t\n\n\t\t       3. To the extent possible, the Licensor waives any right to\n\t\t          collect royalties from You for the exercise of the Licensed\n\t\t          Rights, whether directly or through a collecting society\n\t\t          under any voluntary or waivable statutory or compulsory\n\t\t          licensing scheme. In all other cases the Licensor expressly\n\t\t          reserves any right to collect such royalties.\n\t\t\n\n\t\t\n\n\t\tSection 3 -- License Conditions.\n\t\t\n\n\t\tYour exercise of the Licensed Rights is expressly made subject to the\n\t\tfollowing conditions.\n\t\t\n\n\t\t  a. Attribution.\n\t\t\n\n\t\t       1. If You Share the Licensed Material (including in modified\n\t\t          form), You must:\n\t\t\n\n\t\t            a. retain the following if it is supplied by the Licensor\n\t\t               with the Licensed Material:\n\t\t\n\n\t\t                 i. identification of the creator(s) of the Licensed\n\t\t                    Material and any others designated to receive\n\t\t                    attribution, in any reasonable manner requested by\n\t\t                    the Licensor (including by pseudonym if\n\t\t                    designated);\n\t\t\n\n\t\t                ii. a copyright notice;\n\t\t\n\n\t\t               iii. a notice that refers to this Public License;\n\t\t\n\n\t\t                iv. a notice that refers to the disclaimer of\n\t\t                    warranties;\n\t\t\n\n\t\t                 v. a URI or hyperlink to the Licensed Material to the\n\t\t                    extent reasonably practicable;\n\t\t\n\n\t\t            b. indicate if You modified the Licensed Material and\n\t\t               retain an indication of any previous modifications; and\n\t\t\n\n\t\t            c. indicate the Licensed Material is licensed under this\n\t\t               Public License, and include the text of, or the URI or\n\t\t               hyperlink to, this Public License.\n\t\t\n\n\t\t       2. You may satisfy the conditions in Section 3(a)(1) in any\n\t\t          reasonable manner based on the medium, means, and context in\n\t\t          which You Share the Licensed Material. For example, it may be\n\t\t          reasonable to satisfy the conditions by providing a URI or\n\t\t          hyperlink to a resource that includes the required\n\t\t          information.\n\t\t\n\n\t\t       3. If requested by the Licensor, You must remove any of the\n\t\t          information required by Section 3(a)(1)(A) to the extent\n\t\t          reasonably practicable.\n\t\t\n\n\t\t  b. ShareAlike.\n\t\t\n\n\t\t     In addition to the conditions in Section 3(a), if You Share\n\t\t     Adapted Material You produce, the following conditions also apply.\n\t\t\n\n\t\t       1. The Adapter's License You apply must be a Creative Commons\n\t\t          license with the same License Elements, this version or\n\t\t          later, or a BY-SA Compatible License.\n\t\t\n\n\t\t       2. You must include the text of, or the URI or hyperlink to, the\n\t\t          Adapter's License You apply. You may satisfy this condition\n\t\t          in any reasonable manner based on the medium, means, and\n\t\t          context in which You Share Adapted Material.\n\t\t\n\n\t\t       3. You may not offer or impose any additional or different terms\n\t\t          or conditions on, or apply any Effective Technological\n\t\t          Measures to, Adapted Material that restrict exercise of the\n\t\t          rights granted under the Adapter's License You apply.\n\t\t\n\n\t\t\n\n\t\tSection 4 -- Sui Generis Database Rights.\n\t\t\n\n\t\tWhere the Licensed Rights include Sui Generis Database Rights that\n\t\tapply to Your use of the Licensed Material:\n\t\t\n\n\t\t  a. for the avoidance of doubt, Section 2(a)(1) grants You the right\n\t\t     to extract, reuse, reproduce, and Share all or a substantial\n\t\t     portion of the contents of the database;\n\t\t\n\n\t\t  b. if You include all or a substantial portion of the database\n\t\t     contents in a database in which You have Sui Generis Database\n\t\t     Rights, then the database in which You have Sui Generis Database\n\t\t     Rights (but not its individual contents) is Adapted Material,\n\t\t\n\n\t\t     including for purposes of Section 3(b); and\n\t\t  c. You must comply with the conditions in Section 3(a) if You Share\n\t\t     all or a substantial portion of the contents of the database.\n\t\t\n\n\t\tFor the avoidance of doubt, this Section 4 supplements and does not\n\t\treplace Your obligations under this Public License where the Licensed\n\t\tRights include other Copyright and Similar Rights.\n\t\t\n\n\t\t\n\n\t\tSection 5 -- Disclaimer of Warranties and Limitation of Liability.\n\t\t\n\n\t\t  a. UNLESS OTHERWISE SEPARATELY UNDERTAKEN BY THE LICENSOR, TO THE\n\t\t     EXTENT POSSIBLE, THE LICENSOR OFFERS THE LICENSED MATERIAL AS-IS\n\t\t     AND AS-AVAILABLE, AND MAKES NO REPRESENTATIONS OR WARRANTIES OF\n\t\t     ANY KIND CONCERNING THE LICENSED MATERIAL, WHETHER EXPRESS,\n\t\t     IMPLIED, STATUTORY, OR OTHER. THIS INCLUDES, WITHOUT LIMITATION,\n\t\t     WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR\n\t\t     PURPOSE, NON-INFRINGEMENT, ABSENCE OF LATENT OR OTHER DEFECTS,\n\t\t     ACCURACY, OR THE PRESENCE OR ABSENCE OF ERRORS, WHETHER OR NOT\n\t\t     KNOWN OR DISCOVERABLE. WHERE DISCLAIMERS OF WARRANTIES ARE NOT\n\t\t     ALLOWED IN FULL OR IN PART, THIS DISCLAIMER MAY NOT APPLY TO YOU.\n\t\t\n\n\t\t  b. TO THE EXTENT POSSIBLE, IN NO EVENT WILL THE LICENSOR BE LIABLE\n\t\t     TO YOU ON ANY LEGAL THEORY (INCLUDING, WITHOUT LIMITATION,\n\t\t     NEGLIGENCE) OR OTHERWISE FOR ANY DIRECT, SPECIAL, INDIRECT,\n\t\t     INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, OR OTHER LOSSES,\n\t\t     COSTS, EXPENSES, OR DAMAGES ARISING OUT OF THIS PUBLIC LICENSE OR\n\t\t     USE OF THE LICENSED MATERIAL, EVEN IF THE LICENSOR HAS BEEN\n\t\t     ADVISED OF THE POSSIBILITY OF SUCH LOSSES, COSTS, EXPENSES, OR\n\t\t     DAMAGES. WHERE A LIMITATION OF LIABILITY IS NOT ALLOWED IN FULL OR\n\t\t     IN PART, THIS LIMITATION MAY NOT APPLY TO YOU.\n\t\t\n\n\t\t  c. The disclaimer of warranties and limitation of liability provided\n\t\t     above shall be interpreted in a manner that, to the extent\n\t\t     possible, most closely approximates an absolute disclaimer and\n\t\t     waiver of all liability.\n\t\t\n\n\t\t\n\n\t\tSection 6 -- Term and Termination.\n\t\t\n\n\t\t  a. This Public License applies for the term of the Copyright and\n\t\t     Similar Rights licensed here. However, if You fail to comply with\n\t\t     this Public License, then Your rights under this Public License\n\t\t     terminate automatically.\n\t\t\n\n\t\t  b. Where Your right to use the Licensed Material has terminated under\n\t\t     Section 6(a), it reinstates:\n\t\t\n\n\t\t       1. automatically as of the date the violation is cured, provided\n\t\t          it is cured within 30 days of Your discovery of the\n\t\t          violation; or\n\t\t\n\n\t\t       2. upon express reinstatement by the Licensor.\n\t\t\n\n\t\t     For the avoidance of doubt, this Section 6(b) does not affect any\n\t\t     right the Licensor may have to seek remedies for Your violations\n\t\t     of this Public License.\n\t\t\n\n\t\t  c. For the avoidance of doubt, the Licensor may also offer the\n\t\t     Licensed Material under separate terms or conditions or stop\n\t\t     distributing the Licensed Material at any time; however, doing so\n\t\t     will not terminate this Public License.\n\t\t\n\n\t\t  d. Sections 1, 5, 6, 7, and 8 survive termination of this Public\n\t\t     License.\n\t\t\n\n\t\t\n\n\t\tSection 7 -- Other Terms and Conditions.\n\t\t\n\n\t\t  a. The Licensor shall not be bound by any additional or different\n\t\t     terms or conditions communicated by You unless expressly agreed.\n\t\t\n\n\t\t  b. Any arrangements, understandings, or agreements regarding the\n\t\t     Licensed Material not stated herein are separate from and\n\t\t     independent of the terms and conditions of this Public License.\n\t\t\n\n\t\t\n\n\t\tSection 8 -- Interpretation.\n\t\t\n\n\t\t  a. For the avoidance of doubt, this Public License does not, and\n\t\t     shall not be interpreted to, reduce, limit, restrict, or impose\n\t\t     conditions on any use of the Licensed Material that could lawfully\n\t\t     be made without permission under this Public License.\n\t\t\n\n\t\t  b. To the extent possible, if any provision of this Public License is\n\t\t     deemed unenforceable, it shall be automatically reformed to the\n\t\t     minimum extent necessary to make it enforceable. If the provision\n\t\t     cannot be reformed, it shall be severed from this Public License\n\t\t     without affecting the enforceability of the remaining terms and\n\t\t     conditions.\n\t\t\n\n\t\t  c. No term or condition of this Public License will be waived and no\n\t\t     failure to comply consented to unless expressly agreed to by the\n\t\t     Licensor.\n\t\t\n\n\t\t  d. Nothing in this Public License constitutes or may be interpreted\n\t\t     as a limitation upon, or waiver of, any privileges and immunities\n\t\t     that apply to the Licensor or You, including from the legal\n\t\t     processes of any jurisdiction or authority.\n\t\t\n\n\t\t\n\n\t\t=======================================================================\n\t\t\n\n\t\tCreative Commons is not a party to its public\n\t\tlicenses. Notwithstanding, Creative Commons may elect to apply one of\n\t\tits public licenses to material it publishes and in those instances\n\t\twill be considered the “Licensor.” The text of the Creative Commons\n\t\tpublic licenses is dedicated to the public domain under the CC0 Public\n\t\tDomain Dedication. Except for the limited purpose of indicating that\n\t\tmaterial is shared under a Creative Commons public license or as\n\t\totherwise permitted by the Creative Commons policies published at\n\t\tcreativecommons.org/policies, Creative Commons does not authorize the\n\t\tuse of the trademark \"Creative Commons\" or any other trademark or logo\n\t\tof Creative Commons without its prior written consent including,\n\t\twithout limitation, in connection with any unauthorized modifications\n\t\tto any of its public licenses or any other arrangements,\n\t\tunderstandings, or agreements concerning use of licensed material. For\n\t\tthe avoidance of doubt, this paragraph does not form part of the\n\t\tpublic licenses.\n\t\t\n\n\t\tCreative Commons may be contacted at creativecommons.org.\n0 comments on commit 9a57c20\nPlease sign in to comment.\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "GitHub - sui-foundation/sui-move-intro-course: Introductory Course to the Sui Move language",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/tree/main",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nsui-foundation/sui-move-intro-course\n main\n4 Branches\n0 Tags\nCode\nFolders and files\nName\tLast commit message\tLast commit date\n\nLatest commit\nuvd\nMerge pull request #77 from uvd/main\n0c9c5bd\n · \nHistory\n335 Commits\n\n\n.github\n\t\nfeat: move 2024\n\t\n\n\nadvanced-topics\n\t\nfeat: move 2024\n\t\n\n\nexercises\n\t\nfeat: move 2024\n\t\n\n\nsrc\n\t\nfeat: check code\n\t\n\n\nunit-five\n\t\nfeat: move 2024\n\t\n\n\nunit-four\n\t\nfeat: move 2024\n\t\n\n\nunit-one\n\t\nfeat: move 2024\n\t\n\n\nunit-three\n\t\nfeat: move 2024\n\t\n\n\nunit-two\n\t\nfeat: move 2024\n\t\n\n\n.gitignore\n\t\nfeat: Sui Kiosk (wip)\n\t\n\n\nLICENSE\n\t\nUpdate LICENSE\n\t\n\n\nREADME.md\n\t\nMerge pull request #73 from sui-foundation/daniel/adding-kiosk-basics\n\t\n\n\nSUMMARY.md\n\t\nfeat: move 2024\n\t\n\n\nbook.toml\n\t\nadd mdbook\n\t\nRepository files navigation\nREADME\nCC-BY-SA-4.0 license\nMove Intro Course\n\nIntroductory course to the Move language maintained by Sui Foundation.\n\nContent\nUnit One: Environment Setup and Hello World\nSet Up Environment\nSui Project Structure\nCustom Types and Abilities\nFunctions\nContract Deployment\nUnit Two: Working with Sui Objects\nIntroduction\nOwnership\nParameter Passing and Object Deletion\nObject Wrapping\nObject Wrapping by Example\nCapability Design Pattern\nEvents\nUnit Three: Fungible Tokens\nSui Framework\nIntro to Generics\nWitness Design Pattern\nThe Coin Resource and create_currency Method\nManaged Coin Example\nClock and Locked Coin\nUnit Testing\nUnit Four: Marketplace\nHomogeneous Collections\nDynamic Fields\nHeterogeneous Collections\nMarketplace Contract\nDeployment and Testing\nUnit Five: Sui Kiosk\nProgrammable Transaction Block\nHot Potato Design Pattern\nSui Kiosk Basic Concepts\nSui Kiosk Basic Usage\nTransfer Policy\nAdvanced Topics\nBCS Encoding\nTODOs\n Write BCS lesson for advanced topics\n Create a multi-platform Docker image\n Create exercises for each unit\n Add content on Display.move\n Add content on clock and example on token unlocking\n Write advanced topic lesson on closed loop token standard\n Write advanced topic lesson on package upgrades\n Write new lesson on kiosks\n Check and update Unit One against latest version of Sui\n Check and update Unit Two against latest version of Sui\n Check and update Unit Three against latest version of Sui\n Check and update Unit Four against latest version of Sui\n Check and update Advanced Topics against latest version of Sui\nGeneral Developer Resources\nSui Developer Documentation\nSui Developer Portal\nSui GitHub\nSui Framework Documentation\nSui Typescript SDK (official)\nSui Typescript SDK (community)\nSui Rust SDK (official)\nSui Golang SDK (community)\nSui Python SDK (community)\nSui Java SDK (community)\nSui Kotlin SDK (community)\nSui C# SDK (community)\nSui Dart SDK(community)\nSui Explorer\nSocials and Communities\n\nIf you want to join Sui's online communities, you can join via following links:\n\nSui Network Twitter\nSui Official Discord\nSui Developer Forums\nRepo Translations\n English\n Chinese\n Thai\n\nPlease get in touch if you want to help translate this into other languages.\n\nVideos and Other Formats\n Encode Club Video Series (English) YouTube playlist | tutorial and code\n BuidlerDAO Video Series (Chinese)\n MoveBit Move on Sui Course (English) YouTube playlist | tutorial and code\nFAQ\n\nCan I use the content of this repo to produce other educational content related to Sui or Sui Move programming language?\n\nYes. That is the original intention of this repo, to allow content creators and educational platforms to use and expand on the material within this repo to create different forms of media or technical content about Sui or the Sui Move language.\n\nThis repo is licensed under the Creative Common License; CC-BY-SA-4.0 license, to be specific. This allows anyone to remix, transform, build or share the content in this repo for whatever purposes, but any content based on this repo also needs to be licensed under the same Creative Common License, and give an attribution to the source.\n\nHow can I contribute to this repo?\n\nFork and open a PR against the upstream repo. We are open to community contributions.\n\nAbout\n\nIntroductory Course to the Sui Move language\n\nResources\n Readme\nLicense\n CC-BY-SA-4.0 license\n Activity\n Custom properties\nStars\n 2k stars\nWatchers\n 17 watching\nForks\n 73 forks\nReport repository\n\n\nReleases\nNo releases published\n\n\nPackages\nNo packages published\n\n\n\nContributors\n20\n+ 6 contributors\n\n\nLanguages\nMove\n91.4%\n \nJavaScript\n8.6%\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "",
      "url": "https://raw.githubusercontent.com/sui-foundation/sui-move-intro-course/main/LICENSE",
      "html": "Attribution-ShareAlike 4.0 International\n\n=======================================================================\n\nCreative Commons Corporation (\"Creative Commons\") is not a law firm and\ndoes not provide legal services or legal advice. Distribution of\nCreative Commons public licenses does not create a lawyer-client or\nother relationship. Creative Commons makes its licenses and related\ninformation available on an \"as-is\" basis. Creative Commons gives no\nwarranties regarding its licenses, any material licensed under their\nterms and conditions, or any related information. Creative Commons\ndisclaims all liability for damages resulting from their use to the\nfullest extent possible.\n\nUsing Creative Commons Public Licenses\n\nCreative Commons public licenses provide a standard set of terms and\nconditions that creators and other rights holders may use to share\noriginal works of authorship and other material subject to copyright\nand certain other rights specified in the public license below. The\nfollowing considerations are for informational purposes only, are not\nexhaustive, and do not form part of our licenses.\n\n     Considerations for licensors: Our public licenses are\n     intended for use by those authorized to give the public\n     permission to use material in ways otherwise restricted by\n     copyright and certain other rights. Our licenses are\n     irrevocable. Licensors should read and understand the terms\n     and conditions of the license they choose before applying it.\n     Licensors should also secure all rights necessary before\n     applying our licenses so that the public can reuse the\n     material as expected. Licensors should clearly mark any\n     material not subject to the license. This includes other CC-\n     licensed material, or material used under an exception or\n     limitation to copyright. More considerations for licensors:\n\twiki.creativecommons.org/Considerations_for_licensors\n\n     Considerations for the public: By using one of our public\n     licenses, a licensor grants the public permission to use the\n     licensed material under specified terms and conditions. If\n     the licensor's permission is not necessary for any reason--for\n     example, because of any applicable exception or limitation to\n     copyright--then that use is not regulated by the license. Our\n     licenses grant only permissions under copyright and certain\n     other rights that a licensor has authority to grant. Use of\n     the licensed material may still be restricted for other\n     reasons, including because others have copyright or other\n     rights in the material. A licensor may make special requests,\n     such as asking that all changes be marked or described.\n     Although not required by our licenses, you are encouraged to\n     respect those requests where reasonable. More_considerations\n     for the public: \n\twiki.creativecommons.org/Considerations_for_licensees\n\n=======================================================================\n\nCreative Commons Attribution-ShareAlike 4.0 International Public\nLicense\n\nBy exercising the Licensed Rights (defined below), You accept and agree\nto be bound by the terms and conditions of this Creative Commons\nAttribution-ShareAlike 4.0 International Public License (\"Public\nLicense\"). To the extent this Public License may be interpreted as a\ncontract, You are granted the Licensed Rights in consideration of Your\nacceptance of these terms and conditions, and the Licensor grants You\nsuch rights in consideration of benefits the Licensor receives from\nmaking the Licensed Material available under these terms and\nconditions.\n\n\nSection 1 -- Definitions.\n\n  a. Adapted Material means material subject to Copyright and Similar\n     Rights that is derived from or based upon the Licensed Material\n     and in which the Licensed Material is translated, altered,\n     arranged, transformed, or otherwise modified in a manner requiring\n     permission under the Copyright and Similar Rights held by the\n     Licensor. For purposes of this Public License, where the Licensed\n     Material is a musical work, performance, or sound recording,\n     Adapted Material is always produced where the Licensed Material is\n     synched in timed relation with a moving image.\n\n  b. Adapter's License means the license You apply to Your Copyright\n     and Similar Rights in Your contributions to Adapted Material in\n     accordance with the terms and conditions of this Public License.\n\n  c. BY-SA Compatible License means a license listed at\n     creativecommons.org/compatiblelicenses, approved by Creative\n     Commons as essentially the equivalent of this Public License.\n\n  d. Copyright and Similar Rights means copyright and/or similar rights\n     closely related to copyright including, without limitation,\n     performance, broadcast, sound recording, and Sui Generis Database\n     Rights, without regard to how the rights are labeled or\n     categorized. For purposes of this Public License, the rights\n     specified in Section 2(b)(1)-(2) are not Copyright and Similar\n     Rights.\n\n  e. Effective Technological Measures means those measures that, in the\n     absence of proper authority, may not be circumvented under laws\n     fulfilling obligations under Article 11 of the WIPO Copyright\n     Treaty adopted on December 20, 1996, and/or similar international\n     agreements.\n\n  f. Exceptions and Limitations means fair use, fair dealing, and/or\n     any other exception or limitation to Copyright and Similar Rights\n     that applies to Your use of the Licensed Material.\n\n  g. License Elements means the license attributes listed in the name\n     of a Creative Commons Public License. The License Elements of this\n     Public License are Attribution and ShareAlike.\n\n  h. Licensed Material means the artistic or literary work, database,\n     or other material to which the Licensor applied this Public\n     License.\n\n  i. Licensed Rights means the rights granted to You subject to the\n     terms and conditions of this Public License, which are limited to\n     all Copyright and Similar Rights that apply to Your use of the\n     Licensed Material and that the Licensor has authority to license.\n\n  j. Licensor means the individual(s) or entity(ies) granting rights\n     under this Public License.\n\n  k. Share means to provide material to the public by any means or\n     process that requires permission under the Licensed Rights, such\n     as reproduction, public display, public performance, distribution,\n     dissemination, communication, or importation, and to make material\n     available to the public including in ways that members of the\n     public may access the material from a place and at a time\n     individually chosen by them.\n\n  l. Sui Generis Database Rights means rights other than copyright\n     resulting from Directive 96/9/EC of the European Parliament and of\n     the Council of 11 March 1996 on the legal protection of databases,\n     as amended and/or succeeded, as well as other essentially\n     equivalent rights anywhere in the world.\n\n  m. You means the individual or entity exercising the Licensed Rights\n     under this Public License. Your has a corresponding meaning.\n\n\nSection 2 -- Scope.\n\n  a. License grant.\n\n       1. Subject to the terms and conditions of this Public License,\n          the Licensor hereby grants You a worldwide, royalty-free,\n          non-sublicensable, non-exclusive, irrevocable license to\n          exercise the Licensed Rights in the Licensed Material to:\n\n            a. reproduce and Share the Licensed Material, in whole or\n               in part; and\n\n            b. produce, reproduce, and Share Adapted Material.\n\n       2. Exceptions and Limitations. For the avoidance of doubt, where\n          Exceptions and Limitations apply to Your use, this Public\n          License does not apply, and You do not need to comply with\n          its terms and conditions.\n\n       3. Term. The term of this Public License is specified in Section\n          6(a).\n\n       4. Media and formats; technical modifications allowed. The\n          Licensor authorizes You to exercise the Licensed Rights in\n          all media and formats whether now known or hereafter created,\n          and to make technical modifications necessary to do so. The\n          Licensor waives and/or agrees not to assert any right or\n          authority to forbid You from making technical modifications\n          necessary to exercise the Licensed Rights, including\n          technical modifications necessary to circumvent Effective\n          Technological Measures. For purposes of this Public License,\n          simply making modifications authorized by this Section 2(a)\n          (4) never produces Adapted Material.\n\n       5. Downstream recipients.\n\n            a. Offer from the Licensor -- Licensed Material. Every\n               recipient of the Licensed Material automatically\n               receives an offer from the Licensor to exercise the\n               Licensed Rights under the terms and conditions of this\n               Public License.\n\n            b. Additional offer from the Licensor -- Adapted Material.\n               Every recipient of Adapted Material from You\n               automatically receives an offer from the Licensor to\n               exercise the Licensed Rights in the Adapted Material\n               under the conditions of the Adapter's License You apply.\n\n            c. No downstream restrictions. You may not offer or impose\n               any additional or different terms or conditions on, or\n               apply any Effective Technological Measures to, the\n               Licensed Material if doing so restricts exercise of the\n               Licensed Rights by any recipient of the Licensed\n               Material.\n\n       6. No endorsement. Nothing in this Public License constitutes or\n          may be construed as permission to assert or imply that You\n          are, or that Your use of the Licensed Material is, connected\n          with, or sponsored, endorsed, or granted official status by,\n          the Licensor or others designated to receive attribution as\n          provided in Section 3(a)(1)(A)(i).\n\n  b. Other rights.\n\n       1. Moral rights, such as the right of integrity, are not\n          licensed under this Public License, nor are publicity,\n          privacy, and/or other similar personality rights; however, to\n          the extent possible, the Licensor waives and/or agrees not to\n          assert any such rights held by the Licensor to the limited\n          extent necessary to allow You to exercise the Licensed\n          Rights, but not otherwise.\n\n       2. Patent and trademark rights are not licensed under this\n          Public License.\n\n       3. To the extent possible, the Licensor waives any right to\n          collect royalties from You for the exercise of the Licensed\n          Rights, whether directly or through a collecting society\n          under any voluntary or waivable statutory or compulsory\n          licensing scheme. In all other cases the Licensor expressly\n          reserves any right to collect such royalties.\n\n\nSection 3 -- License Conditions.\n\nYour exercise of the Licensed Rights is expressly made subject to the\nfollowing conditions.\n\n  a. Attribution.\n\n       1. If You Share the Licensed Material (including in modified\n          form), You must:\n\n            a. retain the following if it is supplied by the Licensor\n               with the Licensed Material:\n\n                 i. identification of the creator(s) of the Licensed\n                    Material and any others designated to receive\n                    attribution, in any reasonable manner requested by\n                    the Licensor (including by pseudonym if\n                    designated);\n\n                ii. a copyright notice;\n\n               iii. a notice that refers to this Public License;\n\n                iv. a notice that refers to the disclaimer of\n                    warranties;\n\n                 v. a URI or hyperlink to the Licensed Material to the\n                    extent reasonably practicable;\n\n            b. indicate if You modified the Licensed Material and\n               retain an indication of any previous modifications; and\n\n            c. indicate the Licensed Material is licensed under this\n               Public License, and include the text of, or the URI or\n               hyperlink to, this Public License.\n\n       2. You may satisfy the conditions in Section 3(a)(1) in any\n          reasonable manner based on the medium, means, and context in\n          which You Share the Licensed Material. For example, it may be\n          reasonable to satisfy the conditions by providing a URI or\n          hyperlink to a resource that includes the required\n          information.\n\n       3. If requested by the Licensor, You must remove any of the\n          information required by Section 3(a)(1)(A) to the extent\n          reasonably practicable.\n\n  b. ShareAlike.\n\n     In addition to the conditions in Section 3(a), if You Share\n     Adapted Material You produce, the following conditions also apply.\n\n       1. The Adapter's License You apply must be a Creative Commons\n          license with the same License Elements, this version or\n          later, or a BY-SA Compatible License.\n\n       2. You must include the text of, or the URI or hyperlink to, the\n          Adapter's License You apply. You may satisfy this condition\n          in any reasonable manner based on the medium, means, and\n          context in which You Share Adapted Material.\n\n       3. You may not offer or impose any additional or different terms\n          or conditions on, or apply any Effective Technological\n          Measures to, Adapted Material that restrict exercise of the\n          rights granted under the Adapter's License You apply.\n\n\nSection 4 -- Sui Generis Database Rights.\n\nWhere the Licensed Rights include Sui Generis Database Rights that\napply to Your use of the Licensed Material:\n\n  a. for the avoidance of doubt, Section 2(a)(1) grants You the right\n     to extract, reuse, reproduce, and Share all or a substantial\n     portion of the contents of the database;\n\n  b. if You include all or a substantial portion of the database\n     contents in a database in which You have Sui Generis Database\n     Rights, then the database in which You have Sui Generis Database\n     Rights (but not its individual contents) is Adapted Material,\n\n     including for purposes of Section 3(b); and\n  c. You must comply with the conditions in Section 3(a) if You Share\n     all or a substantial portion of the contents of the database.\n\nFor the avoidance of doubt, this Section 4 supplements and does not\nreplace Your obligations under this Public License where the Licensed\nRights include other Copyright and Similar Rights.\n\n\nSection 5 -- Disclaimer of Warranties and Limitation of Liability.\n\n  a. UNLESS OTHERWISE SEPARATELY UNDERTAKEN BY THE LICENSOR, TO THE\n     EXTENT POSSIBLE, THE LICENSOR OFFERS THE LICENSED MATERIAL AS-IS\n     AND AS-AVAILABLE, AND MAKES NO REPRESENTATIONS OR WARRANTIES OF\n     ANY KIND CONCERNING THE LICENSED MATERIAL, WHETHER EXPRESS,\n     IMPLIED, STATUTORY, OR OTHER. THIS INCLUDES, WITHOUT LIMITATION,\n     WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR\n     PURPOSE, NON-INFRINGEMENT, ABSENCE OF LATENT OR OTHER DEFECTS,\n     ACCURACY, OR THE PRESENCE OR ABSENCE OF ERRORS, WHETHER OR NOT\n     KNOWN OR DISCOVERABLE. WHERE DISCLAIMERS OF WARRANTIES ARE NOT\n     ALLOWED IN FULL OR IN PART, THIS DISCLAIMER MAY NOT APPLY TO YOU.\n\n  b. TO THE EXTENT POSSIBLE, IN NO EVENT WILL THE LICENSOR BE LIABLE\n     TO YOU ON ANY LEGAL THEORY (INCLUDING, WITHOUT LIMITATION,\n     NEGLIGENCE) OR OTHERWISE FOR ANY DIRECT, SPECIAL, INDIRECT,\n     INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, OR OTHER LOSSES,\n     COSTS, EXPENSES, OR DAMAGES ARISING OUT OF THIS PUBLIC LICENSE OR\n     USE OF THE LICENSED MATERIAL, EVEN IF THE LICENSOR HAS BEEN\n     ADVISED OF THE POSSIBILITY OF SUCH LOSSES, COSTS, EXPENSES, OR\n     DAMAGES. WHERE A LIMITATION OF LIABILITY IS NOT ALLOWED IN FULL OR\n     IN PART, THIS LIMITATION MAY NOT APPLY TO YOU.\n\n  c. The disclaimer of warranties and limitation of liability provided\n     above shall be interpreted in a manner that, to the extent\n     possible, most closely approximates an absolute disclaimer and\n     waiver of all liability.\n\n\nSection 6 -- Term and Termination.\n\n  a. This Public License applies for the term of the Copyright and\n     Similar Rights licensed here. However, if You fail to comply with\n     this Public License, then Your rights under this Public License\n     terminate automatically.\n\n  b. Where Your right to use the Licensed Material has terminated under\n     Section 6(a), it reinstates:\n\n       1. automatically as of the date the violation is cured, provided\n          it is cured within 30 days of Your discovery of the\n          violation; or\n\n       2. upon express reinstatement by the Licensor.\n\n     For the avoidance of doubt, this Section 6(b) does not affect any\n     right the Licensor may have to seek remedies for Your violations\n     of this Public License.\n\n  c. For the avoidance of doubt, the Licensor may also offer the\n     Licensed Material under separate terms or conditions or stop\n     distributing the Licensed Material at any time; however, doing so\n     will not terminate this Public License.\n\n  d. Sections 1, 5, 6, 7, and 8 survive termination of this Public\n     License.\n\n\nSection 7 -- Other Terms and Conditions.\n\n  a. The Licensor shall not be bound by any additional or different\n     terms or conditions communicated by You unless expressly agreed.\n\n  b. Any arrangements, understandings, or agreements regarding the\n     Licensed Material not stated herein are separate from and\n     independent of the terms and conditions of this Public License.\n\n\nSection 8 -- Interpretation.\n\n  a. For the avoidance of doubt, this Public License does not, and\n     shall not be interpreted to, reduce, limit, restrict, or impose\n     conditions on any use of the Licensed Material that could lawfully\n     be made without permission under this Public License.\n\n  b. To the extent possible, if any provision of this Public License is\n     deemed unenforceable, it shall be automatically reformed to the\n     minimum extent necessary to make it enforceable. If the provision\n     cannot be reformed, it shall be severed from this Public License\n     without affecting the enforceability of the remaining terms and\n     conditions.\n\n  c. No term or condition of this Public License will be waived and no\n     failure to comply consented to unless expressly agreed to by the\n     Licensor.\n\n  d. Nothing in this Public License constitutes or may be interpreted\n     as a limitation upon, or waiver of, any privileges and immunities\n     that apply to the Licensor or You, including from the legal\n     processes of any jurisdiction or authority.\n\n\n=======================================================================\n\nCreative Commons is not a party to its public\nlicenses. Notwithstanding, Creative Commons may elect to apply one of\nits public licenses to material it publishes and in those instances\nwill be considered the “Licensor.” The text of the Creative Commons\npublic licenses is dedicated to the public domain under the CC0 Public\nDomain Dedication. Except for the limited purpose of indicating that\nmaterial is shared under a Creative Commons public license or as\notherwise permitted by the Creative Commons policies published at\ncreativecommons.org/policies, Creative Commons does not authorize the\nuse of the trademark \"Creative Commons\" or any other trademark or logo\nof Creative Commons without its prior written consent including,\nwithout limitation, in connection with any unauthorized modifications\nto any of its public licenses or any other arrangements,\nunderstandings, or agreements concerning use of licensed material. For\nthe avoidance of doubt, this paragraph does not form part of the\npublic licenses.\n\nCreative Commons may be contacted at creativecommons.org.\n"
    },
    {
      "title": "Forks · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/forks?include=active&page=1&period=2y&sort_by=open_pull_request_counts",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nInsights: sui-foundation/sui-move-intro-course\nPulse\nContributors\nCommunity Standards\nCommits\nCode frequency\nDependency graph\nNetwork\nForks\nSwitch to tree view\nForks\nPeriod: 2 years\nRepository type: Active \nSort: Open pull requests\n lucenera75 / sui-move-intro-course\n 0\n 0\n 0\n 1\nCreated \nUpdated \n 0xmove / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n BrianSeong99 / sui-move-intro-course\n 1\n 0\n 0\n 0\nCreated \nUpdated \n david-geisinger / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n DucllOwO / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n geometryolife / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n georgescharlesbrain / sui-move-intro-course\n 1\n 0\n 0\n 0\nCreated \nUpdated \n goodfirm / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n hello2jie / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n L0GYKAL / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n nhtera / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n ordinary-yobi / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n QiLOL / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n RandyPen / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n RevanthGundala / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n StevenMia / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n SuiSunbeam / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n tyirenkyi / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n uvd / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Forks · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/forks?include=active&page=1&period=2y&sort_by=open_issue_counts",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nInsights: sui-foundation/sui-move-intro-course\nPulse\nContributors\nCommunity Standards\nCommits\nCode frequency\nDependency graph\nNetwork\nForks\nSwitch to tree view\nForks\nPeriod: 2 years\nRepository type: Active \nSort: Open issues\n 0xmove / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n BrianSeong99 / sui-move-intro-course\n 1\n 0\n 0\n 0\nCreated \nUpdated \n david-geisinger / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n DucllOwO / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n geometryolife / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n georgescharlesbrain / sui-move-intro-course\n 1\n 0\n 0\n 0\nCreated \nUpdated \n goodfirm / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n hello2jie / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n L0GYKAL / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n lucenera75 / sui-move-intro-course\n 0\n 0\n 0\n 1\nCreated \nUpdated \n nhtera / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n ordinary-yobi / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n QiLOL / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n RandyPen / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n RevanthGundala / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n StevenMia / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n SuiSunbeam / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n tyirenkyi / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n uvd / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Forks · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/forks?include=active&page=1&period=2y&sort_by=last_updated",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nInsights: sui-foundation/sui-move-intro-course\nPulse\nContributors\nCommunity Standards\nCommits\nCode frequency\nDependency graph\nNetwork\nForks\nSwitch to tree view\nForks\nPeriod: 2 years\nRepository type: Active \nSort: Recently updated\n uvd / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n StevenMia / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n goodfirm / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n SuiSunbeam / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n QiLOL / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n RandyPen / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n ordinary-yobi / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n L0GYKAL / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n georgescharlesbrain / sui-move-intro-course\n 1\n 0\n 0\n 0\nCreated \nUpdated \n DucllOwO / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n geometryolife / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n tyirenkyi / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n RevanthGundala / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n hello2jie / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n lucenera75 / sui-move-intro-course\n 0\n 0\n 0\n 1\nCreated \nUpdated \n 0xmove / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n nhtera / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n david-geisinger / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n BrianSeong99 / sui-move-intro-course\n 1\n 0\n 0\n 0\nCreated \nUpdated \nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Forks · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/forks?include=active%2Cstarred&page=1&period=2y&sort_by=stargazer_counts",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nInsights: sui-foundation/sui-move-intro-course\nPulse\nContributors\nCommunity Standards\nCommits\nCode frequency\nDependency graph\nNetwork\nForks\nSwitch to tree view\nForks\nPeriod: 2 years\nRepository type: Active +1 \nSort: Most starred\n BrianSeong99 / sui-move-intro-course\n 1\n 0\n 0\n 0\nCreated \nUpdated \n georgescharlesbrain / sui-move-intro-course\n 1\n 0\n 0\n 0\nCreated \nUpdated \nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Forks · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/forks?include=active%2Carchived&page=1&period=2y&sort_by=stargazer_counts",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nInsights: sui-foundation/sui-move-intro-course\nPulse\nContributors\nCommunity Standards\nCommits\nCode frequency\nDependency graph\nNetwork\nForks\nSwitch to tree view\nForks\nPeriod: 2 years\nRepository type: Active +1 \nSort: Most starred\n BrianSeong99 / sui-move-intro-course\n 1\n 0\n 0\n 0\nCreated \nUpdated \n georgescharlesbrain / sui-move-intro-course\n 1\n 0\n 0\n 0\nCreated \nUpdated \n uvd / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n tyirenkyi / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n SuiSunbeam / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n StevenMia / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n RevanthGundala / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n RandyPen / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n QiLOL / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n ordinary-yobi / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n nhtera / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n lucenera75 / sui-move-intro-course\n 0\n 0\n 0\n 1\nCreated \nUpdated \n L0GYKAL / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n hello2jie / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n goodfirm / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n geometryolife / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n DucllOwO / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n david-geisinger / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n 0xmove / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Forks · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/forks?include=active%2Cnetwork&page=1&period=2y&sort_by=stargazer_counts",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nInsights: sui-foundation/sui-move-intro-course\nPulse\nContributors\nCommunity Standards\nCommits\nCode frequency\nDependency graph\nNetwork\nForks\nSwitch to tree view\nForks\nPeriod: 2 years\nRepository type: Active +1 \nSort: Most starred\n BrianSeong99 / sui-move-intro-course\n 1\n 0\n 0\n 0\nCreated \nUpdated \n georgescharlesbrain / sui-move-intro-course\n 1\n 0\n 0\n 0\nCreated \nUpdated \n uvd / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n tyirenkyi / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n SuiSunbeam / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n StevenMia / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n RevanthGundala / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n RandyPen / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n QiLOL / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n ordinary-yobi / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n nhtera / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n lucenera75 / sui-move-intro-course\n 0\n 0\n 0\n 1\nCreated \nUpdated \n L0GYKAL / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n hello2jie / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n goodfirm / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n geometryolife / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n DucllOwO / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n david-geisinger / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n 0xmove / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Forks · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/forks?include=active%2Cinactive&page=1&period=2y&sort_by=stargazer_counts",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nInsights: sui-foundation/sui-move-intro-course\nPulse\nContributors\nCommunity Standards\nCommits\nCode frequency\nDependency graph\nNetwork\nForks\nSwitch to tree view\nForks\nPeriod: 2 years\nRepository type: Active +1 \nSort: Most starred\n georgescharlesbrain / sui-move-intro-course\n 1\n 0\n 0\n 0\nCreated \nUpdated \n letgotine / sui-move-intro-course\n 1\n 0\n 0\n 0\nCreated \nNever updated\n BrianSeong99 / sui-move-intro-course\n 1\n 0\n 0\n 0\nCreated \nUpdated \n rustedLightning / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nNever updated\n robert2687 / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nNever updated\n RevanthGundala / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n Rasbom / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nNever updated\n RandyPen / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n rafaelescrich / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nNever updated\n QiLOL / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n pichtranst123 / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nNever updated\n panda4us / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nNever updated\n ordinary-yobi / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n OptiFinance / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nNever updated\n omelnykov1 / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nNever updated\n Noc2 / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nNever updated\n nirel1 / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nNever updated\n nicetomeetyou1 / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nNever updated\n nhtera / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n NerdyDave2017 / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nNever updated\n zuko-firelord / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nNever updated\n Yash943 / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nNever updated\n web3yaso / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nNever updated\n VicvekSr9485 / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nNever updated\n VenturiJuana / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nNever updated\nPrevious 1 2 3 Next\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Forks · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/forks?include=&page=1&period=2y&sort_by=stargazer_counts",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nInsights: sui-foundation/sui-move-intro-course\nPulse\nContributors\nCommunity Standards\nCommits\nCode frequency\nDependency graph\nNetwork\nForks\nSwitch to tree view\nForks\nPeriod: 2 years\nRepository type: None \nSort: Most starred\nNo forked repositories found\n\nTry changing your filters, or search for active forked repositories.\n\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Forks · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/forks?include=active&page=1&period=2y&sort_by=stargazer_counts",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nInsights: sui-foundation/sui-move-intro-course\nPulse\nContributors\nCommunity Standards\nCommits\nCode frequency\nDependency graph\nNetwork\nForks\nSwitch to tree view\nForks\nPeriod: 2 years\nRepository type: Active \nSort: Most starred\n BrianSeong99 / sui-move-intro-course\n 1\n 0\n 0\n 0\nCreated \nUpdated \n georgescharlesbrain / sui-move-intro-course\n 1\n 0\n 0\n 0\nCreated \nUpdated \n uvd / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n tyirenkyi / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n SuiSunbeam / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n StevenMia / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n RevanthGundala / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n RandyPen / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n QiLOL / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n ordinary-yobi / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n nhtera / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n lucenera75 / sui-move-intro-course\n 0\n 0\n 0\n 1\nCreated \nUpdated \n L0GYKAL / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n hello2jie / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n goodfirm / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n geometryolife / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n DucllOwO / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n david-geisinger / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n 0xmove / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Forks · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/forks?include=active&page=1&period=5y&sort_by=stargazer_counts",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nInsights: sui-foundation/sui-move-intro-course\nPulse\nContributors\nCommunity Standards\nCommits\nCode frequency\nDependency graph\nNetwork\nForks\nSwitch to tree view\nForks\nPeriod: 5 years\nRepository type: Active \nSort: Most starred\n BrianSeong99 / sui-move-intro-course\n 1\n 0\n 0\n 0\nCreated \nUpdated \n georgescharlesbrain / sui-move-intro-course\n 1\n 0\n 0\n 0\nCreated \nUpdated \n uvd / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n tyirenkyi / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n SuiSunbeam / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n StevenMia / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n RevanthGundala / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n RandyPen / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n QiLOL / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n ordinary-yobi / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n nhtera / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n lucenera75 / sui-move-intro-course\n 0\n 0\n 0\n 1\nCreated \nUpdated \n L0GYKAL / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n hello2jie / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n goodfirm / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n geometryolife / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n DucllOwO / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n david-geisinger / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n 0xmove / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Forks · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/forks?include=active&page=1&period=1y&sort_by=stargazer_counts",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nInsights: sui-foundation/sui-move-intro-course\nPulse\nContributors\nCommunity Standards\nCommits\nCode frequency\nDependency graph\nNetwork\nForks\nSwitch to tree view\nForks\nPeriod: 1 year\nRepository type: Active \nSort: Most starred\n georgescharlesbrain / sui-move-intro-course\n 1\n 0\n 0\n 0\nCreated \nUpdated \n DucllOwO / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n geometryolife / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n goodfirm / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n hello2jie / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n L0GYKAL / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n ordinary-yobi / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n QiLOL / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n RandyPen / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n RevanthGundala / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n StevenMia / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n SuiSunbeam / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n tyirenkyi / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n uvd / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Forks · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/forks?include=active&page=1&period=6mo&sort_by=stargazer_counts",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nInsights: sui-foundation/sui-move-intro-course\nPulse\nContributors\nCommunity Standards\nCommits\nCode frequency\nDependency graph\nNetwork\nForks\nSwitch to tree view\nForks\nPeriod: 6 months\nRepository type: Active \nSort: Most starred\n goodfirm / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n ordinary-yobi / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n QiLOL / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n RandyPen / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n StevenMia / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n SuiSunbeam / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n uvd / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Forks · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/network/members",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nInsights: sui-foundation/sui-move-intro-course\nPulse\nContributors\nCommunity Standards\nCommits\nCode frequency\nDependency graph\nNetwork\nForks\nForks\nswitch to list view\n sui-foundation / sui-move-intro-course\n  0xDavion / sui-move-intro-course-zh\n  0xmove / sui-move-intro-course\n  5l1v3r1 / sui-move-intro-course\n  adpthegreat / sui-move-intro-course\n  alpsofthq / sui-move-intro-course\n  baidang201 / sui-move-intro-course\n  basitalikhoso110 / sui-move-intro-course\n  bilalafzal97 / sui-move-intro-course\n  BlackBoxEngineering / sui-move-intro-course\n  BrianSeong99 / sui-move-intro-course\n  china-xuhappy / sui-move-intro-course\n  codewithfr4nk / sui-move-intro-course\n  D3stinn3 / sui-move-intro-course\n  dattgoswami / sui-move-intro-course\n  david-geisinger / sui-move-intro-course\n  DucllOwO / sui-move-intro-course\n  fengyeduan / sui-move-intro-course-zh\n  Francis11h / sui-move-intro-course-zh\n  geometryolife / sui-move-intro-course\n  georgescharlesbrain / sui-move-intro-course\n  Giatzis / sui-move-intro-course\n  goodfirm / sui-move-intro-course\n  happyboy12345281 / sui-move-intro-course\n  hello2jie / sui-move-intro-course\n  HeroLeft / sui-move-intro-course\n  huchenjie339 / sui-move-intro-course\n  janrockdev / sui-move-intro-course\n  jedusor1 / sui-move-intro-course\n  Jordan-type / sui-move-intro-course\n  kennysghub / sui-move-intro-course\n  krishaamer / sui-move-intro-course\n  L0GYKAL / sui-move-intro-course\n  Learning-Tech-Workspace / sui-move-intro-course\n  leopard627 / sui-move-intro-course\n  letgotine / sui-move-intro-course\n  lucenera75 / sui-move-intro-course\n  mashharuki / sui-move-intro-course\n  mimengdelei / sui-move-intro-course\n  NerdyDave2017 / sui-move-intro-course\n  nhtera / sui-move-intro-course\n  nicetomeetyou1 / sui-move-intro-course\n  nirel1 / sui-move-intro-course\n  Noc2 / sui-move-intro-course\n  omelnykov1 / sui-move-intro-course\n  OptiFinance / sui-move-intro-course\n  ordinary-yobi / sui-move-intro-course\n  panda4us / sui-move-intro-course\n  pichtranst123 / sui-move-intro-course\n  QiLOL / sui-move-intro-course\n  rafaelescrich / sui-move-intro-course\n  RandyPen / sui-move-intro-course\n  Rasbom / sui-move-intro-course\n  RevanthGundala / sui-move-intro-course\n  robert2687 / sui-move-intro-course\n  rustedLightning / sui-move-intro-course\n  satoterin / sui-move-intro-course\n  Shaik-Sirajuddin / sui-move-intro-course\n  singh1aryan / sui-move-intro-course\n  staccDOTsol / sui-move-intro-course\n  StevenMia / sui-move-intro-course\n  sui-block-fork-learn / sui-move-intro-course\n  SuiSea-Foundation / sui-move-intro-course\n  SuiSunbeam / sui-move-intro-course\n  tanishbaansal / sui-move-intro-course\n  TheNameisPlissken / sui-move-intro-course\n  theritalin / sui-move-intro-course\n  tyirenkyi / sui-move-intro-course\n  uvd / sui-move-intro-course\n  VenturiJuana / sui-move-intro-course\n  VicvekSr9485 / sui-move-intro-course\n  web3yaso / sui-move-intro-course\n  Yash943 / sui-move-intro-course\n  zuko-firelord / sui-move-intro-course\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Forks · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/forks?include=active&page=1&period=1mo&sort_by=stargazer_counts",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nInsights: sui-foundation/sui-move-intro-course\nPulse\nContributors\nCommunity Standards\nCommits\nCode frequency\nDependency graph\nNetwork\nForks\nSwitch to tree view\nForks\nPeriod: 1 month\nRepository type: Active \nSort: Most starred\n uvd / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Dependencies · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/network/dependencies",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nInsights: sui-foundation/sui-move-intro-course\nPulse\nContributors\nCommunity Standards\nCommits\nCode frequency\nDependency graph\nNetwork\nForks\nDependency graph\nDependencies\nDependents\nExport SBOM\nSearch all dependencies\n 3 Total\n@mysten/bcs\n^ 0.6.1\nDetected automatically on Mar 07, 2023 (npm) · advanced-topics/BCS_encoding/example_projects/bcs_js/package.json\nactions/checkout\n3\nDetected automatically on Aug 24, 2023 (GitHub Actions) · .github/workflows/test-build.yml\nsui-foundation/sui-move-intro-course/.github/actions/sui-cli\nmain\nDetected automatically on Aug 24, 2023 (GitHub Actions) · .github/workflows/test-build.yml\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Network Graph · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/network",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nInsights: sui-foundation/sui-move-intro-course\nPulse\nContributors\nCommunity Standards\nCommits\nCode frequency\nDependency graph\nNetwork\nForks\nNetwork graph\n\nTimeline of the most recent commits to this repository and its network ordered by most recently pushed to.\n\nKeyboard shortcuts available \nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Code frequency · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/graphs/code-frequency",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nInsights: sui-foundation/sui-move-intro-course\nPulse\nContributors\nCommunity Standards\nCommits\nCode frequency\nDependency graph\nNetwork\nForks\nCode frequency over the history of\nsui-foundation/sui-move-intro-course\nAdditions and Deletions per week\n\nCrunching the latest data, just for you. Hang tight…\n\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Issue search results · GitHub",
      "url": "https://github.com/search?q=repo%3Asui-foundation%2Fsui-move-intro-course++language%3AJavaScript&type=issues",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nrepo:sui-foundation/sui-move-intro-course language:JavaScript\nSign in\nSign up\nissues Search Results · repo:sui-foundation/sui-move-intro-course language:JavaScript\nFilter by\nCode\n, 0 results\n...\n (...)\nIssues\n, 0 results\n0\n (0)\nPull requests\n, 0 results\n0\n (0)\nDiscussions\n, 0 results\n0\n (0)\nCommits\n, 0 results\n0\n (0)\nPackages\n, 0 results\n0\n (0)\nWikis\n, 0 results\n0\n (0)\nAdvanced search\n0 results\n (27 ms)\n0 results\nin\nsui-foundation/sui-move-intro-course\n(press backspace or delete to remove)\nSort by: Best match\nYour search did not match any issues\n\nYou could try one of the tips below.\n\nSearch across repositories\nWithin a repository:\nrepo:github/linguist\nAcross several:\nrepo:github/linguist OR repo:github/fetch\nNote that we don't currently support regular expressions in the repo or org qualifiers. For more information on search syntax, see our syntax guide.\nSearch across an organization\nSaved searches\nYou could try an advanced search.\nIssue search results · GitHub"
    },
    {
      "title": "Repository search results · GitHub",
      "url": "https://github.com/search?q=repo%3Asui-foundation%2Fsui-move-intro-course++language%3AMove&type=issues",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nrepo:sui-foundation/sui-move-intro-course language:Move\nSign in\nSign up\nrepositories Search Results · repo:sui-foundation/sui-move-intro-course language:Move\nFilter by\nCode\n...\n (...)\nIssues\nPull requests\nDiscussions\nCommits\nPackages\nWikis\nAdvanced\n‎Owner‎\n‎Size‎\n‎Number of followers‎\n‎Number of forks‎\n‎Number of stars‎\n‎Date created‎\n‎Date pushed‎\n‎Topic‎\n‎License‎\n‎Archived‎\n‎Public‎\n‎Private‎\nAdvanced search\n0 files\n (53 ms)\n0 files\nin\nsui-foundation/sui-move-intro-course\n(press backspace or delete to remove)\nSort by: Best match\nsui-foundation/sui-move-intro-course\nIntroductory Course to the Sui Move language\nMove\n·\n2k\n·\nUpdated yesterday\nStar\nSponsor open source projects you depend on\nContributors are working behind the scenes to make open source better for everyone—give them the help and recognition they deserve.\nExplore sponsorable projects\nProTip! Press the / key to activate the search input again and adjust your query."
    },
    {
      "title": "Stargazers · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/stargazers?page=2",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nStargazers\nAll 2,046\nYou know\nmehmetali930\n\n Joined on Apr 10, 2023\n\nFollow\nWandeha\n\n Joined on Dec 2, 2022\n\nFollow\nLtDanK\n\n Joined on Feb 14, 2022\n\nFollow\nAhm385866\n\n Joined on Aug 25, 2021\n\nFollow\nRubenMss\n\n Joined on Apr 20, 2024\n\nFollow\nchannely\n\nWorks for earth\nearth\n\nFollow\npuneetkaura\n\nWorks for Exploring...\nExploring...\n\nFollow\nblockchain-hcj\n\n Joined on Mar 9, 2022\n\nFollow\nThomas-AnhDao\n\nWorks for SotaTek. JSC\nSotaTek. JSC\n\nFollow\nzzh156\n\n Joined on Dec 4, 2022\n\nFollow\nEvgenyAfanasev\n\nIs from Russian Federation, Moscow\nRussian Federation, Moscow\n\nFollow\nsayyamsaif\n\n Joined on Mar 9, 2024\n\nFollow\nstcr96\n\n Joined on Sep 5, 2021\n\nFollow\nbabajani3132\n\n Joined on Mar 30, 2024\n\nFollow\nferbran22\n\n Joined on Mar 23, 2024\n\nFollow\nKallat94\n\n Joined on Aug 11, 2022\n\nFollow\nLiky0310\n\nIs from chengdu China\nchengdu China\n\nFollow\nCouperGrey\n\nWorks for Zhejiang University\nZhejiang University\n\nFollow\nmustafaayhan1\n\n Joined on Apr 16, 2023\n\nFollow\nchaturrved\n\nIs from Pune, India\nPune, India\n\nFollow\nasadawan0990\n\n Joined on Apr 8, 2024\n\nFollow\nhmnajam\n\nIs from Karachi\nKarachi\n\nFollow\nSayaya05\n\n Joined on Mar 13, 2024\n\nFollow\nTurbinePanada\n\n Joined on Oct 18, 2023\n\nFollow\nolukaemmanuelfelix\n\nIs from kireka\nkireka\n\nFollow\nSanam7806\n\n Joined on Apr 5, 2024\n\nFollow\nAbekiz\n\n Joined on Sep 4, 2021\n\nFollow\njhuhnke\n\nWorks for @LuckyFridayLabs\n@LuckyFridayLabs\n\nFollow\nFethallah16\n\n Joined on Apr 3, 2024\n\nFollow\nAngelkitty30\n\n Joined on Oct 1, 2017\n\nFollow\nSopyan1\n\n Joined on Feb 23, 2024\n\nFollow\nARAZ999x\n\n Joined on Mar 31, 2024\n\nFollow\nAnasnonos20\n\n Joined on Apr 2, 2024\n\nFollow\nBaseet84\n\n Joined on Dec 6, 2022\n\nFollow\nkaligraphy197\n\n Joined on Jul 25, 2023\n\nFollow\nSatgai68\n\n Joined on Mar 1, 2024\n\nFollow\nedmontonhass\n\n Joined on Apr 26, 2022\n\nFollow\nIlsihno33\n\n Joined on Apr 1, 2024\n\nFollow\nMercyme05\n\n Joined on Feb 19, 2022\n\nFollow\nRizvihub12\n\n Joined on Mar 3, 2024\n\nFollow\nayseukid\n\n Joined on Mar 31, 2024\n\nFollow\nSyntaxAce\n\n Joined on Mar 26, 2024\n\nFollow\nMarshallXCRYP\n\n Joined on Mar 19, 2024\n\nFollow\nEyeroller\n\n Joined on Mar 30, 2024\n\nFollow\ngagenel\n\nWorks for Nfticks\nNfticks\n\nFollow\nRyusk2024\n\n Joined on Mar 29, 2024\n\nFollow\nTheXRPerience\n\nIs from Northcoast Germany\nNorthcoast Germany\n\nFollow\nrl7x\n\nWorks for -\n-\n\nPreviousNext\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Commit Activity · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/graphs/commit-activity",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nInsights: sui-foundation/sui-move-intro-course\nPulse\nContributors\nCommunity Standards\nCommits\nCode frequency\nDependency graph\nNetwork\nForks\n\nCrunching the latest data, just for you. Hang tight…\n\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Community Standards · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/community",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nInsights: sui-foundation/sui-move-intro-course\nPulse\nContributors\nCommunity Standards\nCommits\nCode frequency\nDependency graph\nNetwork\nForks\nCommunity Standards\n\nHere’s how this project compares to recommended community standards.\n\nChecklist\n\n \n Description\n README\n Code of conduct\n Contributing\nWriting contributing guidelines\n License\n Security policy\nSet up a security policy\n Issue templates\n Pull request template\n Repository admins accept content reports\n\nWhat is the community profile?\n\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Sign in to GitHub · GitHub",
      "url": "https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2Fsui-foundation%2Fsui-move-intro-course%2Fstargazers%2Fyou_know",
      "html": "Skip to content\nSign in to GitHub\nUsername or email address\nPassword\nForgot password?\nPassword login alternatives\n\nNew to GitHub? Create an account\n\nTerms\nPrivacy\nDocs\nContact GitHub Support\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Contributors to sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/graphs/contributors",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nInsights: sui-foundation/sui-move-intro-course\nPulse\nContributors\nCommunity Standards\nCommits\nCode frequency\nDependency graph\nNetwork\nForks\nLoading contributions…\nContributions: Commits \n\nContributions to main, excluding merge commits\n\nCrunching the latest data, just for you. Hang tight…\n\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "sui-move-intro-course/advanced-topics/BCS_encoding/lessons/BCS_encoding.md at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/blob/main/advanced-topics/BCS_encoding/lessons/BCS_encoding.md",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nBCS_encoding\nexample_projects\nimages\nlessons\nBCS_encoding.md\nclosed_loop_token\nreadme.md\nexercises\nsrc\nunit-five\nunit-four\nunit-one\nunit-three\nunit-two\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course/advanced-topics/BCS_encoding/lessons\n/BCS_encoding.md\nLatest commit\nQiLOL\nDoc update\n72a8643\n · \nHistory\nHistory\nFile metadata and controls\nPreview\nCode\nBlame\n220 lines (160 loc) · 7.7 KB\nRaw\nBCS Encoding\n\nBinary Canonical Serialization, or BCS, is a serialization format developed in the context of the Diem blockchain, and is now extensively used in most of the blockchains based on Move (Sui, Starcoin, Aptos, 0L). BCS is not only used in the Move VM, but also used in transaction and event coding, such as serializing transactions before signing, or parsing event data.\n\nKnowing how BCS works is crucial if you want to understand how Move works at a deeper level and become a Move expert. Let's dive in.\n\nBCS Specification and Properties\n\nThere are some high-level properties of BCS encoding that are good to keep in mind as we go through the rest of the lesson:\n\nBCS is a data-serialization format where the resulting output bytes do not contain any type information; because of this, the side receiving the encoded bytes will need to know how to deserialize the data\n\nThere are no structs in BCS (since there are no types); the struct simply defines the order in which fields are serialized\n\nWrapper types are ignored, so OuterType and UnnestedType will have the same BCS representation:\n\nstruct OuterType {\n    owner: InnerType\n}\nstruct InnerType {\n    address: address\n}\nstruct UnnestedType {\n    address: address\n}\n\nTypes containing the generic type fields can be parsed up to the first generic type field. So it's a good practice to put the generic type field(s) last if it's a custom type that will be ser/de'd.\n\nstruct BCSObject<T> has drop, copy {\n    id: ID,\n    owner: address,\n    meta: Metadata,\n    generic: T\n}\n\nIn this example, we can deserialize everything up to the meta field.\n\nPrimitive types like unsigned ints are encoded in Little Endian format\n\nVector is serialized as a ULEB128 length (with max length up to u32) followed by the content of the vector.\n\nThe full BCS specification can be found in the BCS repository.\n\nUsing the @mysten/bcs JavaScript Library\nInstallation\n\nThe library you will need to install for this part is the @mysten/bcs library. You can install it by typing in the root directory of a node project:\n\nnpm i @mysten/bcs\nBasic Example\n\nLet's use the JavaScript library to serialize and de-serialize some simple data types first:\n\nimport { BCS, getSuiMoveConfig } from \"@mysten/bcs\";\n\n// initialize the serializer with default Sui Move configurations\nconst bcs = new BCS(getSuiMoveConfig());\n\n// Define some test data types\nconst integer = 10;\nconst array = [1, 2, 3, 4];\nconst string = \"test string\"\n\n// use bcs.ser() to serialize data\nconst ser_integer = bcs.ser(BCS.U16, integer);\nconst ser_array = bcs.ser(\"vector<u8>\", array);\nconst ser_string = bcs.ser(BCS.STRING, string);\n\n// use bcs.de() to deserialize data\nconst de_integer = bcs.de(BCS.U16, ser_integer.toBytes());\nconst de_array = bcs.de(\"vector<u8>\", ser_array.toBytes());\nconst de_string = bcs.de(BCS.STRING, ser_string.toBytes());\n\nWe can initialize the serializer instance with the built-in default setting for Sui Move using the above syntax, new BCS(getSuiMoveConfig()).\n\nThere are built-in ENUMs that can be used for Sui Move types like BCS.U16, BCS.STRING, etc. For generic types, it can be defined using the same syntax as in Sui Move, like vector<u8> in the above example.\n\nLet's take a close look at the serialized and deserialized fields:\n\n# ints are little-endian hexadecimals\n0a00\n10\n# the first element of a vector indicates the total length,\n# then it's just whatever elements are in the vector\n0401020304\n1,2,3,4\n# strings are just vectors of u8's, with the first element equal to the length of the string\n0b7465737420737472696e67\ntest string\nType Registration\n\nWe can register the custom types we will be working with using the following syntax:\n\nimport { BCS, getSuiMoveConfig } from \"@mysten/bcs\";\nconst bcs = new BCS(getSuiMoveConfig());\n\n// Register the Metadata Type\nbcs.registerStructType(\"Metadata\", {\n  name: BCS.STRING,\n});\n\n// Same for the main object that we intend to read\nbcs.registerStructType(\"BCSObject\", {\n  // BCS.ADDRESS is used for ID types as well as address types\n  id: BCS.ADDRESS,\n  owner: BCS.ADDRESS,\n  meta: \"Metadata\",\n});\nUsing bcs in Sui Smart Contracts\n\nLet's continue our example from above with the structs.\n\nStruct Definition\n\nWe start with the corresponding struct definitions in the Sui Move contract.\n\n{\n    //..\n    struct Metadata has drop, copy {\n        name: std::ascii::String\n    }\n\n    struct BCSObject has drop, copy {\n        id: ID,\n        owner: address,\n        meta: Metadata\n    }\n    //..\n}\nDeserialization\n\nNow, let's write the function to deserialize an object in a Sui contract.\n\n    public fun object_from_bytes(bcs_bytes: vector<u8>): BCSObject {\n\n        // Initializes the bcs bytes instance\n        let bcs = bcs::new(bcs_bytes);\n\n        // Use `peel_*` functions to peel values from the serialized bytes. \n        // Order has to be the same as we used in serialization!\n        let (id, owner, meta) = (\n        bcs::peel_address(&mut bcs), bcs::peel_address(&mut bcs), bcs::peel_vec_u8(&mut bcs)\n        );\n        // Pack a BCSObject struct with the results of serialization\n        BCSObject { id: object::id_from_address(id), owner, meta: Metadata {name: std::ascii::string(meta)}  } }\n\nThe varies peel_* methods in Sui Frame bcs module are used to \"peel\" each individual field from the BCS serialized bytes. Note that the order we peel the fields must be exactly the same as the order of the fields in the struct definition.\n\nQuiz: Why are the results not the same from the first two peel_address calls on the same bcs object?\n\nAlso note how we convert the types from address to id, and from vector<8> to std::ascii::string with helper functions.\n\nQuiz: What would happen if BSCObject had a UID type instead of an ID type?\n\nComplete Ser/De Example\n\nFind the full JavaScript and Sui Move sample codes in the example_projects folder.\n\nFirst, we serialize a test object using the JavaScript program:\n\n// We construct a test object to serialize, note that we can specify the format of the output to hex\nlet _bytes = bcs\n  .ser(\"BCSObject\", {\n    id: \"0x0000000000000000000000000000000000000005\",\n    owner: \"0x000000000000000000000000000000000000000a\",\n    meta: {name: \"aaa\"}\n  })\n  .toString(\"hex\");\n\nWe want the BCS writer's output to be in hexadecimal format this time, which can be specified like above.\n\nAffix the serialization result hexstring with 0x prefix and export to an environmental variable:\n\nexport OBJECT_HEXSTRING=0x0000000000000000000000000000000000000005000000000000000000000000000000000000000a03616161\n\nNow we can either run the associated Move unit tests to check for correctness:\n\nsui move test\n\nYou should see this in the console:\n\nBUILDING bcs_move\nRunning Move unit tests\n[ PASS    ] 0x0::bcs_object::test_deserialization\nTest result: OK. Total tests: 1; passed: 1; failed: 0\n\nOr we can publish the module (and export the PACKAGE_ID) and call the emit_object method using the above BCS serialized hexstring:\n\nsui client call --function emit_object --module bcs_object --package $PACKAGE_ID --args $OBJECT_HEXSTRING --gas-budget 1000\n\nWe can then check the Events tab of the transaction on the Sui Explorer to see that we emitted the correctly deserialized BCSObject:"
    },
    {
      "title": "Releases · sui-foundation/sui-move-intro-course",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/releases",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nReleases: sui-foundation/sui-move-intro-course\nReleases\nTags\nThere aren’t any releases here\n\nYou can create a release to package software, along with release notes and links to binary files, for other people to use. Learn more about releases in our docs.\n\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Watchers · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/watchers",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nWatchers\nhyd628\n\nWorks for Sui Foundation\nSui Foundation\n\nFollow\nUnidentifiedContributor\n\nIs from Portland, OR\nPortland, OR\n\nFollow\nbhenhsi\n\nIs from Bay Area\nBay Area\n\nFollow\nBrendanJ\n\n Joined on Jul 5, 2014\n\nFollow\neemailme\n\n Joined on Sep 26, 2017\n\nFollow\ngwsystem\n\nIs from Russia\nRussia\n\nFollow\nsammyne\n\nIs from Shanghai, PR. China\nShanghai, PR. China\n\nFollow\nASISBusiness\n\nWorks for ASISBussiness\nASISBussiness\n\nFollow\nIkenna1996\n\n Joined on Dec 9, 2021\n\nFollow\nalexausmus\n\n Joined on Dec 9, 2021\n\nFollow\nuvd\n\n Joined on Jan 22, 2015\n\nFollow\nPProsperInc\n\nWorks for PP\nPP\n\nFollow\nSuiSunbeam\n\n Joined on Feb 1, 2024\n\nFollow\nBrusantos55\n\n Joined on Jan 26, 2021\n\nFollow\nzihehuang\n\nIs from Seattle, WA\nSeattle, WA\n\nFollow\nfranciswagner\n\nWorks for Watermelon Agency Brazil\nWatermelon Agency Brazil\n\nFollow\ndamirka\n\nWorks for @MystenLabs\n@MystenLabs\n\nFollow\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Settings · Custom properties · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/custom-properties",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nCustom properties\n\nCustom properties allow you to decorate your repository with information such as compliance frameworks, data sensitivity, or project details.\n\nNo custom properties set for this repository.\n\nLearn more about custom properties and how to set them at the organization level.\n\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "sui-move-intro-course/unit-five/lessons/5_transfer_policy.md at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/blob/main/unit-five/lessons/5_transfer_policy.md",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nexample_projects\nlessons\n1_programmable_transaction_block.md\n2_hot_potato_pattern.md\n3_kiosk_basics.md\n4_kiosk_basic_usage.md\n5_transfer_policy.md\nreadme.md\nunit-four\nunit-one\nunit-three\nunit-two\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course/unit-five/lessons\n/5_transfer_policy.md\nLatest commit\nuvd\nfeat: move 2024\n65c6b7b\n · \nHistory\nHistory\nFile metadata and controls\nPreview\nCode\nBlame\n193 lines (148 loc) · 9.39 KB\nRaw\nTransfer Policy and Buy from Kiosk\n\nIn this section, we will learn how to create a TransferPolicy and use it to enforce rules the buyers must comply before the purchased item is owned by them.\n\nTransferPolicy\nCreate a TransferPolicy\n\nTransferPolicy for type T must be created for that type T to be tradeable in the Kiosk system. TransferPolicy is a shared object acting as a central authority enforcing everyone to check their purchase is valid against the defined policy before the purchased item is transferred to the buyers.\n\nuse sui::tx_context::{TxContext, sender};\nuse sui::transfer_policy::{Self, TransferRequest, TransferPolicy, TransferPolicyCap};\nuse sui::package::{Self, Publisher};\nuse sui::transfer::{Self};\n\npublic struct KIOSK has drop {}\n\nfun init(witness: KIOSK, ctx: &mut TxContext) {\n    let publisher = package::claim(otw, ctx);\n    transfer::public_transfer(publisher, sender(ctx));\n}\n\n#[allow(lint(share_owned, self_transfer))]\n/// Create new policy for type `T`\npublic fun new_policy(publisher: &Publisher, ctx: &mut TxContext) {\n    let (policy, policy_cap) = transfer_policy::new<TShirt>(publisher, ctx);\n    transfer::public_share_object(policy);\n    transfer::public_transfer(policy_cap, sender(ctx));\n}\n\nCreate a TransferPolicy<T> requires the proof of publisher Publisher of the module comprising T. This ensures only the creator of type T can create TransferPolicy<T>. There are 2 ways to create the policy:\n\nUse transfer_policy::new() to create new policy, make the TransferPolicy shared object and transfer the TransferPolicyCap to the sender by using sui::transfer.\nsui client call --package $KIOSK_PACKAGE_ID --module kiosk --function new_policy --args $KIOSK_PUBLISHER --gas-budget 10000000\nUse entry transfer_policy::default() to automatically do all above steps for us.\n\nYou should already receive the Publisher object when publish the package. Let's export it for later use.\n\nexport KIOSK_PUBLISHER=<Publisher object ID>\n\nYou should see the newly created TransferPolicy object and TransferPolicyCap object in the terminal. Let's export it for later use.\n\nexport KIOSK_TRANSFER_POLICY=<TransferPolicy object ID>\nexport KIOSK_TRANSFER_POLICY_CAP=<TransferPolicyCap object ID>\nImplement Fixed Fee Rule\n\nTransferPolicy doesn't enforce anything without any rule, let's learn how to implement a simple rule in a separated module to enforce users to pay a fixed royalty fee for a trade to succeed.\n\n💡Note: There is a standard approach to implement the rules. Please checkout the rule template here\n\nRule Witness & Rule Config\nmodule kiosk::fixed_royalty_rule {\n    /// The `amount_bp` passed is more than 100%.\n    const EIncorrectArgument: u64 = 0;\n    /// The `Coin` used for payment is not enough to cover the fee.\n    const EInsufficientAmount: u64 = 1;\n\n    /// Max value for the `amount_bp`.\n    const MAX_BPS: u16 = 10_000;\n\n    /// The Rule Witness to authorize the policy\n    public struct Rule has drop {}\n\n    /// Configuration for the Rule\n    public struct Config has store, drop {\n        /// Percentage of the transfer amount to be paid as royalty fee\n        amount_bp: u16,\n        /// This is used as royalty fee if the calculated fee is smaller than `min_amount`\n        min_amount: u64,\n    }\n}\n\nRule represents a witness type to add to TransferPolicy, it helps to identify and distinguish between multiple rules adding to one policy. Config is the configuration of the Rule, as we implement fixed royaltee fee, the settings should include the percentage we want to deduct out of original payment.\n\nAdd Rule to TransferPolicy\n/// Function that adds a Rule to the `TransferPolicy`.\n/// Requires `TransferPolicyCap` to make sure the rules are\n/// added only by the publisher of T.\npublic fun add<T>(\n    policy: &mut TransferPolicy<T>,\n    cap: &TransferPolicyCap<T>,\n    amount_bp: u16,\n    min_amount: u64\n    \n) {\n    assert!(amount_bp <= MAX_BPS, EIncorrectArgument);\n    transfer_policy::add_rule(Rule {}, policy, cap, Config { amount_bp, min_amount })\n}\n\nWe use transfer_policy::add_rule() to add the rule with its configuration to the policy.\n\nLet's execute this function from the client to add the Rule to the TransferPolicy, otherwise, it is disabled. In this example, we configure the percentage of royalty fee is 0.1% ~ 10 basis points and the minimum amount royalty fee is 100 MIST.\n\nsui client call --package $KIOSK_PACKAGE_ID --module fixed_royalty_rule --function add --args $KIOSK_TRANSFER_POLICY $KIOSK_TRANSFER_POLICY_CAP 10 100 --type-args $KIOSK_PACKAGE_ID::kiosk::TShirt --gas-budget 10000000\nSatisfy the Rule\n/// Buyer action: Pay the royalty fee for the transfer.\npublic fun pay<T: key + store>(\n    policy: &mut TransferPolicy<T>,\n    request: &mut TransferRequest<T>,\n    payment: Coin<SUI>\n) {\n    let paid = transfer_policy::paid(request);\n    let amount = fee_amount(policy, paid);\n\n    assert!(coin::value(&payment) == amount, EInsufficientAmount);\n\n    transfer_policy::add_to_balance(Rule {}, policy, payment);\n    transfer_policy::add_receipt(Rule {}, request)\n}\n\n/// Helper function to calculate the amount to be paid for the transfer.\n/// Can be used dry-runned to estimate the fee amount based on the Kiosk listing price.\npublic fun fee_amount<T: key + store>(policy: &TransferPolicy<T>, paid: u64): u64 {\n    let config: &Config = transfer_policy::get_rule(Rule {}, policy);\n    let amount = (((paid as u128) * (config.amount_bp as u128) / 10_000) as u64);\n\n    // If the amount is less than the minimum, use the minimum\n    if (amount < config.min_amount) {\n        amount = config.min_amount\n    };\n\n    amount\n}\n\nWe need a helper fee_amount() to calculate the royalty fee given the policy and the payment amount. We use transfer_policy::get_rule() to enquire the configuration and use it for fee calculation.\n\npay() is a function that users must call themselves to fulfill the TransferRequest (described in the next section) before transfer_policy::confirm_request(). transfer_policy::paid() gives us original payment of the trade represented by TransferRequest. After royalty fee calculation, we will add the fee to the policy through transfer_policy::add_to_balance(), any fee collected by the policy is accumulated here and TransferPolicyCap owner can withdraw later. Last but not least, we use transfer_policy::add_receipt() to flag the TransferRequest that this rule is passed and ready to be confirmed with transfer_policy::confirm_request().\n\nBuy Item from Kiosk\nuse sui::transfer_policy::{Self, TransferRequest, TransferPolicy};\n\n/// Buy listed item\npublic fun buy(kiosk: &mut Kiosk, item_id: object::ID, payment: Coin<SUI>): (TShirt, TransferRequest<TShirt>){\n    kiosk::purchase(kiosk, item_id, payment)\n}\n\n/// Confirm the TransferRequest\npublic fun confirm_request(policy: &TransferPolicy<TShirt>, req: TransferRequest<TShirt>) {\n    transfer_policy::confirm_request(policy, req);\n}\n\nWhen buyers buy the asset by using kiosk::purchase() API, an item is returned alongside with a TransferRequest. TransferRequest is a hot potato forcing us to consume it through transfer_policy::confirm_request(). transfer_policy::confirm_request()'s job is to verify whether all the rules configured and enabled in the TransferPolicy are complied by the users. If one of the enabled rules are not satisfied, then transfer_policy::confirm_request() throws error leading to the failure of the transaction. As a consequence, the item is not under your ownership even if you tried to transfer the item to your account before transfer_policy::confirm_request().\n\n💡Note: The users must compose a PTB with all necessary calls to ensure the TransferRequest is valid before confirm_request() call.\n\nThe flow can be illustrated as follow:\n\nBuyer -> kiosk::purchase() -> Item + TransferRequest -> Subsequent calls to fulfill TransferRequest -> transfer_policy::confirm_request() -> Transfer Item under ownership\n\nKiosk Full Flow Example\n\nRecall from the previous section, the item must be placed inside the kiosk, then it must be listed to become sellable. Assuming the item is already listed with price 10_000 MIST, let's export the listed item as terminal variable.\n\nexport KIOSK_TSHIRT=<Object ID of the listed TShirt>\n\nLet's build a PTB to execute a trade. The flow is straightforward, we buy the listed item from the kiosk, the item and TransferRequest is returned, then, we call fixed_royalty_fee::pay to fulfill the TransferRequest, we confirm the TransferRequest with confirm_request() before finally transfer the item to the buyer.\n\nsui client ptb \\\n--assign price 10000 \\\n--split-coins gas \"[price]\" \\\n--assign coin \\\n--move-call $KIOSK_PACKAGE_ID::kiosk::buy @$KIOSK @$KIOSK_TSHIRT coin.0 \\\n--assign buy_res \\\n--move-call $KIOSK_PACKAGE_ID::fixed_royalty_rule::fee_amount \"<$KIOSK_PACKAGE_ID::kiosk::TShirt>\" @$KIOSK_TRANSFER_POLICY price \\\n--assign fee_amount \\\n--split-coins gas \"[fee_amount]\"\\\n--assign coin \\\n--move-call $KIOSK_PACKAGE_ID::fixed_royalty_rule::pay \"<$KIOSK_PACKAGE_ID::kiosk::TShirt>\" @$KIOSK_TRANSFER_POLICY buy_res.1 coin.0 \\\n--move-call $KIOSK_PACKAGE_ID::kiosk::confirm_request  @$KIOSK_TRANSFER_POLICY buy_res.1 \\\n--move-call 0x2::transfer::public_transfer \"<$KIOSK_PACKAGE_ID::kiosk::TShirt>\" buy_res.0 <buyer address> \\\n--gas-budget 10000000"
    },
    {
      "title": "sui-move-intro-course/unit-five/lessons/4_kiosk_basic_usage.md at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/blob/main/unit-five/lessons/4_kiosk_basic_usage.md",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nexample_projects\nlessons\n1_programmable_transaction_block.md\n2_hot_potato_pattern.md\n3_kiosk_basics.md\n4_kiosk_basic_usage.md\n5_transfer_policy.md\nreadme.md\nunit-four\nunit-one\nunit-three\nunit-two\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course/unit-five/lessons\n/4_kiosk_basic_usage.md\nLatest commit\nuvd\nfeat: move 2024\n65c6b7b\n · \nHistory\nHistory\nFile metadata and controls\nPreview\nCode\nBlame\n81 lines (63 loc) · 2.42 KB\nRaw\nKiosk Basic Usage\nCreate Kiosk\n\nLet's first deploy the example kiosk smart contract and export the package ID for later use.\n\nexport KIOSK_PACKAGE_ID=<Package ID of example kiosk smart contract>\nmodule kiosk::kiosk {\n    use sui::kiosk::{Self, Kiosk, KioskOwnerCap};\n    use sui::tx_context::{TxContext};\n\n    #[allow(lint(share_owned, self_transfer))]\n    /// Create new kiosk\n    public fun new_kiosk(ctx: &mut TxContext) {\n        let (kiosk, kiosk_owner_cap) = kiosk::new(ctx);\n        transfer::public_share_object(kiosk);\n        transfer::public_transfer(kiosk_owner_cap, sender(ctx));\n    }\n}\n\nThere are 2 ways to create a new kiosk:\n\nUse kiosk::new() to create new kiosk but we have to make the Kiosk shared object and transfer the KioskOwnerCap to the sender ourselves by using sui::transfer.\nsui client call --package $KIOSK_PACKAGE_ID --module kiosk --function new_kiosk --gas-budget 10000000\nUse entry kiosk::default() to automatically do all above steps for us.\n\nYou can export the newly created Kiosk and its KioskOwnerCap for later use.\n\nexport KIOSK=<Object id of newly created Kiosk>\nexport KIOSK_OWNER_CAP=<Object id of newly created KioskOwnerCap>\n\n💡Note: Kiosk is heterogeneous collection by default so that's why it doesn't need type parameter for their items\n\nPlace Item inside Kiosk\npublic struct TShirt has key, store {\n    id: UID,\n}\n\npublic fun new_tshirt(ctx: &mut TxContext): TShirt {\n    TShirt {\n        id: object::new(ctx),\n    }\n}\n\n/// Place item inside kiosk\npublic fun place(kiosk: &mut Kiosk, cap: &KioskOwnerCap, item: TShirt) {\n    kiosk::place(kiosk, cap, item)\n}\n\nWe can use kiosk::place() API to place an item inside kiosk. Remember that only the Kiosk Owner can have access to this API.\n\nWithdraw Item from Kiosk\n/// Withdraw item from Kiosk\npublic fun withdraw(kiosk: &mut Kiosk, cap: &KioskOwnerCap, item_id: object::ID): TShirt {\n    kiosk::take(kiosk, cap, item_id)\n}\n\nWe can use kiosk::take() API to withdraw an item from kiosk. Remember that only the Kiosk Owner can have access to this API.\n\nList Item for Sale\n/// List item for sale\npublic fun list(kiosk: &mut Kiosk, cap: &KioskOwnerCap, item_id: object::ID, price: u64) {\n    kiosk::list<TShirt>(kiosk, cap, item_id, price)\n}\n\nWe can use kiosk::list() API to list an item for sale. Remember that only the Kiosk Owner can have access to this API."
    },
    {
      "title": "sui-move-intro-course/unit-five/lessons/3_kiosk_basics.md at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/blob/main/unit-five/lessons/3_kiosk_basics.md",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nexample_projects\nlessons\n1_programmable_transaction_block.md\n2_hot_potato_pattern.md\n3_kiosk_basics.md\n4_kiosk_basic_usage.md\n5_transfer_policy.md\nreadme.md\nunit-four\nunit-one\nunit-three\nunit-two\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course/unit-five/lessons\n/3_kiosk_basics.md\nLatest commit\ndaniellam258\nfeat: add kiosk buy full flow example\n4724b2b\n · \nHistory\nHistory\nFile metadata and controls\nPreview\nCode\nBlame\n54 lines (37 loc) · 3.95 KB\nRaw\nSui Kiosk\n\nNow we have learned the basics of Programmable Transaction Block and Hot Potato Design Pattern, it is much easier for us to understand the mechanism behind Sui Kiosk. Let's get started\n\nWhat is Sui Kiosk?\n\nWe're probably familiar to some sort of kiosks in real life. It can be a stall in a tourist shopping mall selling you merchantdise, apparels or any local souvenirs. It can be in a form of big screen displaying you digital images of the products you're interested in. They may all come with different forms and sizes but they have one common trait: they sell something and display their wares openly for passersby to browse and engage with\n\nSui Kiosk is the digital version of these types of kiosk but for digital assets and collectibles. Sui Kiosk is a decentralized system for onchain commerce applications on Sui. Practically, Kiosk is a part of the Sui framework, and it is native to the system and available to everyone out of the box.\n\nWhy Sui Kiosk?\n\nSui Kiosk is created to answer these needs:\n\nCan we list an item on marketplace and continue using it?\nIs there a way to create a “safe” for collectibles?\nCan we build an onchain system with custom logic for transfer management?\nHow to favor creators and guarantee royalties?\nCan we avoid centralization of traditional marketplaces?\nMain Components\n\nSui Kiosk consists these 2 main components:\n\nKiosk + KioskOwnerCap: Kiosk is the safe that will store our assets and display them for selling, it is implemented as a shared object allowing interactions between multiple parties. Each Kiosk will have a corresponding Kiosk Owner whoever holding the KioskOwnerCap. The Kiosk Owner still have the logical ownership over their assets even when they are physically placed in the kiosk.\nTransferPolicy + TransferPolicyCap: TransferPolicy is a shared object defines the conditions in which the assets can be traded or sold. Each TransferPolicy consists a set of rules, with each rule specifies the requirements every trade must sastify. Rules can be enabled or disabled from the TransferPolicy by whoever owning the TransferOwnerCap. Greate example of TransferPolicy's rule is the royalty fees guarantee.\nSui Kiosk Users\n\nSui Kiosk use-cases is centered around these 3 types of users:\n\nKiosk Owner (Seller/KO): One must own the KioskOwnerCap to become the Kiosk Owner. KO can:\nPlace their assets in kiosk.\nWithdraw the assets in kiosk if they're not locked.\nList assets for sale.\nWithdraw profits from sales.\nBorrow and mutate owned assets in kiosk.\nBuyer: Buyer can be anyone who's willing to purchase the listed items. The buyers must satisfy the TransferPolicy for the trade to be considered successful.\nCreator: Creator is a party that creates and controls the TransferPolicy for a single type. For example, authors of SuiFrens collectibles are the creators of SuiFren<Capy> type and act as creators in the Sui Kiosk system. Creators can:\nSet any rules for trades.\nSet multiple tracks of rules.\nEnable or disable trades at any moment with a policy.\nEnforce policies (eg royalties) on all trades.\nAll operations are affected immediately and globally.\nAsset States in Sui Kiosk\n\nWhen you add an asset to your kiosk, it has one of the following states:\n\nPLACED - an item is placed inside the kiosk. The Kiosk Owner can withdraw it and use it directly, borrow it (mutably or immutably), or list an item for sale.\nLOCKED - an item is placed and locked in the kiosk. The Kiosk Owner can't withdraw a locked item from kiosk, but you can borrow it mutably and list it for sale.\nLISTED - an item in the kiosk that is listed for sale. The Kiosk Owner can’t modify an item while listed, but you can borrow it immutably or delist it, which returns it to its previous state.\n\n💡Note: there is another state called LISTED EXCLUSIVELY, which is not covered in this unit and will be covered in the future in advanced section\n\n "
    },
    {
      "title": "sui-move-intro-course/unit-five/lessons/2_hot_potato_pattern.md at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/blob/main/unit-five/lessons/2_hot_potato_pattern.md",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nexample_projects\nlessons\n1_programmable_transaction_block.md\n2_hot_potato_pattern.md\n3_kiosk_basics.md\n4_kiosk_basic_usage.md\n5_transfer_policy.md\nreadme.md\nunit-four\nunit-one\nunit-three\nunit-two\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course/unit-five/lessons\n/2_hot_potato_pattern.md\nLatest commit\nuvd\nfeat: move 2024\n65c6b7b\n · \nHistory\nHistory\nFile metadata and controls\nPreview\nCode\nBlame\n134 lines (106 loc) · 5.39 KB\nRaw\nHot Potato Pattern\n\nA hot potato is a struct that has no capabilities, therefore you can only pack and unpack it in its module. The Hot Potato Pattern leverages the PTB mechanics and is commonly used in cases when the application wants to enforce users to fulfill determined business logic before the transaction ends. In simpler terms, if a hot potato value is returned by the transaction command A, you must consume it in any subsequent command B within the same PTB. The most popular use case of Hot Potato Pattern is flashloan.\n\nType Definitions\nmodule flashloan::flashloan {\n    // === Imports ===\n    use sui::sui::SUI;\n    use sui::coin::{Self, Coin};\n    use sui::balance::{Self, Balance};\n    use sui::object::{UID};\n    use sui::tx_context::{TxContext};\n\n    /// For when the loan amount exceed the pool amount\n    const ELoanAmountExceedPool: u64 = 0;\n    /// For when the repay amount do not match the initial loan amount\n    const ERepayAmountInvalid: u64 = 1;\n\n    /// A \"shared\" loan pool.\n    /// For demonstration purpose, we assume the loan pool only allows SUI.\n    public struct LoanPool has key {\n        id: UID,\n        amount: Balance<SUI>,\n    }\n\n    /// A loan position.\n    /// This is a hot potato struct, it enforces the users\n    /// to repay the loan in the end of the transaction or within the same PTB.\n    public struct Loan {\n        amount: u64,\n    }\n}\n\nWe have a LoanPool shared object acting as a money vault ready for users to borrow. For simplicity sake, this pool only accepts SUI. Next, we have Loan which is a hot potato struct, we will use it to enforce users to repay the loan before transaction ends. Loan only has 1 field amount which is the borrowed amount.\n\nBorrow\n/// Function allows users to borrow from the loan pool.\n/// It returns the borrowed [`Coin<SUI>`] and the [`Loan`] position\n/// enforcing users to fulfill before the PTB ends.\npublic fun borrow(pool: &mut LoanPool, amount: u64, ctx: &mut TxContext): (Coin<SUI>, Loan) {\n    assert!(amount <= balance::value(&pool.amount), ELoanAmountExceedPool);\n\n    (\n        coin::from_balance(balance::split(&mut pool.amount, amount), ctx),\n        Loan {\n            amount\n        }\n    )\n}\n\nUsers can borrow the money from the LoanPool by calling borrow(). Basically, it will return the Coin<SUI> the users can use as they like for subsequent function calls. A Loan hot potato value is also returned. As mentioned previously, the only way to consume the Loan is through unpacking it in the functions from the same module. This allows only the application itself has the right to decide how to consume the hot potato, not external parties.\n\nRepay\n/// Repay the loan\n/// Users must execute this function to ensure the loan is repaid before the transaction ends.\npublic fun repay(pool: &mut LoanPool, loan: Loan, payment: Coin<SUI>) {\n    let Loan { amount } = loan;\n    assert!(coin::value(&payment) == amount, ERepayAmountInvalid);\n\n    balance::join(&mut pool.amount, coin::into_balance(payment));\n}\n\nUsers at some point must repay() the loan before the PTB ends. We consume the Loan by unpacking it, otherwise, you will receive compiler error if you use its fields with direct access loan.amount as Loan is non-drop. After unpacking, we simply use the loan amount to perform valid payment check and update the LoanPool accordingly.\n\nExample\n\nLet's try to create an example with flashloan where we borrow some SUI amount, use it to mint a dummy NFT and sell it to repay the debt. We will learn how to use PTB with Sui CLI to execute this all in one transaction.\n\n/// A dummy NFT to represent the flashloan functionality\npublic struct NFT has key{\n    id: UID,\n    price: Balance<SUI>,\n}\n\n/// Mint NFT\n    public fun mint_nft(payment: Coin<SUI>, ctx: &mut TxContext): NFT {\n        NFT {\n            id: object::new(ctx),\n            price: coin::into_balance(payment),\n        }\n    }\n\n/// Sell NFT\npublic fun sell_nft(nft: NFT, ctx: &mut TxContext): Coin<SUI> {\n    let NFT {id, price} = nft;\n    object::delete(id);\n    coin::from_balance(price, ctx)\n}\n\nYou should able to publish the smart contract using the previous guide. After the smart deployment, we should have the package ID and the shared LoanPool object. Let's export them so we can use it later.\n\nexport LOAN_PACKAGE_ID=<package id>\nexport LOAN_POOL_ID=<object id of the loan pool>\n\nYou need to deposit some SUI amount using flashloan::deposit_pool function. For demonstration purpose, we will deposit 10_000 MIST in the loan pool.\n\nsui client ptb \\\n--split-coins gas \"[10000]\" \\\n--assign coin \\\n--move-call $LOAN_PACKAGE_ID::flashloan::deposit_pool @$LOAN_POOL_ID coin.0 \\\n--gas-budget 10000000\n\nNow let's build a PTB that borrow() -> mint_nft() -> sell_nft() -> repay().\n\nsui client ptb \\\n--move-call $LOAN_PACKAGE_ID::flashloan::borrow @$LOAN_POOL_ID 10000 \\\n--assign borrow_res \\\n--move-call $LOAN_PACKAGE_ID::flashloan::mint_nft borrow_res.0 \\\n--assign nft \\\n--move-call $LOAN_PACKAGE_ID::flashloan::sell_nft nft \\\n--assign repay_coin \\\n--move-call $LOAN_PACKAGE_ID::flashloan::repay @$LOAN_POOL_ID borrow_res.1 repay_coin \\\n--gas-budget 10000000\n\nQuiz: What happen if you don't call repay() at the end of the PTB, please try it yourself\n\n💡Note: You may want to check out SuiVision or SuiScan to inspect the PTB for more details"
    },
    {
      "title": "sui-move-intro-course/unit-five/lessons/1_programmable_transaction_block.md at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/blob/main/unit-five/lessons/1_programmable_transaction_block.md",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nexample_projects\nlessons\n1_programmable_transaction_block.md\n2_hot_potato_pattern.md\n3_kiosk_basics.md\n4_kiosk_basic_usage.md\n5_transfer_policy.md\nreadme.md\nunit-four\nunit-one\nunit-three\nunit-two\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course/unit-five/lessons\n/1_programmable_transaction_block.md\nLatest commit\nStevenMia\nchore: fix some typos in comments\n7316d03\n · \nHistory\nHistory\nFile metadata and controls\nPreview\nCode\nBlame\n28 lines (19 loc) · 3.16 KB\nRaw\nProgrammable Transaction Block (PTB)\n\nBefore we get into Sui Kiosk, it's necessary to learn about Programmable Transaction Block (PTB) and how it helps us to seamlessly fulfill Kiosk usage flow\n\nIntroduction\n\nMost of us, more or less, have run into the situation where we want to batch a number of smaller transactions in order into a larger unit and submit one single transaction execution to the blockchain. In traditional blockchain, it was not feasible, and we need workarounds to make this work, the common solutions are:\n\nSubmit the transactions subsequently one by one. This way works fine but the performance of your dApps is demoted significantly as you need to wait one transaction to be finalized before you can use their outputs for the next transaction in line. Moreover, the gas fee will not be a pleasant for the end-users\nCreate a new smart contract and a wrapper function to execute other functions from the same or different smart contracts. This approach may speed up your application and consume less gas fee but in return, reduce the developer experience as every new business use case might need a new wrapper function.\n\nThat’s why we introduce Programmable Transaction Block (PTB).\n\nFeatures\n\nPTB is a built-in feature and supported natively by Sui Network and Sui VM. On Sui, a transaction (block) by default is a Programmable Transaction Block (PTB). PTB is a powerful tool enhancing developers with scalalability and composability:\n\nEach PTB is composed of multiple individual commands chaining together in order. One command that we will use most of the time is MoveCall. For other commands, please refer to the documentation here.\nWhen the transaction is executed, the commands are executed in the order they are defined when building the PTB. The outputs of one transaction command can be used as inputs for any subsequent commands.\nSui guarantees the atomicity of a PTB by applying the effects of all commands in the transaction (block) at the end of the transaction. If one command fails, the entire block fails and effects will not take place.\nEach PTB can hold up to 1024 unique operations. This allows cheaper gas fee and faster execution compared to executing 1024 individual transactions in other traditional blockchains.\nIf the output returned by one command is non-drop value. It must be consumed by subsequent commands within the same PTB. Otherwise, the transaction (block) is considered to be failed.\n\n💡Note: Refer to documentation here for full details on PTB\n\nUsage\n\nThere are several ways we can use to build and execute a PTB:\n\nWe already learned how to use the CLI sui client call to execute a single smart contract function. Behind the scenes, it is implemented using PTB with single MoveCall command. To build a PTB with full functionality, please use the CLI sui client ptb and refer to its usage here.\nUse the Sui SDK: Sui Typescript SDK, Sui Rust SDK."
    },
    {
      "title": "sui-move-intro-course/unit-four/lessons/5_deployment_and_testing.md at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/blob/main/unit-four/lessons/5_deployment_and_testing.md",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nunit-four\nexample_projects\nimages\nlessons\n1_homogeneous_collections.md\n2_dynamic_fields.md\n3_heterogeneous_collections.md\n4_marketplace_contract.md\n5_deployment_and_testing.md\nreadme.md\nunit-one\nunit-three\nunit-two\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course/unit-four/lessons\n/5_deployment_and_testing.md\nLatest commit\nuvd\nfeat: move 2024\n65c6b7b\n · \nHistory\nHistory\nFile metadata and controls\nPreview\nCode\nBlame\n119 lines (77 loc) · 3.96 KB\nRaw\nDeployment and Testing\n\nNext we can deploy and test our marketplace contract through the SUI CLI.\n\nWe create a simple marketplace::widget module so we can mint some items for us to list to help with testing.\n\nmodule marketplace::widget {\n\n    use sui::object::{Self, UID};\n    use sui::transfer;\n    use sui::tx_context::{Self, TxContext};\n\n    public struct Widget has key, store {\n        id: UID,\n    }\n\n    public fun mint(ctx: &mut TxContext) {\n        let object = Widget {\n            id: object::new(ctx)\n        };\n        transfer::transfer(object, tx_context::sender(ctx));\n    }\n}\n\nThis is basically the Hello World project from Unit One, but made even simpler.\n\nDeployment\n\nPublish the package using:\n\n    sui client publish --gas-budget 10000000\n\nYou should see both marketplace and widget modules published on the explorer:\n\nExport the package object ID into an environmental variable:\n\n    export PACKAGE_ID=<package object ID from previous output>\nInitialize the Marketplace\n\nNext, we need to initialize the marketplace contract by calling the create entry function. We want to pass it a type argument to specify which type of fungible token this marketplace will accept. It's easiest to just use the Sui native token here. We can use the following CLI command:\n\n    sui client call --function create --module marketplace --package $PACKAGE_ID --type-args 0x2::sui::SUI --gas-budget 10000000\n\nNote the syntax for passing in the type argument for SUI token.\n\nExport the Marketplace shared object's ID into an environmental variable:\n\n    export MARKET_ID=<marketplace shared object ID from previous output>\nListing\n\nFirst, we mint a widget item to be listed:\n\n    sui client call --function mint --module widget --package $PACKAGE_ID --gas-budget 10000000\n\nSave the object item of the minted widget to an environmental variable:\n\n    export ITEM_ID=<object ID of the widget item from console>\n\nThen we list this item to our marketplace:\n\n    sui client call --function list --module marketplace --package $PACKAGE_ID --args $MARKET_ID $ITEM_ID 1 --type-args $PACKAGE_ID::widget::Widget 0x2::sui::SUI --gas-budget 10000000\n\nWe need to submit two type arguments here, first is the type of the item to be listed and second is the fungible coin type for the payment. The above example uses a listing price of 1.\n\nAfter submitting this transaction, you can check the newly created listing on the Sui explorer:\n\nPurchase\n\nSplit out a SUI coin object of amount 1 to use as the payment object. You can use the sui client gas CLI command to see a list of available SUI coins under your account and pick one to be split.\n\n    sui client split-coin --coin-id <object ID of the coin to be split> --amounts 1 --gas-budget 10000000\n\nExport the object ID of the newly split SUI coin with balance 1:\n\n    export PAYMENT_ID=<object ID of the split 1 balance SUI coin>\n\nNow, let's buy back the item that we just listed:\n\n    sui client call --function buy_and_take --module marketplace --package $PACKAGE_ID --args $MARKET_ID $ITEM_ID $PAYMENT_ID --type-args $PACKAGE_ID::widget::Widget 0x2::sui::SUI --gas-budget 10000000\n\nYou should see a long list of transaction effects in the console after submitting this transaction. We can verify that the widget is owned by our address, and the payments Table now has an entry with the key of our address and should be of size 1.\n\nTake Profits\n\nFinally, we can claim our earnings by calling the take_profits_and_keep method:\n\n    sui client call --function take_profits_and_keep --module marketplace --package $PACKAGE_ID --args $MARKET_ID --type-args 0x2::sui::SUI --gas-budget 10000000\n\nThis will reap the balance from the payments Table object and return its size to 0. Verify this on the explorer."
    },
    {
      "title": "sui-move-intro-course/unit-four/lessons/4_marketplace_contract.md at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/blob/main/unit-four/lessons/4_marketplace_contract.md",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nunit-four\nexample_projects\nimages\nlessons\n1_homogeneous_collections.md\n2_dynamic_fields.md\n3_heterogeneous_collections.md\n4_marketplace_contract.md\n5_deployment_and_testing.md\nreadme.md\nunit-one\nunit-three\nunit-two\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course/unit-four/lessons\n/4_marketplace_contract.md\nLatest commit\nuvd\nfeat: move 2024\n65c6b7b\n · \nHistory\nHistory\nFile metadata and controls\nPreview\nCode\nBlame\n192 lines (153 loc) · 7.71 KB\nRaw\nMarketplace Contract\n\nNow that we have a solid understanding of how various types of collections and dynamic fields work, we can start writing the contract for an on-chain marketplace that can support the following features:\n\nListing of arbitrary item types and numbers\nAccepts payment in a custom or native fungible token type\nCan concurrently allow multiple sellers to list their items and securely receive payments\nType Definitions\n\nFirst, we define the overall Marketplace struct:\n\n    /// A shared `Marketplace`. Can be created by anyone using the\n    /// `create` function. One instance of `Marketplace` accepts\n    /// only one type of Coin - `COIN` for all its listings.\n    public struct Marketplace<phantom COIN> has key {\n        id: UID,\n        items: Bag,\n        payments: Table<address, Coin<COIN>>\n    }\n\nMarketplace will be a shared object that can be accessed and mutated by anyone. It accepts a COIN generic type parameter that defines what fungible token type the payments will be accepted in.\n\nThe items field will hold item listings, which can be different types, thus we use the heterogeneous Bag collection here.\n\nThe payments field will hold payments received by each seller. This can be represented by a key-value pair with the seller's address as the key and the coin type accepted as the value. Because the types for the key and value here are homogeneous and fixed, we can use the Table collection type for this field.\n\nQuiz: How would you modify this struct to accept multiple fungible token types?\n\nNext, we define a Listing type:\n\n    /// A single listing that contains the listed item and its\n    /// price in [`Coin<COIN>`].\n    public struct Listing has key, store {\n        id: UID,\n        ask: u64,\n        owner: address,\n    }\n\nThis struct holds the information we need related to an item listing. We will attach the actual item to be traded to the Listing object as a dynamic object field, eliminating the need to define any item field or collection.\n\nNote that Listing has the key ability, so we are now able to use its object id as the key when we place it inside of a collection.\n\nListing and Delisting\n\nNext, we write the logic for listing and delisting items. First, listing an item:\n\n   /// List an item at the Marketplace.\n    public fun list<T: key + store, COIN>(\n        marketplace: &mut Marketplace<COIN>,\n        item: T,\n        ask: u64,\n        ctx: &mut TxContext\n    ) {\n        let item_id = object::id(&item);\n        let listing = Listing {\n            ask,\n            id: object::new(ctx),\n            owner: tx_context::sender(ctx),\n        };\n\n        ofield::add(&mut listing.id, true, item);\n        bag::add(&mut marketplace.items, item_id, listing)\n    }\n\nAs mentioned earlier, we will simply use the dynamic object field interface to attach the item of arbitrary type to be sold, and then we add the Listing object to the Bag of listings, using the object id of the item as the key, and the actual Listing object as the value (which is why Listing also has the store ability).\n\nFor delisting, we define the following methods:\n\n   /// Internal function to remove listing and get an item back. Only owner can do that.\n    fun delist<T: key + store, COIN>(\n        marketplace: &mut Marketplace<COIN>,\n        item_id: ID,\n        ctx: &mut TxContext\n    ): T {\n        let Listing {\n            id,\n            owner,\n            ask: _,\n        } = bag::remove(&mut marketplace.items, item_id);\n\n        assert!(tx_context::sender(ctx) == owner, ENotOwner);\n\n        let item = ofield::remove(&mut id, true);\n        object::delete(id);\n        item\n    }\n\n    /// Call [`delist`] and transfer item to the sender.\n    public fun delist_and_take<T: key + store, COIN>(\n        marketplace: &mut Marketplace<COIN>,\n        item_id: ID,\n        ctx: &mut TxContext\n    ) {\n        let item = delist<T, COIN>(marketplace, item_id, ctx);\n        transfer::public_transfer(item, tx_context::sender(ctx));\n    }\n\nNote how the delisted Listing object is unpacked and deleted, and the listed item object is retrieved through ofield::remove. Remember that Sui assets cannot be destroyed outside of their defining module, so we must transfer the item to the delister.\n\nPurchasing and Payments\n\nBuying an item is similar to delisting but with additional logic for handling payments.\n\n    /// Internal function to purchase an item using a known Listing. Payment is done in Coin<C>.\n    /// Amount paid must match the requested amount. If conditions are met,\n    /// owner of the item gets the payment and buyer receives their item.\n    fun buy<T: key + store, COIN>(\n        marketplace: &mut Marketplace<COIN>,\n        item_id: ID,\n        paid: Coin<COIN>,\n    ): T {\n        let Listing {\n            id,\n            ask,\n            owner\n        } = bag::remove(&mut marketplace.items, item_id);\n\n        assert!(ask == coin::value(&paid), EAmountIncorrect);\n\n        // Check if there's already a Coin hanging and merge `paid` with it.\n        // Otherwise attach `paid` to the `Marketplace` under owner's `address`.\n        if (table::contains<address, Coin<COIN>>(&marketplace.payments, owner)) {\n            coin::join(\n                table::borrow_mut<address, Coin<COIN>>(&mut marketplace.payments, owner),\n                paid\n            )\n        } else {\n            table::add(&mut marketplace.payments, owner, paid)\n        };\n\n        let item = ofield::remove(&mut id, true);\n        object::delete(id);\n        item\n    }\n\n    /// Call [`buy`] and transfer item to the sender.\n    public fun buy_and_take<T: key + store, COIN>(\n        marketplace: &mut Marketplace<COIN>,\n        item_id: ID,\n        paid: Coin<COIN>,\n        ctx: &mut TxContext\n    ) {\n        transfer::transfer(\n            buy<T, COIN>(marketplace, item_id, paid),\n            tx_context::sender(ctx)\n        )\n    }\n\nThe first part is the same as delisting an item from listing, but we also check if the payment sent in is the right amount. The second part will insert the payment coin object into our payments Table, and depending on if the seller already has some balance, it will either do a simple table::add or table::borrow_mut and coin::join to merge the payment to existing balance.\n\nThe entry function buy_and_take simply calls buy and transfers the purchased item to the buyer.\n\nTaking Profit\n\nLastly, we define methods for sellers to retrieve their balance from the marketplace.\n\n   /// Internal function to take profits from selling items on the `Marketplace`.\n    fun take_profits<COIN>(\n        marketplace: &mut Marketplace<COIN>,\n        ctx: &mut TxContext\n    ): Coin<COIN> {\n        table::remove<address, Coin<COIN>>(&mut marketplace.payments, tx_context::sender(ctx))\n    }\n\n    /// Call [`take_profits`] and transfer Coin object to the sender.\n    public fun take_profits_and_keep<COIN>(\n        marketplace: &mut Marketplace<COIN>,\n        ctx: &mut TxContext\n    ) {\n        transfer::transfer(\n            take_profits(marketplace, ctx),\n            tx_context::sender(ctx)\n        )\n    }\n\nQuiz: why do we not need to use Capability based access control under this marketplace design? Can we implement the capability design pattern here? What property would that give to the marketplace?\n\nFull Contract\n\nYou can find the full smart contract for our implementation of a generic marketplace under the example_projects/marketplace folder."
    },
    {
      "title": "sui-move-intro-course/unit-four/lessons/3_heterogeneous_collections.md at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/blob/main/unit-four/lessons/3_heterogeneous_collections.md",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nunit-four\nexample_projects\nimages\nlessons\n1_homogeneous_collections.md\n2_dynamic_fields.md\n3_heterogeneous_collections.md\n4_marketplace_contract.md\n5_deployment_and_testing.md\nreadme.md\nunit-one\nunit-three\nunit-two\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course/unit-four/lessons\n/3_heterogeneous_collections.md\nLatest commit\nuvd\nfeat: move 2024\n65c6b7b\n · \nHistory\nHistory\nFile metadata and controls\nPreview\nCode\nBlame\n65 lines (48 loc) · 2.93 KB\nRaw\nHeterogeneous Collections\n\nHomogeneous collections like Vector and Table can work for marketplaces (or other types of applications) where we need to hold a collection of objects of the same type, but what if we need to hold objects of different types, or if we do not know at compile time what types the objects we need to hold are going to be?\n\nFor this type of marketplace, we need to use a heterogeneous collection to hold the items to be sold. Already having done the heavy lifting of understanding dynamic fields, heterogeneous collection in Sui should be very easy to understand. We will look at the Bag collection type more closely here.\n\nThe Bag Type\n\nA Bag is a heterogeneous map-like collection. The collection is similar to Table in that its keys and values are not stored within the Bag value, but instead are stored using Sui's object system. The Bag struct acts only as a handle into the object system to retrieve those keys and values.\n\nCommon Bag Operations\n\nSample code of common Bag operations is included below:\n\nmodule collection::bag {\n\n    use sui::bag::{Bag, Self};\n    use sui::tx_context::{TxContext};\n\n    // Defining a table with generic types for the key and value \n    public struct GenericBag {\n       items: Bag\n    }\n\n    // Create a new, empty GenericBag\n    public fun create(ctx: &mut TxContext): GenericBag {\n        GenericBag{\n            items: bag::new(ctx)\n        }\n    }\n\n    // Adds a key-value pair to GenericBag\n    public fun add<K: copy + drop + store, V: store>(bag: &mut GenericBag, k: K, v: V) {\n       bag::add(&mut bag.items, k, v);\n    }\n\n    /// Removes the key-value pair from the GenericBag with the provided key and returns the value.   \n    public fun remove<K: copy + drop + store, V: store>(bag: &mut GenericBag, k: K): V {\n        bag::remove(&mut bag.items, k)\n    }\n\n    // Borrows an immutable reference to the value associated with the key in GenericBag\n    public fun borrow<K: copy + drop + store, V: store>(bag: &GenericBag, k: K): &V {\n        bag::borrow(&bag.items, k)\n    }\n\n    /// Borrows a mutable reference to the value associated with the key in GenericBag\n    public fun borrow_mut<K: copy + drop + store, V: store>(bag: &mut GenericBag, k: K): &mut V {\n        bag::borrow_mut(&mut bag.items, k)\n    }\n\n    /// Check if a value associated with the key exists in the GenericBag\n    public fun contains<K: copy + drop + store>(bag: &GenericBag, k: K): bool {\n        bag::contains<K>(&bag.items, k)\n    }\n\n    /// Returns the size of the GenericBag, the number of key-value pairs\n    public fun length(bag: &GenericBag): u64 {\n        bag::length(&bag.items)\n    }\n}\n\nThe function signatures for interacting with Bag collections are very similar to the function signatures for interacting with Table collections. The main difference is that you don't need to declare any types when creating a new Bag, and the key-value pairs that you add to a Bag can be of different types."
    },
    {
      "title": "sui-move-intro-course/unit-four/lessons/2_dynamic_fields.md at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/blob/main/unit-four/lessons/2_dynamic_fields.md",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nunit-four\nexample_projects\nimages\nlessons\n1_homogeneous_collections.md\n2_dynamic_fields.md\n3_heterogeneous_collections.md\n4_marketplace_contract.md\n5_deployment_and_testing.md\nreadme.md\nunit-one\nunit-three\nunit-two\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course/unit-four/lessons\n/2_dynamic_fields.md\nLatest commit\nuvd\nfeat: move 2024\n65c6b7b\n · \nHistory\nHistory\nFile metadata and controls\nPreview\nCode\nBlame\n145 lines (109 loc) · 5.87 KB\nRaw\nDynamic Fields\n\nTo peek under how collections like Table are actually implemented in Sui Move, we need to introduce the concept of dynamic fields in Sui Move. Dynamic fields are heterogeneous fields that can be added or removed at runtime, and can have arbitrary user-assigned names.\n\nThere are two sub-types of dynamic fields:\n\nDynamic Fields can store any value that has the store ability, however, an object stored in this kind of field will be considered wrapped and will not be accessible directly via its ID by external tools (explorers, wallets, etc) accessing storage.\nDynamic Object Fields values must be Sui objects (have the key and store abilities, and id: UID as the first field), but will still be directly accessible via their object ID after being attached.\nDynamic Field Operations\nAdding a Dynamic Field\n\nTo illustrate how to work with dynamic fields, we define the following structs:\n\n   // Parent struct\n    public struct Parent has key {\n        id: UID,\n    }\n\n    // Dynamic field child struct type containing a counter\n    public struct DFChild has store {\n        count: u64\n    }\n\n    // Dynamic object field child struct type containing a counter\n    public struct DOFChild has key, store {\n        id: UID,\n        count: u64,\n    }\n\nHere's the API to use for adding dynamic fields or dynamic object fields to an object:\n\n  module collection::dynamic_fields {\n\n      use sui::dynamic_object_field as ofield;\n      use sui::dynamic_field as field;\n\n    // Adds a DFChild to the parent object under the provided name\n    public fun add_dfchild(parent: &mut Parent, child: DFChild, name: vector<u8>) {\n        field::add(&mut parent.id, name, child);\n    }\n\n    // Adds a DOFChild to the parent object under the provided name\n    public fun add_dofchild(parent: &mut Parent, child: DOFChild, name: vector<u8>) {\n        ofield::add(&mut parent.id, name, child);\n    } \n  }\nAccessing and Mutating a Dynamic Field\n\nDynamic fields and dynamic object fields can be read or accessed as the following:\n\n    // Borrows a reference to a DOFChild\n    public fun borrow_dofchild(child: &DOFChild): &DOFChild {\n        child\n    }\n\n    // Borrows a reference to a DFChild via its parent object\n    public fun borrow_dfchild_via_parent(parent: &Parent, child_name: vector<u8>): &DFChild {\n        field::borrow<vector<u8>, DFChild>(&parent.id, child_name)\n    }\n\n    // Borrows a reference to a DOFChild via its parent object\n    public fun borrow_dofchild_via_parent(parent: &Parent, child_name: vector<u8>): &DOFChild {\n        ofield::borrow<vector<u8>, DOFChild>(&parent.id, child_name)\n    }\n\nDynamic fields and dynamic object fields can also be mutated as the following:\n\n    // Mutate a DOFChild directly\n    public fun mutate_dofchild(child: &mut DOFChild) {\n        child.count = child.count + 1;\n    }\n\n    // Mutate a DFChild directly\n    public fun mutate_dfchild(child: &mut DFChild) {\n        child.count = child.count + 1;\n    }\n\n    // Mutate a DFChild's counter via its parent object\n    public fun mutate_dfchild_via_parent(parent: &mut Parent, child_name: vector<u8>) {\n        let child = field::borrow_mut<vector<u8>, DFChild>(&mut parent.id, child_name);\n        child.count = child.count + 1;\n    }\n\n    // Mutate a DOFChild's counter via its parent object\n    public fun mutate_dofchild_via_parent(parent: &mut Parent, child_name: vector<u8>) {\n        mutate_dofchild(ofield::borrow_mut<vector<u8>, DOFChild>(\n            &mut parent.id,\n            child_name,\n        ));\n    }\n\nQuiz: Why can mutate_dofchild be an entry function but not mutate_dfchild?\n\nRemoving a Dynamic Field\n\nWe can remove a dynamic field from its parent object as follows:\n\n    // Removes a DFChild given its name and parent object's mutable reference, and returns it by value\n    public fun remove_dfchild(parent: &mut Parent, child_name: vector<u8>): DFChild {\n        field::remove<vector<u8>, DFChild>(&mut parent.id, child_name)\n    }\n\n    // Deletes a DOFChild given its name and parent object's mutable reference\n    public fun delete_dofchild(parent: &mut Parent, child_name: vector<u8>) {\n        let DOFChild { id, count: _ } = ofield::remove<vector<u8>, DOFChild>(\n            &mut parent.id,\n            child_name,\n        );\n        object::delete(id);\n    }\n\n    // Removes a DOFChild from the parent object and transfers it to the caller\n    public fun reclaim_dofchild(parent: &mut Parent, child_name: vector<u8>, ctx: &mut TxContext) {\n        let child = ofield::remove<vector<u8>, DOFChild>(\n            &mut parent.id,\n            child_name,\n        );\n        transfer::transfer(child, tx_context::sender(ctx));\n    }\n\nNote that in the case of a dynamic object field, we can delete or transfer it after removing its attachment to another object, as a dynamic object field is a Sui object. But we cannot do the same with a dynamic field, as it does not have the key ability and is not a Sui object.\n\nDynamic Field vs. Dynamic Object Field\n\nWhen should you use a dynamic field versus a dynamic object field? Generally speaking, we want to use dynamic object fields when the child type in question has the key ability and use dynamic fields otherwise.\n\nFor a full explanation of the underlying reason, please check this forum post by @sblackshear.\n\nRevisiting Table\n\nNow we understand how dynamic fields work, we can think of the Table collection as a thin wrapper around dynamic field operations.\n\nYou can look through the source code of the Table type in Sui as an exercise, and see how each of the previously introduced operations map to dynamic field operations and with some additional logic to keep track of the size of the Table."
    },
    {
      "title": "sui-move-intro-course/unit-three/lessons/7_unit_testing.md at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/blob/main/unit-three/lessons/7_unit_testing.md",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nunit-four\nunit-one\nunit-three\nexample_projects\nimages\nlessons\n1_sui_framework.md\n2_intro_to_generics.md\n3_witness_design_pattern.md\n4_the_coin_resource_and_create_currency.md\n5_managed_coin.md\n6_clock_and_locked_coin.md\n7_unit_testing.md\nunit-two\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course/unit-three/lessons\n/7_unit_testing.md\nLatest commit\nhyd628\nLocked_coin 1st half\n15c5f63\n · \nHistory\nHistory\nFile metadata and controls\nPreview\nCode\nBlame\n97 lines (66 loc) · 4.09 KB\nRaw\nUnit Testing\n\nSui supports the Move Testing Framework. Here, we will create some unit tests for Managed Coin to show how to write unit tests and run them.\n\nTesting Environment\n\nSui Move test code is just like any other Sui Move code, but it has special annotations and functions to distinguish it from the actual production code. Test functions or modules start with the #[test] or #[test_only] annotation.\n\n#[test_only]\nmodule fungible_tokens::managed_tests {\n  #[test]\n  fun mint_burn() {\n  }\n}\n\nWe will put the unit tests for Managed Coin into a separate testing module called managed_tests.\n\nEach function inside this module can be seen as one unit test consisting of one or more transactions. We'll write one unit test called mint_burn.\n\nTest Scenario\n\nInside the testing environment, we will be mainly leveraging the test_scenario package to simulate a runtime environment. The main object we need to understand and interact with here is the Scenario object. A Scenario simulates a multi-transaction sequence, and it can be initialized with the sender address as follows:\n\n  // Initialize a mock sender address\n  let addr1 = @0xA;\n  // Begins a multi-transaction scenario with addr1 as the sender\n  let scenario = test_scenario::begin(addr1);\n  ...\n  // Cleans up the scenario object\n  test_scenario::end(scenario);  \n\n💡Note that the Scenario object is not droppable, so it must be explicitly cleaned up at the end of its scope using test_scenario::end.\n\nInitializing the Module State\n\nTo test our Managed Coin module, we need first to initialize the module state. Given that our module has an init function, we need to first create a test_only init function inside the managed module:\n\n#[test_only]\n    /// Wrapper of module initializer for testing\n    public fun test_init(ctx: &mut TxContext) {\n        init(MANAGED {}, ctx)\n    }\n\nThis is essentially a mock init function that can only be used for testing. Then we can initialize the runtime state in our scenario by simply calling this function:\n\n    // Run the managed coin module init function\n    {\n        managed::test_init(ctx(&mut scenario))\n    };\nMinting\n\nWe use the next_tx method to advance to the next transaction in our scenario where we want to mint a Coin<MANAGED> object.\n\nTo do this, we need first to extract the TreasuryCap<MANAGED> object. We use a special testing function called take_from_sender to retrieve this from our scenario. Note that we need to pass into take_from_sender the type parameter of the object we are trying to retrieve.\n\nThen we simply call the managed::mint using all the necessary parameters.\n\nAt the end of this transaction, we must return the TreasuryCap<MANAGED> object to the sender address using test_scenario::return_to_address.\n\nnext_tx(&mut scenario, addr1);\n        {\n            let treasurycap = test_scenario::take_from_sender<TreasuryCap<MANAGED>>(&scenario);\n            managed::mint(&mut treasurycap, 100, addr1, test_scenario::ctx(&mut scenario));\n            test_scenario::return_to_address<TreasuryCap<MANAGED>>(addr1, treasurycap);\n        };\nBurning\n\nTo test burning a token, the procedure is very similar to testing minting. The only difference is that we must also retrieve a Coin<MANAGED> object from the person it was minted to.\n\nRunning Unit Tests\n\nThe full managed_tests module source code can be found under example_projects folder.\n\nTo execute the unit tests, navigate to the project directory in CLI and enter the following command:\n\n  sui move test\n\nYou should see console output indicating which unit tests have passed or failed."
    },
    {
      "title": "sui-move-intro-course/unit-four/lessons/1_homogeneous_collections.md at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/blob/main/unit-four/lessons/1_homogeneous_collections.md",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nunit-four\nexample_projects\nimages\nlessons\n1_homogeneous_collections.md\n2_dynamic_fields.md\n3_heterogeneous_collections.md\n4_marketplace_contract.md\n5_deployment_and_testing.md\nreadme.md\nunit-one\nunit-three\nunit-two\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course/unit-four/lessons\n/1_homogeneous_collections.md\nLatest commit\nuvd\nfeat: move 2024\n65c6b7b\n · \nHistory\nHistory\nFile metadata and controls\nPreview\nCode\nBlame\n122 lines (89 loc) · 4.63 KB\nRaw\nHomogeneous Collections\n\nBefore we delve into the main topic of building a marketplace on Sui, let's learn about collections in Move first.\n\nvectors\n\nVector in Move is similar to those in other languages such as C++. It's a way to dynamically allocate memory at runtime and manage a group of a single type, which can be a specific type or a generic type.\n\nSee the included example code for defining a vector and its basic operations.\n\nmodule collection::vector {\n\n    use std::vector;\n\n    public struct Widget {\n    }\n\n    // Vector for a specified  type\n    public struct WidgetVector {\n        widgets: vector<Widget>\n    }\n\n    // Vector for a generic type \n    public struct GenericVector<T> {\n        values: vector<T>\n    }\n\n    // Creates a GenericVector that holds a generic type T\n    public fun create<T>(): GenericVector<T> {\n        GenericVector<T> {\n            values: vector::empty<T>()\n        }\n    }\n\n    // Push a value of type T into a GenericVector\n    public fun put<T>(vec: &mut GenericVector<T>, value: T) {\n        vector::push_back<T>(&mut vec.values, value);\n    }\n\n    // Pops a value of type T from a GenericVector\n    public fun remove<T>(vec: &mut GenericVector<T>): T {\n        vector::pop_back<T>(&mut vec.values)\n    }\n\n    // Returns the size of a given GenericVector\n    public fun size<T>(vec: &mut GenericVector<T>): u64 {\n        vector::length<T>(&vec.values)\n    }\n}\n\nIt's important to note that while a vector defined with a generic type can accept objects of an arbitrary type, all objects in the collection still must be the same type, that is, the collection is homogeneous.\n\nTable\n\nA Table is a map-like collection that dynamically stores key-value pairs. But unlike a traditional map collection, its keys and values are not stored within the Table value, but instead are stored using Sui's object system. The Table struct acts only as a handle into the object system to retrieve those keys and values.\n\nThe key type of a Table must have the ability constraint of copy + drop + store, and the value type must have the ability constraint of store.\n\nTable is also a type of homogeneous collection where the key and value fields can be specified or generic types, but all values and all keys in a Table collection must be of the same type.\n\nQuiz: Would two table objects containing the exact same key-value pairs be equal to each other when checked with the === operator? Try it out.\n\nSee the below example for working with Table collections:\n\nmodule collection::table {\n\n    use sui::table::{Table, Self};\n    use sui::tx_context::{TxContext};\n\n    // Defining a table with specified types for the key and value\n    public struct IntegerTable {\n        table_values: Table<u8, u8>\n    }\n\n    // Defining a table with generic types for the key and value \n    public struct GenericTable<phantom K: copy + drop + store, phantom V: store> {\n        table_values: Table<K, V>\n    }\n\n    // Create a new, empty GenericTable with key type K, and value type V\n    public fun create<K: copy + drop + store, V: store>(ctx: &mut TxContext): GenericTable<K, V> {\n        GenericTable<K, V> {\n            table_values: table::new<K, V>(ctx)\n        }\n    }\n\n    // Adds a key-value pair to GenericTable\n    public fun add<K: copy + drop + store, V: store>(table: &mut GenericTable<K, V>, k: K, v: V) {\n        table::add(&mut table.table_values, k, v);\n    }\n\n    /// Removes the key-value pair in the GenericTable `table: &mut Table<K, V>` and returns the value.   \n    public fun remove<K: copy + drop + store, V: store>(table: &mut GenericTable<K, V>, k: K): V {\n        table::remove(&mut table.table_values, k)\n    }\n\n    // Borrows an immutable reference to the value associated with the key in GenericTable\n    public fun borrow<K: copy + drop + store, V: store>(table: &GenericTable<K, V>, k: K): &V {\n        table::borrow(&table.table_values, k)\n    }\n\n    /// Borrows a mutable reference to the value associated with the key in GenericTable\n    public fun borrow_mut<K: copy + drop + store, V: store>(table: &mut GenericTable<K, V>, k: K): &mut V {\n        table::borrow_mut(&mut table.table_values, k)\n    }\n\n    /// Check if a value associated with the key exists in the GenericTable\n    public fun contains<K: copy + drop + store, V: store>(table: &GenericTable<K, V>, k: K): bool {\n        table::contains<K, V>(&table.table_values, k)\n    }\n\n    /// Returns the size of the GenericTable, the number of key-value pairs\n    public fun length<K: copy + drop + store, V: store>(table: &GenericTable<K, V>): u64 {\n        table::length(&table.table_values)\n    }\n\n}"
    },
    {
      "title": "sui-move-intro-course/unit-three/lessons/6_clock_and_locked_coin.md at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/blob/main/unit-three/lessons/6_clock_and_locked_coin.md",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nunit-four\nunit-one\nunit-three\nexample_projects\nimages\nlessons\n1_sui_framework.md\n2_intro_to_generics.md\n3_witness_design_pattern.md\n4_the_coin_resource_and_create_currency.md\n5_managed_coin.md\n6_clock_and_locked_coin.md\n7_unit_testing.md\nunit-two\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course/unit-three/lessons\n/6_clock_and_locked_coin.md\nLatest commit\nuvd\nfeat: move 2024\n65c6b7b\n · \nHistory\nHistory\nFile metadata and controls\nPreview\nCode\nBlame\n95 lines (67 loc) · 4.27 KB\nRaw\nClock and Locked Coin Example\n\nIn the second fungible token example, we will introduce how to obtain time on-chain in Sui, and how to utilize that to implement a vesting mechanism for a coin.\n\nClock\n\nSui Framework has a native clock module that makes timestamps available in Move smart contracts.\n\nThe main method that you will need to access is the following:\n\npublic fun timestamp_ms(clock: &clock::Clock): u64\n\n\nthe timestamp_ms function returns the current system timestamp, as a running total of milliseconds since an arbitrary point in the past.\n\nThe clock object has a special reserved identifier, 0x6, that needs to be passed into function calls using it as one of the inputs.\n\nLocked Coin\n\nNow that we know how to access time on-chain through clock, implementing a vesting fungible token is relatively straight forward.\n\nLocker Custom Type\n\nlocked_coin builds on top of the managed_coin implementation with the addition of one more custom type, Locker:\n\n    /// Transferrable object for storing the vesting coins\n    ///\n    public struct Locker has key, store {\n        id: UID,\n        start_date: u64,\n        final_date: u64,\n        original_balance: u64,\n        current_balance: Balance<LOCKED_COIN>\n\n    }\n\nLocker is a transferrable asset that encodes the information related to the vesting schedule and vesting status of tokens issued.\n\nstart_date and final_date are timestamps obtained from clock, marking the start and end of the vesting term.\n\noriginal_balance is the initial balance issued into a Locker, balance is the current and remaining balance taking account any vested portion that's already withdrawn.\n\nMinting\n\nIn the locked_mint method, we create and transfer a Locker with the specified amount of tokens and vesting scheduled encoded:\n\n    /// Mints and transfers a locker object with the input amount of coins and specified vesting schedule\n    /// \n    public fun locked_mint(treasury_cap: &mut TreasuryCap<LOCKED_COIN>, recipient: address, amount: u64, lock_up_duration: u64, clock: &Clock, ctx: &mut TxContext){\n        \n        let coin = coin::mint(treasury_cap, amount, ctx);\n        let start_date = clock::timestamp_ms(clock);\n        let final_date = start_date + lock_up_duration;\n\n        transfer::public_transfer(Locker {\n            id: object::new(ctx),\n            start_date: start_date,\n            final_date: final_date,\n            original_balance: amount,\n            current_balance: coin::into_balance(coin)\n        }, recipient);\n    }\n\nNote how clock is used here to get the current timestamp.\n\nWithdrawing\n\nThe withdraw_vested method contains the majority of the logic to compute the vested amounts:\n\n    /// Withdraw the available vested amount assuming linear vesting\n    ///\n    public fun withdraw_vested(locker: &mut Locker, clock: &Clock, ctx: &mut TxContext){\n        let total_duration = locker.final_date - locker.start_date;\n        let elapsed_duration = clock::timestamp_ms(clock) - locker.start_date;\n        let total_vested_amount = if (elapsed_duration > total_duration) {\n            locker.original_balance\n        } else {\n            locker.original_balance * elapsed_duration / total_duration\n        };\n        let available_vested_amount = total_vested_amount - (locker.original_balance-balance::value(&locker.current_balance));\n        transfer::public_transfer(coin::take(&mut locker.current_balance, available_vested_amount, ctx), sender(ctx))\n    }\n\nThis example assumes a simple linear vesting schedule, but can be modified to accommodate a wide range of vesting logic and schedule.\n\nFull Contract\n\nYou can find the full smart contract for our implementation of a locked_coin under the example_projects/locked_coin folder."
    },
    {
      "title": "sui-move-intro-course/unit-three/lessons/5_managed_coin.md at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/blob/main/unit-three/lessons/5_managed_coin.md",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nunit-four\nunit-one\nunit-three\nexample_projects\nimages\nlessons\n1_sui_framework.md\n2_intro_to_generics.md\n3_witness_design_pattern.md\n4_the_coin_resource_and_create_currency.md\n5_managed_coin.md\n6_clock_and_locked_coin.md\n7_unit_testing.md\nunit-two\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course/unit-three/lessons\n/5_managed_coin.md\nLatest commit\nhyd628\nlocked_coin contract\n35fa44e\n · \nHistory\nHistory\nFile metadata and controls\nPreview\nCode\nBlame\n74 lines (43 loc) · 3.44 KB\nRaw\nManaged Coin Example\n\nNow we have peeked under the hood of the sui::coin module, we can look at a simple but complete example of creating a type of custom fungible token where there is a trusted manager that has the capability to mint and burn, similar to many ERC-20 implementations.\n\nSmart Contract\n\nYou can find the complete Managed Coin example contract under the example project folder.\n\nGiven what we have covered so far, this contract should be fairly easy to understand. It follows the One Time Witness pattern exactly, where the witness resource is named MANAGED, and automatically created by the module init function.\n\nThe init function then calls coin::create_currency to get the TreasuryCap and CoinMetadata resources. The parameters passed into this function are the fields of the CoinMetadata object, so include the token name, symbol, icon URL, etc.\n\nThe CoinMetadata is immediately frozen after creation via the transfer::freeze_object method, so that it becomes a shared immutable object that can be read by any address.\n\nThe TreasuryCap Capability object is used as a way to control access to the mint and burn methods that create or destroy Coin<MANAGED> objects respectively.\n\nPublishing and CLI Testing\nPublish the Module\n\nUnder the fungible_tokens project folder, run:\n\n    sui client publish --gas-budget 10000000\n\nYou should see console output similar to:\n\nThe two immutable objects created are respectively the package itself and the CoinMetadata object of Managed Coin. And the owned object passed to the transaction sender is the TreasuryCap object of Managed Coin.\n\nExport the object IDs of the package object and the TreasuryCap object to environmental variables:\n\nexport PACKAGE_ID=<package object ID from previous output>\nexport TREASURYCAP_ID=<treasury cap object ID from previous output>\nMinting Tokens\n\nTo mint some MNG tokens, we can use the following CLI command:\n\n    sui client call --function mint --module managed --package $PACKAGE_ID --args $TREASURYCAP_ID <amount to mint> <recipient address> --gas-budget 10000000\n\n💡Note: as of Sui binary version 0.21.0, u64 inputs must be escaped as strings, thus the above CLI command format. This might change in a future version.\n\nExport the object ID of the newly minted COIN<MANAGED> object to a bash variable:\n\nexport COIN_ID=<coin object ID from previous output>\n\nVerify that the Supply field under the TreasuryCap<MANAGED> object should be increased by the amount minted.\n\nBurning Tokens\n\nTo burn an existing COIN<MANAGED> object, we use the following CLI command:\n\n    sui client call --function burn --module managed --package $PACKAGE_ID --args $TREASURYCAP_ID $COIN_ID --gas-budget 10000000\n\nVerify that the Supply field under the TreasuryCap<MANAGED> object should be back to 0.\n\nExercise: What other commonly used functions do fungible tokens need? You should know enough about programming in Move now to try to implement some of these functions."
    },
    {
      "title": "sui-move-intro-course/unit-three/lessons/4_the_coin_resource_and_create_currency.md at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/blob/main/unit-three/lessons/4_the_coin_resource_and_create_currency.md",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nunit-four\nunit-one\nunit-three\nexample_projects\nimages\nlessons\n1_sui_framework.md\n2_intro_to_generics.md\n3_witness_design_pattern.md\n4_the_coin_resource_and_create_currency.md\n5_managed_coin.md\n6_clock_and_locked_coin.md\n7_unit_testing.md\nunit-two\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course/unit-three/lessons\n/4_the_coin_resource_and_create_currency.md\nLatest commit\nuvd\nfeat: move 2024\n65c6b7b\n · \nHistory\nHistory\nFile metadata and controls\nPreview\nCode\nBlame\n108 lines (82 loc) · 4.59 KB\nRaw\nThe Coin Resource and create_currency Method\n\nNow we know how generics and witness patterns work, let's revisit the Coin resource and the create_currency method.\n\nThe Coin Resource\n\nNow we understand how generics work. We can revisit the Coin resource from sui::coin. It's defined as the following:\n\npublic struct Coin<phantom T> has key, store {\n        id: UID,\n        balance: Balance<T>\n    }\n\nThe Coin resource type is a struct that has a generic type T and two fields, id and balance. id is of the type sui::object::UID, which we have already seen before.\n\nbalance is of the type sui::balance::Balance, and is defined as:\n\npublic struct Balance<phantom T> has store {\n    value: u64\n}\n\nRecall our discussion on phantom, The type T is used in Coin only as an argument to another phantom type for Balance, and in Balance, it's not used in any of its fields, thus T is a phantom type parameter.\n\nCoin<T> serves as a transferrable asset representation of a certain amount of the fungible token type T that can be transferred between addresses or consumed by smart contract function calls.\n\nThe create_currency Method\n\nLet's look at what coin::create_currency actually does in its source code:\n\n    public fun create_currency<T: drop>(\n        witness: T,\n        decimals: u8,\n        symbol: vector<u8>,\n        name: vector<u8>,\n        description: vector<u8>,\n        icon_url: Option<Url>,\n        ctx: &mut TxContext\n    ): (TreasuryCap<T>, CoinMetadata<T>) {\n        // Make sure there's only one instance of the type T\n        assert!(sui::types::is_one_time_witness(&witness), EBadWitness);\n\n        // Emit Currency metadata as an event.\n        event::emit(CurrencyCreated<T> {\n            decimals\n        });\n\n        (\n            TreasuryCap {\n                id: object::new(ctx),\n                total_supply: balance::create_supply(witness)\n            },\n            CoinMetadata {\n                id: object::new(ctx),\n                decimals,\n                name: string::utf8(name),\n                symbol: ascii::string(symbol),\n                description: string::utf8(description),\n                icon_url\n            }\n        )\n    }\n\nThe assert checks that the witness resource passed in is a One Time Witness using the sui::types::is_one_time_witness method from the Sui Framework.\n\nThe method creates and returns two objects, one is the TreasuryCap resource and the other is a CoinMetadata resource.\n\nTreasuryCap\n\nThe TreasuryCap is an asset and is guaranteed to be a singleton object by the One Time Witness pattern:\n\n    /// Capability allowing the bearer to mint and burn\n    /// coins of type `T`. Transferable\n    public struct TreasuryCap<phantom T> has key, store {\n            id: UID,\n            total_supply: Supply<T>\n        }\n\nIt wraps a singleton field total_supply of type Balance::Supply:\n\n/// A Supply of T. Used for minting and burning.\n    /// Wrapped into a `TreasuryCap` in the `Coin` module.\n    public struct Supply<phantom T> has store {\n        value: u64\n    }\n\nSupply<T> tracks the total amount of the given custom fungible token of type T currently circulating. You can see why this field must be a singleton, as having multiple Supply instances for a single token type makes no sense.\n\nCoinMetadata\n\nThis is a resource that stores the metadata of the fungible token that has been created. It includes the following fields:\n\ndecimals: the precision of this custom fungible token\nname: the name of this custom fungible token\nsymbol: the token symbol of this custom fungible token\ndescription: the description of this custom fungible token\nicon_url: the URL to the icon file of this custom fungible token\n\nThe information contained in CoinMetadata can be thought of as a basic and lightweight fungible token standard of Sui, and can be used by wallets and explorers to display fungible tokens created using the sui::coin module.\n\n "
    },
    {
      "title": "sui-move-intro-course/unit-three/lessons/2_intro_to_generics.md at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/blob/main/unit-three/lessons/2_intro_to_generics.md",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nunit-four\nunit-one\nunit-three\nexample_projects\nimages\nlessons\n1_sui_framework.md\n2_intro_to_generics.md\n3_witness_design_pattern.md\n4_the_coin_resource_and_create_currency.md\n5_managed_coin.md\n6_clock_and_locked_coin.md\n7_unit_testing.md\nunit-two\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course/unit-three/lessons\n/2_intro_to_generics.md\nLatest commit\nuvd\nfeat: move 2024\n65c6b7b\n · \nHistory\nHistory\nFile metadata and controls\nPreview\nCode\nBlame\n99 lines (67 loc) · 4.09 KB\nRaw\nIntro to Generics\n\nGenerics are abstract stand-ins for concrete types or other properties. They work similarly to generics in Rust, and can be used to allow greater flexibility and avoid logic duplication while writing Sui Move code.\n\nGenerics are a key concept in Sui Move, and it's important to understand and have an intuition for how they work, so take your time with this section and understand every part fully.\n\nGenerics Usage\nUsing Generics in Structs\n\nLet's look at a basic example of how to use generics to create a container Box that can hold any type in Sui Move.\n\nFirst, without generics, we can define a Box that holds a u64 type as the following:\n\nmodule  generics::storage {\n    public struct Box {\n        value: u64\n    }\n}\n\nHowever, this type will only be able to hold a value of type u64. To make our Box able to hold any generic type, we will need to use generics. The code would be modified as follows:\n\nmodule  generics::storage {\n    public struct Box<T> {\n        value: T\n    }\n}\nAbility Constraints\n\nWe can add conditions to enforce that the type passed into the generic must have certain abilities. The syntax looks like the following:\n\nmodule  generics::storage {\n    // T must be copyable and droppable \n    public struct Box<T: store + drop> has key, store {\n        value: T\n    }\n}\n\n💡It's important to note here that the inner type T in the above example must meet certain ability constraints due to the outer container type. In this example, T must have store, as Box has store and key. However, T can also have abilities that the container doesn't have, such as drop in this example.\n\nThe intuition is that if the container is allowed to contain a type that does not follow the same rules that it does, the container would violate its own ability. How can a box be storable if its content isn't also storable?\n\nWe will see in the next section that there is a way to get around this rule in certain cases using a special keyword, called phantom.\n\n💡See the generics project under example_projects for some examples of generic types.\n\nUsing Generics in Functions\n\nTo write a function that returns an instance of Box that can accept a parameter of any type for the value field, we also have to use generics in the function definition. The function can be defined as the following:\n\npublic fun create_box<T>(value: T): Box<T> {\n        Box<T> { value }\n    }\n\nIf we want to restrict the function to only accept a specific type for value, we simply specify that type in the function signature as follows:\n\npublic fun create_box(value: u64): Box<u64> {\n        Box<u64>{ value }\n    }\n\nThis will only accept inputs of the type u64 for the create_box method, while still using the same generic Box struct.\n\nCalling Functions with Generics\n\nTo call a function with a signature that contains generics, we must specify the type in angle brackets, as in the following syntax:\n\n// value will be of type storage::Box<bool>\n    let bool_box = storage::create_box<bool>(true);\n// value will be of the type storage::Box<u64>\n    let u64_box = storage::create_box<u64>(1000000);\nCalling Functions with Generics using Sui CLI\n\nTo call a function with generics in its signature from the Sui CLI, you must define the argument's type using the flag --type-args.\n\nThe following is an example that calls the create_box function to create a box that contains a coin of the type 0x2::sui::SUI:\n\nsui client call --package $PACKAGE --module $MODULE --function \"create_box\" --args $OBJECT_ID --type-args 0x2::sui::SUI --gas-budget 10000000\nAdvanced Generics Syntax\n\nFor more advanced syntax involving the use of generics in Sui Move, such as multiple generic types, please refer to the excellent section on generics in the Move Book.\n\nBut for our current lesson on fungible tokens, you already know enough about how generics work to proceed."
    },
    {
      "title": "sui-move-intro-course/unit-three/lessons/3_witness_design_pattern.md at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/blob/main/unit-three/lessons/3_witness_design_pattern.md",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nunit-four\nunit-one\nunit-three\nexample_projects\nimages\nlessons\n1_sui_framework.md\n2_intro_to_generics.md\n3_witness_design_pattern.md\n4_the_coin_resource_and_create_currency.md\n5_managed_coin.md\n6_clock_and_locked_coin.md\n7_unit_testing.md\nunit-two\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course/unit-three/lessons\n/3_witness_design_pattern.md\nLatest commit\nuvd\nfeat: move 2024\n65c6b7b\n · \nHistory\nHistory\nFile metadata and controls\nPreview\nCode\nBlame\n73 lines (51 loc) · 4.51 KB\nRaw\nThe Witness Design Pattern\n\nNext, we need to understand the witness pattern to peek under the hood of how a fungible token is implemented in Sui Move.\n\nWitness is a design pattern used to prove that the resource or type in question, A, can be initiated only once after the ephemeral witness resource has been consumed. The witness resource must be immediately consumed or dropped after use, ensuring that it cannot be reused to create multiple instances of A.\n\nWitness Pattern Example\n\nIn the below example, the witness resource is PEACE, while the type A that we want to control the instantiation of is Guardian.\n\nThe witness resource type must have the drop keyword so that this resource can be dropped after being passed into a function. We see that the instance of PEACE resource is passed into the create_guardian method and dropped (note the underscore before witness), ensuring that only one instance of Guardian can be created.\n\n    /// Module that defines a generic type `Guardian<T>` which can only be\n    /// instantiated with a witness.\n    module witness::peace {\n        use sui::object::{Self, UID};\n        use sui::transfer;\n        use sui::tx_context::{Self, TxContext};\n\n        /// Phantom parameter T can only be initialized in the `create_guardian`\n        /// function. But the types passed here must have `drop`.\n        public struct Guardian<phantom T: drop> has key, store {\n            id: UID\n        }\n\n        /// This type is the witness resource and is intended to be used only once.\n        public struct PEACE has drop {}\n\n        /// The first argument of this function is an actual instance of the\n        /// type T with `drop` ability. It is dropped as soon as received.\n        public fun create_guardian<T: drop>(\n            _witness: T, ctx: &mut TxContext\n        ): Guardian<T> {\n            Guardian { id: object::new(ctx) }\n        }\n\n        /// Module initializer is the best way to ensure that the\n        /// code is called only once. With `Witness` pattern it is\n        /// often the best practice.\n        fun init(witness: PEACE, ctx: &mut TxContext) {\n            transfer::transfer(\n                create_guardian(witness, ctx),\n                tx_context::sender(ctx)\n            )\n        }\n    }\n\nThe example above is modified from the excellent book Sui Move by Example by Damir Shamanaev.\n\nThe phantom Keyword\n\nIn the above example, we want the Guardian type to have the key and store abilities, so that it's an asset and is transferrable and persists in global storage.\n\nWe also want to pass in the witness resource, PEACE, into Guardian, but PEACE only has the drop ability. Recall our previous discussion on ability constraints and inner types, the rule implies that PEACE should also have key and storage given that the outer type Guardian does. But in this case, we do not want to add unnecessary abilities to our witness type, because doing so could cause undesirable behaviors and vulnerabilities.\n\nWe can use the keyword phantom to get around this situation. When a type parameter is either not used inside the struct definition or is only used as an argument to another phantom type parameter, we can use the phantom keyword to ask the Move type system to relax the ability constraint rules on inner types. We see that Guardian doesn't use the type T in any of its fields, so we can safely declare T to be a phantom type.\n\nFor a more in-depth explanation of the phantom keyword, please check the relevant section of the Move language documentation.\n\nOne Time Witness\n\nOne Time Witness (OTW) is a sub-pattern of the Witness pattern, where we utilize the module init function to ensure that only one instance of the witness resource is created (so type A is guaranteed to be a singleton).\n\nIn Sui Move a type is considered an OTW if its definition has the following properties:\n\nThe type is named after the module but uppercased\nThe type only has the drop ability\n\nTo get an instance of this type, you need to add it as the first argument to the module init function as in the above example. The Sui runtime will then generate the OTW struct automatically at module publish time.\n\nThe above example uses the One Time Witness design pattern to guarantee that Guardian is a singtleton."
    },
    {
      "title": "sui-move-intro-course/unit-three/lessons/1_sui_framework.md at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/blob/main/unit-three/lessons/1_sui_framework.md",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nunit-four\nunit-one\nunit-three\nexample_projects\nimages\nlessons\n1_sui_framework.md\n2_intro_to_generics.md\n3_witness_design_pattern.md\n4_the_coin_resource_and_create_currency.md\n5_managed_coin.md\n6_clock_and_locked_coin.md\n7_unit_testing.md\nunit-two\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course/unit-three/lessons\n/1_sui_framework.md\nLatest commit\nQiLOL\nDoc update\n72a8643\n · \nHistory\nHistory\nFile metadata and controls\nPreview\nCode\nBlame\n27 lines (13 loc) · 1.87 KB\nRaw\nSui Framework\n\nA common use case for smart contracts is issuing custom fungible tokens (such as ERC-20 tokens on Ethereum). Let's take a look at how that can be done on Sui using the Sui Framework, and some variations on the classic fungible tokens.\n\nSui Framework\n\nThe Sui Framework is Sui's specific implementation of the Move VM. It contains Sui's native API's including its implementation of the Move standard library, as well as Sui-specific operations such as crypto primitives and Sui's implementation of data structures at the framework level.\n\nAn implementation of a custom fungible token in Sui will heavily leverage some of the libraries in the Sui Framework.\n\nsui::coin\n\nThe main library we will use to implement a custom fungible token on Sui is the sui::coin module.\n\nThe resources or methods we will directly use in our fungible token example are:\n\nResource: Coin\nResource: TreasuryCap\nResource: CoinMetadata\nMethod: coin::create_currency\n\nWe will revisit each of these in more depth after introducing some new concepts in the next few sections.\n\n "
    },
    {
      "title": "sui-move-intro-course/unit-two/lessons/7_events.md at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/blob/main/unit-two/lessons/7_events.md",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nunit-four\nunit-one\nunit-three\nunit-two\nexample_projects\nimages\nlessons\n1_working_with_sui_objects.md\n2_ownership.md\n3_parameter_passing_and_object_deletion.md\n4_object_wrapping.md\n5_object_wrapping_example.md\n6_capability_design_pattern.md\n7_events.md\nreadme.md\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course/unit-two/lessons\n/7_events.md\nLatest commit\nuvd\nfeat: move 2024\n65c6b7b\n · \nHistory\nHistory\nFile metadata and controls\nPreview\nCode\nBlame\n58 lines (42 loc) · 2.72 KB\nRaw\nEvents\n\nEvents are important for Sui Move smart contracts, as it is the main way for indexers to track actions on-chain. You can understand it as logging on server backends, and indexers as parsers.\n\nEvents on Sui are also represented as objects. There are several types of system level events in Sui, including Move event, Publish event, Transfer object event, and so on. For the full list of system event types, please refer to the Sui Events API page here.\n\nThe event details of a transaction can be viewed on the Sui Explorer under the Events tab:\n\nCustom Events\n\nDevelopers can also define custom events on Sui. We can define a custom event marking when a transcript has been requested in the following way.\n\n    /// Event marking when a transcript has been requested\n    public struct TranscriptRequestEvent has copy, drop {\n        // The Object ID of the transcript wrapper\n        wrapper_id: ID,\n        // The requester of the transcript\n        requester: address,\n        // The intended address of the transcript\n        intended_address: address,\n    }\n\nThe type representing an event has the abilities copy and drop. Event objects aren't representing assets, and we are only interested in the data contained within, so they can be duplicated, and dropped at the end of scopes.\n\nTo emit an event in Sui, you just need to use the sui::event::emit method.\n\nLet's modify our request_transcript method to emit this event:\n\n    public fun request_transcript(transcript: WrappableTranscript, intended_address: address, ctx: &mut TxContext){\n        let folderObject = Folder {\n            id: object::new(ctx),\n            transcript,\n            intended_address\n        };\n        event::emit(TranscriptRequestEvent {\n            wrapper_id: object::uid_to_inner(&folderObject.id),\n            requester: tx_context::sender(ctx),\n            intended_address,\n        });\n        //We transfer the wrapped transcript object directly to the intended address\n        transfer::transfer(folderObject, intended_address);\n    }\n\nOn the Sui explorer, we can see the event emitted displayed as the following, showing the three data fields that we defined in the TranscriptRequestEvent event:\n\nHere is the complete version of the transcript sample project: transcript.move\n\nTry out creating, requesting and unpacking transcripts using the Sui CLI client and the Sui explorer to check the result.\n\nThat's the end of Unit 2, great job!"
    },
    {
      "title": "sui-move-intro-course/unit-two/lessons/6_capability_design_pattern.md at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/blob/main/unit-two/lessons/6_capability_design_pattern.md",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nunit-four\nunit-one\nunit-three\nunit-two\nexample_projects\nimages\nlessons\n1_working_with_sui_objects.md\n2_ownership.md\n3_parameter_passing_and_object_deletion.md\n4_object_wrapping.md\n5_object_wrapping_example.md\n6_capability_design_pattern.md\n7_events.md\nreadme.md\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course/unit-two/lessons\n/6_capability_design_pattern.md\nLatest commit\nuvd\nfeat: move 2024\n65c6b7b\n · \nHistory\nHistory\nFile metadata and controls\nPreview\nCode\nBlame\n88 lines (60 loc) · 3.93 KB\nRaw\nCapability Design Pattern\n\nNow we have the basics of a transcript publishing system, we want to add some access control to our smart contract.\n\nCapability is a commonly used pattern in Move that allows fine-tuned access control using an object-centric model. Let's take a look at how we can define this capability object:\n\n  // Type that marks the capability to create, update, and delete transcripts\npublic struct TeacherCap has key {\n    id: UID\n  }\n\nWe define a new struct TeacherCap that marks the capability to perform privileged actions on transcripts. If we want the capability to be non-transferrable, we simply do not add the store ability to the struct.\n\n*💡Note: This is also how the equivalent of soulbound tokens (SBT) can be easily implemented in Move. You simply define a struct that has the key ability, but not the store ability.\n\nPassing and Consuming Capability Objects\n\nNext, we need to modify the methods which should be callable by someone with the TeacherCap capability object to take in the capability as an extra parameter and consume it immediately.\n\nFor example, for the create_wrappable_transcript_object method, we can modify it as the follows:\n\n    public fun create_wrappable_transcript_object(_: &TeacherCap, history: u8, math: u8, literature: u8, ctx: &mut TxContext) {\n        let wrappableTranscript = WrappableTranscript {\n            id: object::new(ctx),\n            history,\n            math,\n            literature,\n        };\n        transfer::transfer(wrappableTranscript, tx_context::sender(ctx))\n    }\n\nWe pass in a reference to TeacherCap capability object and consume it immediately with the _ notation for unused variables and parameters. Note that because we are only passing in a reference to the object, consuming the reference has no effect on the original object.\n\nQuiz: What happens if try to pass in TeacherCap by value?\n\nThis means only an address that has a TeacherCap object can call this method, effectively implementing access control on this method.\n\nWe make similar modifications to all other methods in the contract that perform privileged actions on transcripts.\n\nInitializer Function\n\nA module's initializer function is called once upon publishing the module. This is useful for initializing the state of the smart contract, and is used often to send out the initial set of capability objects.\n\nIn our example, we can define the init method as the following:\n\n    /// Module initializer is called only once on module publish.\n    fun init(ctx: &mut TxContext) {\n        transfer::transfer(TeacherCap {\n            id: object::new(ctx)\n        }, tx_context::sender(ctx))\n    }\n\nThis will create one copy of the TeacherCap object and send it to the publisher's address when the module is first published.\n\nWe can see the publish transaction's effects on the Sui Explorer as below:\n\nThe second object created from the above transaction is an instance of the TeacherCap object, and sent to the publisher address:\n\nQuiz: What was the first object created?\n\nAdd Additional Teachers or Admins\n\nIn order to give additional addresses admin access, we can simply define a method to create and send additional TeacherCap objects as the following:\n\n    public fun add_additional_teacher(_: &TeacherCap, new_teacher_address: address, ctx: &mut TxContext){\n        transfer::transfer(\n            TeacherCap {\n                id: object::new(ctx)\n            },\n        new_teacher_address\n        )\n    }\n\nThis method re-uses the TeacherCap to control access, but if needed, you can also define a new capability struct indicating sudo access.\n\nHere is the third work-in-progress version of what we have written so far: WIP transcript.move"
    },
    {
      "title": "sui-move-intro-course/unit-two/lessons/5_object_wrapping_example.md at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/blob/main/unit-two/lessons/5_object_wrapping_example.md",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nunit-four\nunit-one\nunit-three\nunit-two\nexample_projects\nimages\nlessons\n1_working_with_sui_objects.md\n2_ownership.md\n3_parameter_passing_and_object_deletion.md\n4_object_wrapping.md\n5_object_wrapping_example.md\n6_capability_design_pattern.md\n7_events.md\nreadme.md\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course/unit-two/lessons\n/5_object_wrapping_example.md\nLatest commit\nuvd\nfeat: move 2024\n65c6b7b\n · \nHistory\nHistory\nFile metadata and controls\nPreview\nCode\nBlame\n92 lines (66 loc) · 3.28 KB\nRaw\nObject Wrapping Example\n\nWe will implement an example of object wrapping to our transcript example, so that WrappableTranscript is wrapped by a Folder object, and so that the Folder object can only be unpacked by, and thus the transcript inside only accessible by an intended address/viewer.\n\nModify WrappableTranscript and Folder\n\nFirst, we need to make some adjustments to our two custom types WrappableTranscript and Folder from the previous section\n\nWe need to add the key ability to our type definitions for WrappableTranscript, so that they become assets and are transferrable.\n\nRemember that custom types with the abilities key and store are considered to be assets in Sui Move.\n\npublic struct WrappableTranscript has key, store {\n        id: UID,\n        history: u8,\n        math: u8,\n        literature: u8,\n}\nWe need to add an additional field intended_address to the Folder struct that indicates the address of the intended viewer of the wrapped transcript.\npublic struct Folder has key {\n    id: UID,\n    transcript: WrappableTranscript,\n    intended_address: address\n}\nRequest Transcript Method\npublic fun request_transcript(transcript: WrappableTranscript, intended_address: address, ctx: &mut TxContext){\n    let folderObject = Folder {\n        id: object::new(ctx),\n        transcript,\n        intended_address\n    };\n    //We transfer the wrapped transcript object directly to the intended address\n    transfer::transfer(folderObject, intended_address)\n}\n\nThis method simply takes in a WrappableTranscript object and wraps it in a Folder object, and transfers the wrapped transcript to the intended address of the transcript.\n\nUnwrap Transcript Method\npublic fun unpack_wrapped_transcript(folder: Folder, ctx: &mut TxContext){\n    // Check that the person unpacking the transcript is the intended viewer\n    assert!(folder.intended_address == tx_context::sender(ctx), 0);\n    let Folder {\n        id,\n        transcript,\n        intended_address:_,\n    } = folder;\n    transfer::transfer(transcript, tx_context::sender(ctx));\n    // Deletes the wrapper Folder object\n    object::delete(id)\n    }\n\nThis method unwraps the WrappableTranscript object from the Folder wrapper object if the method caller is the intended viewer of the transcript, and sends it to the method caller.\n\nQuiz: Why do we need to delete the wrapper object here manually? What happens if we don't delete it?\n\nAssert\n\nWe used the assert! syntax to verify that the address sending the transaction to unpack the transcript is the same as the intended_address field of the Folder wrapper object.\n\nthe assert! macro takes in two parameters of the format:\n\nassert!(<bool expression>, <code>)\n\n\nwhere the boolean expression must evaluate to true, otherwise it will abort with error code <code>.\n\nCustom Errors\n\nWe are using a default 0 for our error code above, but we can also define a custom error constant in the following way:\n\n    const ENotIntendedAddress: u64 = 1;\n\nThis error code then can be consumed at the application level and handled appropriately.\n\nHere is the second work-in-progress version of what we have written so far: WIP transcript.move"
    },
    {
      "title": "sui-move-intro-course/unit-two/lessons/4_object_wrapping.md at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/blob/main/unit-two/lessons/4_object_wrapping.md",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nunit-four\nunit-one\nunit-three\nunit-two\nexample_projects\nimages\nlessons\n1_working_with_sui_objects.md\n2_ownership.md\n3_parameter_passing_and_object_deletion.md\n4_object_wrapping.md\n5_object_wrapping_example.md\n6_capability_design_pattern.md\n7_events.md\nreadme.md\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course/unit-two/lessons\n/4_object_wrapping.md\nLatest commit\nuvd\nfeat: move 2024\n65c6b7b\n · \nHistory\nHistory\nFile metadata and controls\nPreview\nCode\nBlame\n28 lines (19 loc) · 1.38 KB\nRaw\nObject Wrapping\n\nThere are multiple ways of nesting an object inside of another object in Sui Move. The first way we will introduce is called object wrapping.\n\nLet's continue our transcript example. We define a new WrappableTranscript type, and the associated wrapper type Folder.\n\npublic struct WrappableTranscript has store {\n    history: u8,\n    math: u8,\n    literature: u8,\n}\n\npublic struct Folder has key {\n    id: UID,\n    transcript: WrappableTranscript,\n}\n\nIn the above example, Folder wraps WrappableTranscript, and Folder is addressable through its id as it has the key ability.\n\nObject Wrapping Properties\n\nFor a struct type to be capable of being embedded in a Sui object struct, which will generally have the key ability, the embedded struct type must have the store ability.\n\nWhen an object is wrapped, the wrapped object is no longer accessible independently via object ID. Instead it would just be parts of the wrapper object itself. More importantly, the wrapped object can no longer be passed as an argument in Move calls, and the only access point is through the wrapper object.\n\nBecause of this property, object wrapping can be used as a way to make an object inaccessible outside of specific contract calls. For further info about Object wrapping, go check out here."
    },
    {
      "title": "sui-move-intro-course/unit-two/lessons/3_parameter_passing_and_object_deletion.md at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/blob/main/unit-two/lessons/3_parameter_passing_and_object_deletion.md",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nunit-four\nunit-one\nunit-three\nunit-two\nexample_projects\nimages\nlessons\n1_working_with_sui_objects.md\n2_ownership.md\n3_parameter_passing_and_object_deletion.md\n4_object_wrapping.md\n5_object_wrapping_example.md\n6_capability_design_pattern.md\n7_events.md\nreadme.md\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course/unit-two/lessons\n/3_parameter_passing_and_object_deletion.md\nLatest commit\nhyd628\nremoving public entry part 2\n583c1cf\n · \nHistory\nHistory\nFile metadata and controls\nPreview\nCode\nBlame\n45 lines (28 loc) · 2.19 KB\nRaw\nParameter Passing and Object Deletion\nParameter Passing (by value, ref and mut ref)\n\nIf you are familiar with rustlang, then you are probably familiar with the Rust ownership system. One advantage of movelang compared to Solidity is that you can get a sense of what a function call might do to the asset that you used for the function interaction. Here are some examples:\n\nuse sui::object::{Self};\n\n// You are allowed to retrieve the score but cannot modify it\npublic fun view_score(transcriptObject: &TranscriptObject): u8{\n    transcriptObject.literature\n}\n\n// You are allowed to view and edit the score but not allowed to delete it\npublic fun update_score(transcriptObject: &mut TranscriptObject, score: u8){\n    transcriptObject.literature = score\n}\n\n// You are allowed to do anything with the score, including view, edit, or delete the entire transcript itself.\npublic fun delete_transcript(transcriptObject: TranscriptObject){\n    let TranscriptObject {id, history: _, math: _, literature: _ } = transcriptObject;\n    object::delete(id);\n}\nObject Deletion and Struct Unpacking\n\nThe delete_transcript method from the example above illustrates how to delete an object on Sui.\n\nIn order to delete an object, you must first unpack the object and retrieve its object ID. Unpacking can only be done inside the module that defines the object due to Move's privileged struct operation rules:\nStruct types can only be created (\"packed\"), destroyed (\"unpacked\") inside the module that defines the struct\nThe fields of a struct are only accessible inside the module that defines the struct\n\nFollowing these rules, if you want to modify your struct outside its defining module, you will need to provide public methods for these operations.\n\nAfter unpacking the struct and retrieving its ID, the object can be deleted by simply calling the object::delete framework method on its object ID.\n\n💡Note: the, _, underscore in the above method denotes unused variables or parameters. This will consume the variable or parameter immediately.\n\nHere is the work-in-progress version of what we have written so far: WIP transcript.move"
    },
    {
      "title": "sui-move-intro-course/unit-two/lessons/2_ownership.md at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/blob/main/unit-two/lessons/2_ownership.md",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nunit-four\nunit-one\nunit-three\nunit-two\nexample_projects\nimages\nlessons\n1_working_with_sui_objects.md\n2_ownership.md\n3_parameter_passing_and_object_deletion.md\n4_object_wrapping.md\n5_object_wrapping_example.md\n6_capability_design_pattern.md\n7_events.md\nreadme.md\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course/unit-two/lessons\n/2_ownership.md\nLatest commit\ngeorgescharlesbrain\nUpdate 2_ownership.md\n5dfd6d9\n · \nHistory\nHistory\nFile metadata and controls\nPreview\nCode\nBlame\n53 lines (32 loc) · 2.05 KB\nRaw\nTypes of Ownership of Sui Objects\n\nEach object in Sui has an owner field that indicates how this object is being owned. In Sui Move, there are a total of four types of ownership.\n\nOwned\nOwned by an address\nOwned by another object\nShared\nShared immutable\nShared mutable\nOwned Objects\n\nThe first two types of ownership fall under the Owned Objects category. Owned objects in Sui are processed differently from shared objects and do not require global ordering.\n\nOwned by an Address\n\nLet's continue using our transcript example here. This type of ownership is pretty straightforward as the object is owned by an address to which the object is transferred upon object creation, such as in the above example at this line:\n\n    transfer::transfer(transcriptObject, tx_context::sender(ctx)) // where tx_context::sender(ctx) is the recipient\n\nwhere the transcriptObject is transferred to the address of the transaction sender upon creation.\n\nOwned by An Object\n\nIn order for an object to be owned by another object, it is done using dynamic_object_field, which we will explore in a future section. Basically, when an object is owned by another object, we will call it a child object. A child object is able to be looked up in global storage using its object ID.\n\nShared Objects\nShared Immutable Objects\n\nCertain objects in Sui cannot be mutated by anyone, and because of this, these objects do not have an exclusive owner. All published packages and modules in Sui are immutable objects.\n\nTo make an object immutable manually, one can call the following special function:\n\n    transfer::freeze_object(obj);\nShared Mutable Objects\n\nShared objects in Sui can be read or mutated by anyone. Shared object transactions require global ordering through a consensus layer protocol, unliked owned objects.\n\nTo create a shared object, one can call this method:\n\n    transfer::share_object(obj);\n\nOnce an object is shared, it stays mutable and can be accessed by anyone to send a transaction to mutate the object."
    },
    {
      "title": "sui-move-intro-course/unit-two/lessons/1_working_with_sui_objects.md at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/blob/main/unit-two/lessons/1_working_with_sui_objects.md",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nunit-four\nunit-one\nunit-three\nunit-two\nexample_projects\nimages\nlessons\n1_working_with_sui_objects.md\n2_ownership.md\n3_parameter_passing_and_object_deletion.md\n4_object_wrapping.md\n5_object_wrapping_example.md\n6_capability_design_pattern.md\n7_events.md\nreadme.md\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course/unit-two/lessons\n/1_working_with_sui_objects.md\nLatest commit\nuvd\nfeat: move 2024\n65c6b7b\n · \nHistory\nHistory\nFile metadata and controls\nPreview\nCode\nBlame\n57 lines (41 loc) · 2.38 KB\nRaw\nWorking with Sui Objects\nIntroduction\n\nSui Move is a fully object-centric language. Transactions on Sui are expressed as operations where the inputs and outputs are both objects. As we briefly touched on this concept in Unit One, Lesson 4, Sui objects are the basic unit of storage in Sui. It all starts from the struct keyword.\n\nLet's first start with an example that represents a transcript recording a student's grades:\n\npublic struct Transcript {\n    history: u8,\n    math: u8,\n    literature: u8,\n}\n\nThe above definition is a regular Move struct, but it is not a Sui object. In order to make a custom Move type instantiate a Sui object in global storage, we need to add the key ability, and a globally unique id: UID field inside the struct definition.\n\nuse sui::object::{UID};\n\npublic struct TranscriptObject has key {\n    id: UID,\n    history: u8,\n    math: u8,\n    literature: u8,\n}\nCreate a Sui Object\n\nCreating a Sui object requires a unique ID. We use the sui::object::new function to create a new ID passing in the current TxContext.\n\nIn Sui, every object must have an owner, which can be either an address, another object, or \"shared\". In our examples, we decided to make our new transcriptObject owned by the transaction sender. It is done using the transfer function of the Sui framework and using tx_context::sender function to get the current entry call's sender's address.\n\nWe will discuss object ownership more in-depth in the next section.\n\nuse sui::object::{Self};\nuse sui::tx_context::{Self, TxContext};\nuse sui::transfer;\n\npublic fun create_transcript_object(history: u8, math: u8, literature: u8, ctx: &mut TxContext) {\n  let transcriptObject = TranscriptObject {\n    id: object::new(ctx),\n    history,\n    math,\n    literature,\n  };\n  transfer::transfer(transcriptObject, tx_context::sender(ctx))\n}\n\n💡Note: the provided sample code generates a warning message: warning[Lint W01001]: non-composable transfer to sender. For further details, refer to the article (\"Sui Linters and Warnings Update Increases Coder Velocity\")[https://blog.sui.io/linter-compile-warnings-update/]\n\n💡Note: Move supports field punning, which allows us to skip the field values if the field name happens to be the same as the name of the value variable it is bound to."
    },
    {
      "title": "sui-move-intro-course/unit-one/lessons/5_contract_deployment.md at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/blob/main/unit-one/lessons/5_contract_deployment.md",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nunit-four\nunit-one\nexample_projects\nimages\nlessons\n1_set_up_environment.md\n2_sui_project_structure.md\n3_custom_types_and_abilities.md\n4_functions.md\n5_contract_deployment.md\nreadme.md\nunit-three\nunit-two\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course/unit-one/lessons\n/5_contract_deployment.md\nLatest commit\nhyd628\nedits\n4aadf7a\n · \nHistory\nHistory\nFile metadata and controls\nPreview\nCode\nBlame\n70 lines (40 loc) · 2.42 KB\nRaw\nContract Deployment and Hello World Demo\nThe Complete Hello World Sample Project\n\nYou can find the complete Hello World project in this directory.\n\nDeploying the Contract\n\nWe will use the Sui CLI to deploy the package to the Sui network. You can deploy it to either the Sui devnet, testnet, or the local node. Just set the Sui CLI to the respective network and have enough tokens to pay for gas.\n\nThe Sui CLI command for deploying the package is the following:\n\nsui client publish --gas-budget <gas_budget> [absolute file path to the package that needs to be published]\n\nFor the gas_budget, we can use a standard value like 20000000.\n\nIf the absolute file path to the package is not provided, it will default to . or the current directory.\n\nThe output should look something like this if the contract was successfully deployed:\n\nThe object ID under the Published Objects section is the object ID of the Hello World package we just published.\n\nLet's export that to a variable.\n\nexport PACKAGE_ID=<package object ID from previous output>\nCalling a Method through a Transaction\n\nNext, we want to mint a Hello World object by calling the mint function in the smart contract we just deployed.\n\nNote that we are able to do this because mint is an entry function.\n\nThe command for this using Sui CLI is:\n\nsui client call --function mint --module hello_world --package $PACKAGE_ID --gas-budget 10000000\n\nThe console output should look like this if the mint function was successfully called and a Hello World object was created and transferred:\n\nThe object ID under the Created Objects section of the output is the ID of the Hello World object.\n\nViewing the Object with Sui Explorer\n\nLet's use the Sui Explorer to view the Hello World object we just created and transferred.\n\nChoose the network you are using through the dropdown menu on the upper right.\n\nIf you are using a local dev node, select the Custom RPC URL option and enter:\n\nhttp://127.0.0.1:9000\n\nSearch for the object ID from the output of the previous transaction and you should be able to find the object on the explorer:\n\nYou should see the text \"Hello World!\" under the object's properties.\n\nGreat job, this concludes the first unit of the course."
    },
    {
      "title": "sui-move-intro-course/unit-one/lessons/4_functions.md at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/blob/main/unit-one/lessons/4_functions.md",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nunit-four\nunit-one\nexample_projects\nimages\nlessons\n1_set_up_environment.md\n2_sui_project_structure.md\n3_custom_types_and_abilities.md\n4_functions.md\n5_contract_deployment.md\nreadme.md\nunit-three\nunit-two\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course/unit-one/lessons\n/4_functions.md\nLatest commit\nuvd\nfeat: move 2024\n65c6b7b\n · \nHistory\nHistory\nFile metadata and controls\nPreview\nCode\nBlame\n59 lines (38 loc) · 2.35 KB\nRaw\nFunctions\n\nIn this section, we will introduce functions in Sui Move and write our first Sui Move function as a part of the Hello World example.\n\nFunction Visibility\n\nSui Move functions have three types of visibility:\n\nprivate: the default visibility of a function; it can only be accessed by functions inside the same module\npublic: the function is accessible by functions inside the same module and by functions defined in another module\npublic(package): the function is accessible by functions inside the same module\nReturn Value\n\nThe return type of a function is specified in the function signature after the function parameters, separated by a colon.\n\nA function's last line (of execution) without a semicolon is the return value.\n\nExample:\n\n    public fun addition (a: u8, b: u8): u8 {\n        a + b    \n    }\nTransaction Context\n\nFunctions called directly through a transaction typically have an instance of TxContext as the last parameter. This is a special parameter set by the Sui Move VM and does not need to be specified by the user calling the function.\n\nThe TxContext object contains essential information about the transaction used to call the entry function, such as the sender's address, the signer's address, the tx's epoch, etc.\n\nCreate the mint Function\n\nWe can define our minting function in the Hello World example as the following:\n\n    public fun mint(ctx: &mut TxContext) {\n        let object = HelloWorldObject {\n            id: object::new(ctx),\n            text: string::utf8(b\"Hello World!\")\n        };\n        transfer::public_transfer(object, tx_context::sender(ctx));\n    }\n\nThis function simply creates a new instance of the HelloWorldObject custom type, then uses the Sui system public_transfer function to send it to the transaction caller."
    },
    {
      "title": "sui-move-intro-course/unit-one/lessons/2_sui_project_structure.md at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/blob/main/unit-one/lessons/2_sui_project_structure.md",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nunit-four\nunit-one\nexample_projects\nimages\nlessons\n1_set_up_environment.md\n2_sui_project_structure.md\n3_custom_types_and_abilities.md\n4_functions.md\n5_contract_deployment.md\nreadme.md\nunit-three\nunit-two\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course/unit-one/lessons\n/2_sui_project_structure.md\nLatest commit\nuvd\nfeat: move 2024\n65c6b7b\n · \nHistory\nHistory\nFile metadata and controls\nPreview\nCode\nBlame\n81 lines (50 loc) · 2.93 KB\nRaw\nSui Project Structure\nSui Module and Package\n\nA Sui module is a set of functions and types packed together which the developer publishes under a specific address\n\nThe Sui standard library is published under the 0x2 address, while user-deployed modules are published under a pseudorandom address assigned by the Sui Move VM\n\nModule starts with the module keyword, which is followed by the module name and curly braces - inside them, module contents are placed:\n\nmodule hello_world::hello_world {\n    // module contents\n}\n\nPublished modules are immutable objects in Sui; an immutable object is an object that can never be mutated, transferred, or deleted. Because of this immutability, the object is not owned by anyone, and hence it can be used by anyone\n\nA Move package is just a collection of modules with a manifest file called Move.toml\n\nInitializing a Sui Move Package\n\nUse the following Sui CLI command to start a skeleton Sui package:\n\nsui move new <PACKAGE NAME>\n\nFor our example in this unit, we will start a Hello World project:\n\nsui move new hello_world\n\nThis creates:\n\nthe project root folder hello_world\nthe Move.toml manifest file\nthe sources subfolder, which will contain Sui Move smart contract source files\nMove.toml Manifest Structure\n\nMove.toml is the manifest file of a package and is automatically generated in the project root folder.\n\nMove.toml consists of three sections:\n\n[package] Defines the name and version number of the package\n[dependencies] Defines other packages that this package depends on, such as the Sui standard library; other third-party dependencies should be added here as well\n[addresses] Defines aliases for addresses in the package source code\nSample Move.toml File\n\nThis is the Move.toml generated by the Sui CLI with the package name hello_world:\n\n[package]\nname = \"hello_world\"\nversion = \"0.0.1\"\nedition = \"2024.beta\"\n\n\n[dependencies]\nSui = { git = \"https://github.com/MystenLabs/sui.git\", subdir = \"crates/sui-framework/packages/sui-framework\", rev = \"framework/testnet\" }\n\n\n[addresses]\nhello_world =  \"0x0\"\n\nWe see that the Sui standard library dependency here is defined using a GitHub repo, but it can also point to a local binary using its relative or absolute file path, for example:\n\n[dependencies]\nSui = { local = \"../sui/crates/sui-framework/packages/sui-framework\" } \nSui Module and Package Naming\n\nSui Move module and package naming convention use snake casing, i.e. this_is_snake_casing.\n\nA Sui module name uses the Rust path separator :: to divide the package name and the module name, examples:\n\nunit_one::hello_world - hello_world module in unit_one package\ncapy::capy - capy module in capy package\n\nFor more information on Move naming conventions, please check the style section of the Move book."
    },
    {
      "title": "sui-move-intro-course/unit-one/lessons/3_custom_types_and_abilities.md at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/blob/main/unit-one/lessons/3_custom_types_and_abilities.md",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nunit-four\nunit-one\nexample_projects\nimages\nlessons\n1_set_up_environment.md\n2_sui_project_structure.md\n3_custom_types_and_abilities.md\n4_functions.md\n5_contract_deployment.md\nreadme.md\nunit-three\nunit-two\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course/unit-one/lessons\n/3_custom_types_and_abilities.md\nLatest commit\nuvd\nfeat: move 2024\n65c6b7b\n · \nHistory\nHistory\nFile metadata and controls\nPreview\nCode\nBlame\n75 lines (48 loc) · 2.63 KB\nRaw\nCustom Types and Abilities\n\nIn this section, we will start creating our Hello World example contract step by step and explain fundamental concepts in Sui Move as they come up, such as custom types and abilities.\n\nInitializing the Package\n\n(If you skipped the previous section) You can initialize a Hello World Sui package with the following command in the command line after installing Sui binaries:\n\nsui move new hello_world\n\nCreate the Contract Source File\n\nUse an editor of your choice to create a Move smart contract source file called hello.move under the sources subfolder.\n\nAnd create the empty module as follows:\n\nmodule hello_world::hello_world {\n    // module contents\n}\nImport Statements\n\nYou can directly import modules in Move by their address, but to make code easier to read, we can organize imports with the keyword use.\n\nuse <Address/Alias>::<ModuleName>;\n\nIn our example, we need to import the following modules:\n\nuse std::string;\nuse sui::object::{Self, UID};\nuse sui::transfer;\nuse sui::tx_context::{Self, TxContext};\nCustom Types\n\nA structure in Sui Move is a custom type that contains key-value pairs, where the key is the name of a property, and the value is what's stored. Defined using the keyword struct, a structure can have up to 4 abilities.\n\nAbilities\n\nAbilities are keywords in Sui Move that define how types behave at the compiler level.\n\nAbilities are crucial to defining how objects behave in Sui Move at the language level. Each unique combination of abilities in Sui Move is its own design pattern. We will study abilities and how to use them in Sui Move throughout the course.\n\nFor now, just know that there are four abilities in Sui Move:\n\ncopy: value can be copied (or cloned by value)\ndrop: value can be dropped by the end of the scope\nkey: value can be used as a key for global storage operations\nstore: value can be stored inside global storage\nAssets\n\nCustom types that have the abilities key and store are considered to be assets in Sui Move. Assets are stored in global storage and can be transferred between accounts.\n\nHello World Custom Type\n\nWe define the object in our Hello World example as the following:\n\n/// An object that contains an arbitrary string\npublic struct HelloWorldObject has key, store {\n  \tid: UID,\n  \t/// A string contained in the object\n  \ttext: string::String\n}\n\nUID here is a Sui Framework type (sui::object::UID) that defines the globally unique ID of an object. Any custom type with the key ability is required to have an ID field.\n\n "
    },
    {
      "title": "sui-move-intro-course/unit-one/lessons/1_set_up_environment.md at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/blob/main/unit-one/lessons/1_set_up_environment.md",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nunit-four\nunit-one\nexample_projects\nimages\nlessons\n1_set_up_environment.md\n2_sui_project_structure.md\n3_custom_types_and_abilities.md\n4_functions.md\n5_contract_deployment.md\nreadme.md\nunit-three\nunit-two\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course/unit-one/lessons\n/1_set_up_environment.md\nLatest commit\nzihehuang\nupdate installation doc for linux\nf69752b\n · \nHistory\nHistory\nFile metadata and controls\nPreview\nCode\nBlame\n85 lines (51 loc) · 3.53 KB\nRaw\nSetup Development Environment\n\nWelcome to the Sui Move introduction course. In this first unit, we will walk you through the process of setting up the development environment for working with Sui Move, and create a basic Hello World project as a gentle introduction into the world of Sui.\n\nInstall Sui Binaries Locally\n\nInstall prerequisites depending on your operating system\n\nInstall Sui binaries\n\ncargo install --locked --git https://github.com/MystenLabs/sui.git --branch devnet sui\n\nChange the branch target here to testnet or mainnet if you are targeting one of those.\n\nLinux Users: The installation process will create build artifacts in /tmp directory. If you encountered disk out of space related issues during installation. Make sure to expand your tmpfs to at least 11GB.\n\nTo check your tmpfs usage on Linux systems:\n\ndf /tmp\n\nYou can expand the tmpfs by editing the `/etc/fstab` file and setting the size of tmpfs to 20G:\n\ntmpfs          /tmp        tmpfs   noatime,size=20G,mode=1777   0 0\n\n\nCheck binaries are installed successfully:\n\nsui --version\n\nYou should see the version number in the terminal if sui binaries were installed successfully.\n\nUsing a Docker Image with Pre-installed Sui Binaries\n\nInstall Docker\n\nPull Sui official docker image\n\ndocker pull mysten/sui-tools:devnet\n\nStart and shell into the Docker container:\n\ndocker run --name suidevcontainer -itd mysten/sui-tools:devnet\n\ndocker exec -it suidevcontainer bash\n\n💡Note: If the above Docker image is not compatible with your CPU architecture, you can start with a base Rust Docker image appropriate for your CPU architecture, and install the Sui binaries and prerequisites as described above.\n\n(Optional) Configure VS Code with Move Analyzer Plug-in\n\nInstall Move Analyzer plugin from VS Marketplace\n\nAdd compatibility for Sui style wallet addresses:\n\ncargo install --git https://github.com/move-language/move move-analyzer --features \"address20\"\n\nSui CLI Basic Usage\n\nReference Page\n\nInitialization\nEnter Y for do you want to connect to a Sui Full node server? and press Enter to default to Sui Devnet full node\nEnter 0 for key scheme selection to choose ed25519\nManaging Networks\nSwitching network: sui client switch --env [network alias]\nDefault network aliases:\nlocalnet: http://0.0.0.0:9000\ndevnet: https://fullnode.devnet.sui.io:443\nList all current network aliases: sui client envs\nAdd new network alias: sui client new-env --alias <ALIAS> --rpc <RPC>\nTry adding a testnet alias with: sui client new-env --alias testnet --rpc https://fullnode.testnet.sui.io:443\nCheck Active Address and Gas Objects\nCheck current addresses in key store: sui client addresses\nCheck active-address: sui client active-address\nList all controlled gas objects: sui client gas\nGet Devnet or Testnet Sui Tokens\nJoin Sui Discord\nComplete verification steps\nEnter #devnet-faucet channel for devnet tokens, or #testnet-faucet channel for testnet tokens\nType !faucet <WALLET ADDRESS>"
    },
    {
      "title": "sui-move-intro-course/book.toml at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/blob/main/book.toml",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nunit-four\nunit-one\nunit-three\nunit-two\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course\n/book.toml\nLatest commit\nuvd\nadd mdbook\n20a9cd3\n · \nHistory\nHistory\nFile metadata and controls\nCode\nBlame\n6 lines (6 loc) · 104 Bytes\nRaw\n1\n2\n3\n4\n5\n6"
    },
    {
      "title": "sui-move-intro-course/SUMMARY.md at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/blob/main/SUMMARY.md",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nunit-four\nunit-one\nunit-three\nunit-two\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course\n/SUMMARY.md\nLatest commit\nuvd\nfeat: move 2024\n65c6b7b\n · \nHistory\nHistory\nFile metadata and controls\nPreview\nCode\nBlame\n38 lines (37 loc) · 2.46 KB\nRaw\nSummary\nUnit One\nSet Up Environment\nSui Project Structure\nCustom Types and Abilities\nFunctions\nContract Deployment\nUnit Two\nIntroduction\nOwnership\nParameter Passing and Object Deletion\nObject Wrapping\nObject Wrapping by Example\nCapability Design Pattern\nEvents\nUnit Three\nSui Framework\nIntro to Generics\nWitness Design Pattern\nThe Coin Resource and create_currency Method\nManaged Coin Example\nClock and Locked Coin\nUnit Testing\nUnit Four\nHomogeneous Collections\nDynamic Fields\nHeterogeneous Collections\nMarketplace Contract\nDeployment and Testing\nUnit Five: Sui Kiosk\nProgrammable Transaction Block\nHot Potato Design Pattern\nSui Kiosk Basic Concepts\nSui Kiosk Basic Usage\nTransfer Policy\nAdvanced Topics\nBCS Encoding"
    },
    {
      "title": "sui-move-intro-course/README.md at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/blob/main/README.md",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nunit-four\nunit-one\nunit-three\nunit-two\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course\n/README.md\nLatest commit\nhyd628\nMerge pull request #73 from sui-foundation/daniel/adding-kiosk-basics\n6e48467\n · \nHistory\nHistory\nFile metadata and controls\nPreview\nCode\nBlame\n112 lines (88 loc) · 6.18 KB\nRaw\nMove Intro Course\n\nIntroductory course to the Move language maintained by Sui Foundation.\n\nContent\nUnit One: Environment Setup and Hello World\nSet Up Environment\nSui Project Structure\nCustom Types and Abilities\nFunctions\nContract Deployment\nUnit Two: Working with Sui Objects\nIntroduction\nOwnership\nParameter Passing and Object Deletion\nObject Wrapping\nObject Wrapping by Example\nCapability Design Pattern\nEvents\nUnit Three: Fungible Tokens\nSui Framework\nIntro to Generics\nWitness Design Pattern\nThe Coin Resource and create_currency Method\nManaged Coin Example\nClock and Locked Coin\nUnit Testing\nUnit Four: Marketplace\nHomogeneous Collections\nDynamic Fields\nHeterogeneous Collections\nMarketplace Contract\nDeployment and Testing\nUnit Five: Sui Kiosk\nProgrammable Transaction Block\nHot Potato Design Pattern\nSui Kiosk Basic Concepts\nSui Kiosk Basic Usage\nTransfer Policy\nAdvanced Topics\nBCS Encoding\nTODOs\n Write BCS lesson for advanced topics\n Create a multi-platform Docker image\n Create exercises for each unit\n Add content on Display.move\n Add content on clock and example on token unlocking\n Write advanced topic lesson on closed loop token standard\n Write advanced topic lesson on package upgrades\n Write new lesson on kiosks\n Check and update Unit One against latest version of Sui\n Check and update Unit Two against latest version of Sui\n Check and update Unit Three against latest version of Sui\n Check and update Unit Four against latest version of Sui\n Check and update Advanced Topics against latest version of Sui\nGeneral Developer Resources\nSui Developer Documentation\nSui Developer Portal\nSui GitHub\nSui Framework Documentation\nSui Typescript SDK (official)\nSui Typescript SDK (community)\nSui Rust SDK (official)\nSui Golang SDK (community)\nSui Python SDK (community)\nSui Java SDK (community)\nSui Kotlin SDK (community)\nSui C# SDK (community)\nSui Dart SDK(community)\nSui Explorer\nSocials and Communities\n\nIf you want to join Sui's online communities, you can join via following links:\n\nSui Network Twitter\nSui Official Discord\nSui Developer Forums\nRepo Translations\n English\n Chinese\n Thai\n\nPlease get in touch if you want to help translate this into other languages.\n\nVideos and Other Formats\n Encode Club Video Series (English) YouTube playlist | tutorial and code\n BuidlerDAO Video Series (Chinese)\n MoveBit Move on Sui Course (English) YouTube playlist | tutorial and code\nFAQ\n\nCan I use the content of this repo to produce other educational content related to Sui or Sui Move programming language?\n\nYes. That is the original intention of this repo, to allow content creators and educational platforms to use and expand on the material within this repo to create different forms of media or technical content about Sui or the Sui Move language.\n\nThis repo is licensed under the Creative Common License; CC-BY-SA-4.0 license, to be specific. This allows anyone to remix, transform, build or share the content in this repo for whatever purposes, but any content based on this repo also needs to be licensed under the same Creative Common License, and give an attribution to the source.\n\nHow can I contribute to this repo?\n\nFork and open a PR against the upstream repo. We are open to community contributions."
    },
    {
      "title": "sui-move-intro-course/unit-two at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/tree/main/unit-two",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nunit-four\nunit-one\nunit-three\nunit-two\nexample_projects/transcript\nimages\nlessons\nreadme.md\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course\n/unit-two/\nDirectory actions\nMore options\nLatest commit\nuvd\nfeat: move 2024\na3f10cb\n · \nHistory\nHistory\nFolders and files\nName\tLast commit message\tLast commit date\n\nparent directory\n..\n\n\nexample_projects/transcript\n\t\nfeat: move 2024\n\t\n\n\nimages\n\t\nupdate image\n\t\n\n\nlessons\n\t\nfeat: move 2024\n\t\n\n\nreadme.md\n\t\nadd mdbook\n\t"
    },
    {
      "title": "sui-move-intro-course/unit-three at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/tree/main/unit-three",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nunit-four\nunit-one\nunit-three\nexample_projects\nimages\nlessons\nunit-two\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course\n/unit-three/\nDirectory actions\nMore options\nLatest commit\nuvd\nfeat: move 2024\na3f10cb\n · \nHistory\nHistory\nFolders and files\nName\tLast commit message\tLast commit date\n\nparent directory\n..\n\n\nexample_projects\n\t\nfeat: move 2024\n\t\n\n\nimages\n\t\nupdate image\n\t\n\n\nlessons\n\t\nfeat: move 2024\n\t"
    },
    {
      "title": "sui-move-intro-course/unit-four at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/tree/main/unit-four",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nunit-four\nexample_projects\nimages\nlessons\nreadme.md\nunit-one\nunit-three\nunit-two\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course\n/unit-four/\nDirectory actions\nMore options\nLatest commit\nuvd\nfeat: move 2024\na3f10cb\n · \nHistory\nHistory\nFolders and files\nName\tLast commit message\tLast commit date\n\nparent directory\n..\n\n\nexample_projects\n\t\nfeat: move 2024\n\t\n\n\nimages\n\t\nupdate image\n\t\n\n\nlessons\n\t\nfeat: move 2024\n\t\n\n\nreadme.md\n\t\nadd mdbook\n\t"
    },
    {
      "title": "sui-move-intro-course/unit-one at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/tree/main/unit-one",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nunit-four\nunit-one\nexample_projects/hello_world\nimages\nlessons\nreadme.md\nunit-three\nunit-two\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course\n/unit-one/\nDirectory actions\nMore options\nLatest commit\nuvd\nfeat: move 2024\na3f10cb\n · \nHistory\nHistory\nFolders and files\nName\tLast commit message\tLast commit date\n\nparent directory\n..\n\n\nexample_projects/hello_world\n\t\nfeat: move 2024\n\t\n\n\nimages\n\t\nupdate image\n\t\n\n\nlessons\n\t\nfeat: move 2024\n\t\n\n\nreadme.md\n\t\nadd mdbook\n\t"
    },
    {
      "title": "sui-move-intro-course/unit-five at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/tree/main/unit-five",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nexample_projects\nlessons\nreadme.md\nunit-four\nunit-one\nunit-three\nunit-two\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course\n/unit-five/\nDirectory actions\nMore options\nLatest commit\nuvd\nfeat: move 2024\na3f10cb\n · \nHistory\nHistory\nFolders and files\nName\tLast commit message\tLast commit date\n\nparent directory\n..\n\n\nexample_projects\n\t\nfeat: move 2024\n\t\n\n\nlessons\n\t\nfeat: move 2024\n\t\n\n\nreadme.md\n\t\nfeat: adding ptb\n\t\n "
    },
    {
      "title": "sui-move-intro-course/src at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/tree/main/src",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nmisc\ntheme\nunit-five\nunit-four\nunit-one\nunit-three\nunit-two\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course\n/src/\nDirectory actions\nMore options\nLatest commit\nuvd\nfeat: check code\n70b32af\n · \nHistory\nHistory\nFolders and files\nName\tLast commit message\tLast commit date\n\nparent directory\n..\n\n\nmisc\n\t\nfeat: check code\n\t\n\n\ntheme\n\t\nfeat: check code\n\t"
    },
    {
      "title": "Commits · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/commits/main/",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nCommits\nBranch selector\n main\nUser selector\nAll users\nDatepicker\nAll time\nCommit History\nCommits on May 6, 2024\nMerge pull request #77 from uvd/main\nuvd\ncommitted\nVerified\n0c9c5bd\nfeat: move 2024\nuvd\ncommitted\n·\n0 / 1\na3f10cb\nfeat: move 2024\nuvd\ncommitted\n·\n0 / 1\n65c6b7b\nCommits on Apr 16, 2024\nMerge pull request #75 from StevenMia/main\nhyd628\ncommitted\nVerified\n322d935\nCommits on Apr 15, 2024\nchore: fix some typos in comments\nStevenMia\ncommitted\n7316d03\nCommits on Apr 12, 2024\nMerge pull request #73 from sui-foundation/daniel/adding-kiosk-basics\nhyd628\ncommitted\nVerified\n6e48467\nMerge pull request #74 from goodfirm/main\nhyd628\ncommitted\nVerified\na4a5f19\nCommits on Apr 10, 2024\nchore: fix typo in README.md\ngoodfirm\ncommitted\nc84e562\nCommits on Apr 8, 2024\nfix: change rust to move for code example\ndaniellam258\ncommitted\n·\n0 / 1\n5aca07f\nCommits on Mar 31, 2024\nfix: fix ptb kiosk buy\ndaniellam258\ncommitted\n·\n0 / 1\n5801092\nfeat: update readme\ndaniellam258\ncommitted\n·\n0 / 1\n12fbf02\nfeat: add kiosk buy full flow example\ndaniellam258\ncommitted\n4724b2b\nCommits on Mar 28, 2024\nfeat: add create kiosk section\ndaniellam258\ncommitted\n06e08d4\nCommits on Mar 26, 2024\nfeat: add ptb cli example to hot potato\ndaniellam258\ncommitted\nb83cf35\nCommits on Mar 25, 2024\nRevert to keep PTB\ndaniellam258\ncommitted\ne321fa3\nCommits on Mar 11, 2024\nfeat: refactor hot potato to exclude ptb\ndaniellam258\ncommitted\n·\n0 / 1\n58dffbf\nCommits on Mar 5, 2024\nfeat: add kiosk policy\ndaniellam258\ncommitted\n·\n0 / 1\n81b3f53\nfeat(kiosk): add kiosk users and asset states\ndaniellam258\ncommitted\n3ba6f12\nfeat: Sui Kiosk (wip)\ndaniellam258\ncommitted\n716c557\nfix: fix readme\ndaniellam258\ncommitted\ndf98fe7\nfeat: fix readme\ndaniellam258\ncommitted\n896bb76\nfeat: adding hot potato pattern\ndaniellam258\ncommitted\n25df555\nfeat: adding ptb\ndaniellam258\ncommitted\n1f37c73\nfeat: adding ptb\ndaniellam258\ncommitted\nf022f48\nCommits on Feb 19, 2024\nMerge pull request #72 from sui-foundation/zihe-update-linux-install\nhyd628\ncommitted\nVerified\n92f9853\nCommits on Feb 18, 2024\nupdate installation doc for linux\nzihehuang\ncommitted\n·\n0 / 1\nf69752b\nCommits on Feb 16, 2024\nMerge pull request #69 from QiLOL/doc_update\nuvd\ncommitted\nVerified\n9db5b2e\nCommits on Feb 12, 2024\nSwitch to function level lint\nQiLOL\ncommitted\n41582eb\nCommits on Feb 5, 2024\nDoc update\nQiLOL\ncommitted\n72a8643\nCommits on Feb 4, 2024\nMerge branch 'main' of https://github.com/sui-foundation/sui-move-intro-course\nhyd628\ncommitted\n9a1f4f3\nUpdate README.md\nhyd628\ncommitted\nc2efc5a\nMerge pull request #68 from RandyPen/patch-1\nhyd628\ncommitted\nVerified\nc068689\nMerge pull request #67 from Xeonacid/patch-1\nhyd628\ncommitted\nVerified\ne37cfa0\nUpdate README.md\nhyd628\ncommitted\n64c3495\nCommits on Feb 3, 2024\nUpdate README.md\nRandyPen\ncommitted\n·\n0 / 1\nVerified\nb2b622e\nPagination\nPrevious\nNext\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "sui-move-intro-course/exercises at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/tree/main/exercises",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nunit-four\nunit-one\nsrc\nunit-five\nunit-four\nunit-one\nunit-three\nunit-two\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course\n/exercises/\nDirectory actions\nMore options\nLatest commit\nuvd\nfeat: move 2024\n65c6b7b\n · \nHistory\nHistory\nFolders and files\nName\tLast commit message\tLast commit date\n\nparent directory\n..\n\n\nunit-four\n\t\nfeat: move 2024\n\t\n\n\nunit-one\n\t\nremoving public entry part 2\n\t"
    },
    {
      "title": "sui-move-intro-course/advanced-topics at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/tree/main/advanced-topics",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nBCS_encoding\nclosed_loop_token\nreadme.md\nexercises\nsrc\nunit-five\nunit-four\nunit-one\nunit-three\nunit-two\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course\n/advanced-topics/\nDirectory actions\nMore options\nLatest commit\nuvd\nfeat: move 2024\na3f10cb\n · \nHistory\nHistory\nFolders and files\nName\tLast commit message\tLast commit date\n\nparent directory\n..\n\n\nBCS_encoding\n\t\nfeat: move 2024\n\t\n\n\nclosed_loop_token\n\t\nfeat: move 2024\n\t\n\n\nreadme.md\n\t\nadd mdbook\n\t"
    },
    {
      "title": "Pulse · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/pulse",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nInsights: sui-foundation/sui-move-intro-course\nPulse\nContributors\nCommunity Standards\nCommits\nCode frequency\nDependency graph\nNetwork\nForks\nMay 8, 2024 – May 15, 2024\nPeriod: 1 week \nOverview\n1 Active pull request\n0 Active issues\n 0\nMerged pull requests\n 1\nOpen pull request\n 0\nClosed issues\n 0\nNew issues\nThere hasn’t been any commit activity on sui-foundation/sui-move-intro-course in the last week.\n\nWant to help out?\n\n Fork this repository\n\n 1 Pull request opened by 1 person\nUpdate to Unit One READMEs\n\n#79 opened \n\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Security Overview · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/security",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nSecurity: sui-foundation/sui-move-intro-course\nSecurity\nNo security policy detected\n\nThis project has not set up a SECURITY.md file yet.\n\nThere aren’t any published security advisories\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Workflow runs · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/actions",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nActions: sui-foundation/sui-move-intro-course\nActions\nAll workflows\nTest deployment\nManagement\nCaches\nAttestations\nAll workflows\nShowing runs from all workflows\n32 workflow runs\nEvent \nStatus \nBranch \nActor \nUpdate to Unit One READMEs\nTest deployment #41: Pull request #79 synchronize by dantheman8300\n\tdan/fixes\t\n \n 30m 9s\nUpdate to Unit One READMEs\nTest deployment #40: Pull request #79 synchronize by dantheman8300\n\tdan/fixes\t\n \n 29m 50s\nUpdate to Unit One READMEs\nTest deployment #39: Pull request #79 synchronize by dantheman8300\n\tdan/fixes\t\n \n 30m 21s\nUpdate to Unit One READMEs\nTest deployment #38: Pull request #79 opened by dantheman8300\n\tdan/fixes\t\n \n 28m 17s\nmove 2024\nTest deployment #36: Pull request #77 synchronize by uvd\n\tuvd:main\t\n \n 28m 21s\nmove 2024\nTest deployment #35: Pull request #77 opened by uvd\n\tuvd:main\t\n \n 28m 36s\nAdding Kiosk Unit\nTest deployment #32: Pull request #73 synchronize by daniellam258\n\tdaniel/adding-kiosk-basics\t\n \n 28m 45s\nAdding Kiosk Unit\nTest deployment #31: Pull request #73 synchronize by daniellam258\n\tdaniel/adding-kiosk-basics\t\n \n 27m 48s\nAdding Kiosk Unit\nTest deployment #30: Pull request #73 synchronize by daniellam258\n\tdaniel/adding-kiosk-basics\t\n \n 28m 29s\nAdding Kiosk Unit\nTest deployment #29: Pull request #73 synchronize by daniellam258\n\tdaniel/adding-kiosk-basics\t\n \n 27m 48s\nAdding Kiosk Unit\nTest deployment #28: Pull request #73 opened by daniellam258\n\tdaniel/adding-kiosk-basics\t\n \n 27m 3s\nupdate installation doc for linux\nTest deployment #27: Pull request #72 opened by zihehuang\n\tzihe-update-linux-install\t\n \n 24m 3s\nUpdate README.md\nTest deployment #24: Pull request #68 opened by RandyPen\n\tRandyPen:patch-1\t\n \n 43m 12s\nUpdate README.md\nTest deployment #22: Pull request #65 opened by ordinary-yobi\n\tordinary-yobi:patch-1\t\n \n 39m 36s\nUpdate 3_parameter_passing_and_object_deletion.md\nTest deployment #18: Pull request #61 opened by georgescharlesbrain\n\tgeorgescharlesbrain:patch-22\t\n \n 1h 11m 33s\nUpdate BCS_encoding.md\nTest deployment #17: Pull request #60 opened by georgescharlesbrain\n\tgeorgescharlesbrain:patch-21\t\n \n 1h 23m 22s\nUpdate README.md\nTest deployment #16: Pull request #59 opened by georgescharlesbrain\n\tgeorgescharlesbrain:patch-20\t\n \n 1h 22m 46s\nUpdate 2_intro_to_generics.md\nTest deployment #15: Pull request #58 opened by georgescharlesbrain\n\tgeorgescharlesbrain:patch-11\t\n \n 1h 26m 55s\nUpdate 5_managed_coin.md\nTest deployment #14: Pull request #57 opened by georgescharlesbrain\n\tgeorgescharlesbrain:patch-13\t\n \n 1h 22m 18s\nUpdate 5_deployment_and_testing.md\nTest deployment #13: Pull request #55 opened by georgescharlesbrain\n\tgeorgescharlesbrain:patch-19\t\n \n 1h 12m 35s\nUpdate 4_marketplace_contract.md\nTest deployment #12: Pull request #54 opened by georgescharlesbrain\n\tgeorgescharlesbrain:patch-18\t\n \n 1h 13m 16s\nUpdate 3_heterogeneous_collections.md\nTest deployment #11: Pull request #53 opened by georgescharlesbrain\n\tgeorgescharlesbrain:patch-17\t\n \n 1h 23m 40s\nUpdate 2_dynamic_fields.md\nTest deployment #10: Pull request #52 opened by georgescharlesbrain\n\tgeorgescharlesbrain:patch-16\t\n \n 1h 27m 40s\nUpdate 1_homogeneous_collections.md\nTest deployment #9: Pull request #51 opened by georgescharlesbrain\n\tgeorgescharlesbrain:patch-15\t\n \n 1h 34m 22s\nUpdate 6_unit_testing.md\nTest deployment #8: Pull request #50 opened by georgescharlesbrain\n\tgeorgescharlesbrain:patch-14\t\n \n 1h 10m 33s\nPrevious 1 2 Next"
    },
    {
      "title": "Projects · sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/projects?query=is%3Aopen",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nsui-foundation/sui-move-intro-course projects\nProjects\nTemplates\nSearch all projects\nSearch results\nNo open projects\n\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Pull requests · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/pulls",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nPull requests: sui-foundation/sui-move-intro-course\n Labels 9\n Milestones 0\nNew pull request\n 1 Open  59 Closed\nAuthor \nLabel \nProjects  Milestones  Reviews \nAssignee \nSort \nPull requests list\nUpdate to Unit One READMEs  documentation\n#79 opened  by dantheman8300\nLoading…\n ProTip! Type g p on any issue or pull request to go back to the pull request listing page.\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Activity · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/activity",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nActivity\n All branches\nAll activity\nAll users\nAll time\nShowing most recent first \nmore spacing\ndantheman8300pushed 1 commit to dan/fixes • 9ead145…3c46de0 • yesterday\nspacing\ndantheman8300pushed 1 commit to dan/fixes • 1f1fe20…9ead145 • yesterday\nreverted change on package visibility\ndantheman8300pushed 1 commit to dan/fixes • dd4a1cb…1f1fe20 • yesterday\nupdated images of CLI outputs to match new CLI updates\ndantheman8300created dan/fixes • dd4a1cb • yesterday\nMerge pull request #77 from uvd/main\nPull request merge\nuvdpushed 3 commits to main • 322d935…0c9c5bd • 9 days ago\nMerge pull request #75 from StevenMia/main\nPull request merge\nhyd628pushed 2 commits to main • 6e48467…322d935 • 29 days ago\nMerge pull request #73 from sui-foundation/daniel/adding-kiosk-basics\nPull request merge\nhyd628pushed 17 commits to main • a4a5f19…6e48467 • on Apr 12\nMerge pull request #74 from goodfirm/main\nPull request merge\nhyd628pushed 2 commits to main • 92f9853…a4a5f19 • on Apr 12\nfix: change rust to move for code example\ndaniellam258pushed 1 commit to daniel/adding-kiosk-basics • 5801092…5aca07f • on Apr 8\nfix: fix ptb kiosk buy\ndaniellam258pushed 1 commit to daniel/adding-kiosk-basics • 12fbf02…5801092 • on Mar 31\nfeat: update readme\ndaniellam258pushed 5 commits to daniel/adding-kiosk-basics • 58dffbf…12fbf02 • on Mar 31\nfeat: refactor hot potato to exclude ptb\ndaniellam258pushed 1 commit to daniel/adding-kiosk-basics • 81b3f53…58dffbf • on Mar 11\nfeat: add kiosk policy\ndaniellam258pushed 1 commit to daniel/adding-kiosk-basics • 3ba6f12…81b3f53 • on Mar 5\nfeat(kiosk): add kiosk users and asset states\ndaniellam258pushed 1 commit to daniel/adding-kiosk-basics • 716c557…3ba6f12 • on Mar 5\nfeat: Sui Kiosk (wip)\ndaniellam258pushed 1 commit to daniel/adding-kiosk-basics • df98fe7…716c557 • on Mar 5\nfix: fix readme\ndaniellam258pushed 2 commits to daniel/adding-kiosk-basics • 25df555…df98fe7 • on Mar 5\nfeat: adding hot potato pattern\ndaniellam258pushed 2 commits to daniel/adding-kiosk-basics • f022f48…25df555 • on Mar 5\nfeat: adding ptb\ndaniellam258created daniel/adding-kiosk-basics • f022f48 • on Mar 5\nMerge pull request #72 from sui-foundation/zihe-update-linux-install\nPull request merge\nhyd628pushed 2 commits to main • 9db5b2e…92f9853 • on Feb 19\nupdate installation doc for linux\nzihehuangcreated zihe-update-linux-install • f69752b • on Feb 18\nMerge pull request #69 from QiLOL/doc_update\nPull request merge\nuvdpushed 3 commits to main • 9a1f4f3…9db5b2e • on Feb 16\nMerge branch 'main' of https://github.com/sui-foundation/sui-move-int…\nhyd628pushed 2 commits to main • c068689…9a1f4f3 • on Feb 4\nMerge pull request #68 from RandyPen/patch-1\nPull request merge\nhyd628pushed 2 commits to main • e37cfa0…c068689 • on Feb 4\nMerge pull request #67 from Xeonacid/patch-1\nPull request merge\nhyd628pushed 2 commits to main • 64c3495…e37cfa0 • on Feb 4\nUpdate README.md\nhyd628pushed 1 commit to main • eb27ebc…64c3495 • on Feb 4\nMerge pull request #65 from ordinary-yobi/patch-1\nPull request merge\nhyd628pushed 2 commits to main • 96e48a8…eb27ebc • on Jan 4\nClock title\nhyd628pushed 1 commit to main • 2d16734…96e48a8 • on Dec 24, 2023\nparity token\nhyd628pushed 1 commit to main • 5ffc4f8…2d16734 • on Dec 10, 2023\nUpdate closed_loop_token.md\nhyd628pushed 1 commit to main • 98df20a…5ffc4f8 • on Dec 10, 2023\nclosed loop token\nhyd628pushed 1 commit to main • b8529b2…98df20a • on Dec 10, 2023\nShare feedback about this page\nPreviousNext\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Issues · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/issues",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nIssues: sui-foundation/sui-move-intro-course\n Labels 9\n Milestones 0\nNew issue\n 1 Open  12 Closed\nAuthor \nLabel \nProjects  Milestones \nAssignee \nSort \nIssues list\nRPC Error trying to publish the contract from unit one\n#76 opened  by Skunkw0rks\n ProTip! Type g i on any issue or pull request to go back to the issue listing page.\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Branches · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/branches",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nBranches\nOverview\nActive\nStale\nAll\nSearch\nDefault\nBranch\nUpdated\nCheck status\nBehind\nAhead\nPull request\nAction menu\nmain\n \nDefault\nActive branches\nBranch\nUpdated\nCheck status\nBehind\nAhead\nPull request\nAction menu\ndan/fixes\n \n0 / 1\n0\n7\n#79\ndaniel/adding-kiosk-basics\n \n0 / 1\n8\n0\n#73\nzihe-update-linux-install\n \n0 / 1\n25\n0\n#72\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Releases · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/tags",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nReleases\nTags\nThere aren’t any releases here\n\nYou can create a release to package software, along with release notes and links to binary files, for other people to use. Learn more about releases in our docs.\n\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "sui-move-intro-course/LICENSE at main · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/blob/main/LICENSE",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nFiles\n main\n.github\nadvanced-topics\nexercises\nsrc\nunit-five\nunit-four\nunit-one\nunit-three\nunit-two\n.gitignore\nLICENSE\nREADME.md\nSUMMARY.md\nbook.toml\nBreadcrumbs\nsui-move-intro-course\n/LICENSE\nsui-foundation/sui-move-intro-course is licensed under the\nCreative Commons Attribution Share Alike 4.0 International\nSimilar to CC-BY-4.0 but requires derivatives be distributed under the same or a similar, compatible license. Frequently used for media assets and educational materials. A previous version is the default license for Wikipedia and other Wikimedia projects. Not recommended for software.\nPermissions\nCommercial use\nModification\nDistribution\nPrivate use\nLimitations\nLiability\nTrademark use\nPatent use\nWarranty\nConditions\nLicense and copyright notice\nState changes\nSame license\nThis is not legal advice. Learn more about repository licenses\nLatest commit\nhyd628\nUpdate LICENSE\n9a57c20\n · \nHistory\nHistory\nFile metadata and controls\nCode\nBlame\n427 lines (330 loc) · 19.7 KB\nRaw\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427"
    },
    {
      "title": "Forks · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/forks",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nInsights: sui-foundation/sui-move-intro-course\nPulse\nContributors\nCommunity Standards\nCommits\nCode frequency\nDependency graph\nNetwork\nForks\nSwitch to tree view\nForks\nPeriod: 2 years\nRepository type: Active \nSort: Most starred\n BrianSeong99 / sui-move-intro-course\n 1\n 0\n 0\n 0\nCreated \nUpdated \n georgescharlesbrain / sui-move-intro-course\n 1\n 0\n 0\n 0\nCreated \nUpdated \n uvd / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n tyirenkyi / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n SuiSunbeam / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n StevenMia / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n RevanthGundala / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n RandyPen / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n QiLOL / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n ordinary-yobi / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n nhtera / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n lucenera75 / sui-move-intro-course\n 0\n 0\n 0\n 1\nCreated \nUpdated \n L0GYKAL / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n hello2jie / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n goodfirm / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n geometryolife / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n DucllOwO / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n david-geisinger / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \n 0xmove / sui-move-intro-course\n 0\n 0\n 0\n 0\nCreated \nUpdated \nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "Stargazers · sui-foundation/sui-move-intro-course · GitHub",
      "url": "https://github.com/sui-foundation/sui-move-intro-course/stargazers",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nStargazers\nAll 2,046\nYou know\nchriss881\n\n Joined on Apr 14, 2020\n\nFollow\nsqrlfirst\n\nIs from Bangkok, Thailand\nBangkok, Thailand\n\nFollow\nabhaydee\n\nWorks for NorthEastern University\nNorthEastern University\n\nFollow\nlovingocean\n\n Joined on Feb 16, 2018\n\nFollow\njpw993\n\n Joined on Apr 28, 2023\n\nFollow\nSantaknolli\n\n Joined on Feb 16, 2024\n\nFollow\nratukirana\n\n Joined on Jul 9, 2022\n\nFollow\nfitguypk\n\n Joined on Apr 3, 2022\n\nFollow\nchandra447\n\nWorks for Monash University\nMonash University\n\nFollow\nNanodesign\n\nWorks for Nanodesign Inc.\nNanodesign Inc.\n\nFollow\nGausPeerzade\n\n Joined on Oct 22, 2022\n\nFollow\nIWildSniperI\n\n Joined on Dec 17, 2023\n\nFollow\nMcilz\n\n Joined on Mar 16, 2024\n\nFollow\nhien-p\n\nIs from Ho Chi Minh\nHo Chi Minh\n\nFollow\nengmxr\n\n Joined on May 5, 2024\n\nFollow\ndayiemgatwich\n\nIs from Morocco\nMorocco\n\nFollow\nRohezal42\n\n Joined on May 8, 2024\n\nFollow\nanhtrungno11\n\n Joined on Mar 27, 2024\n\nFollow\nIsaksak\n\n Joined on May 7, 2024\n\nFollow\nGessi12\n\n Joined on Jun 6, 2021\n\nFollow\nKrut007\n\n Joined on Mar 9, 2020\n\nFollow\npoach2610\n\n Joined on Sep 24, 2022\n\nFollow\nn6085327\n\n Joined on Apr 29, 2024\n\nFollow\nVickyshag\n\n Joined on May 4, 2024\n\nFollow\nswen-chan\n\nWorks for University of London\nUniversity of London\n\nFollow\ndevarogundade\n\nIs from Nigeria\nNigeria\n\nFollow\n0xtos\n\n Joined on Jan 16, 2021\n\nFollow\nDaliemelo1\n\n Joined on Apr 4, 2024\n\nFollow\nChipribora\n\n Joined on May 2, 2024\n\nFollow\nPashmeena\n\n Joined on Feb 2, 2017\n\nFollow\nmarcellius33\n\n Joined on Jun 11, 2020\n\nFollow\nCajetan221\n\n Joined on Oct 28, 2023\n\nFollow\nkofkuiper\n\nIs from Thailand\nThailand\n\nFollow\nfoxinghos\n\n Joined on Apr 29, 2024\n\nFollow\nYode01\n\n Joined on Feb 11, 2022\n\nFollow\nTaryoh\n\n Joined on Jan 29, 2022\n\nFollow\ngordonkoehn\n\nWorks for g15n\ng15n\n\nFollow\nszcharlesji\n\nIs from New York, NY\nNew York, NY\n\nFollow\n1997roylee\n\n Joined on Jul 18, 2019\n\nFollow\nDvcool12\n\n Joined on Apr 28, 2024\n\nFollow\nCrk263982krC\n\n Joined on Apr 27, 2024\n\nFollow\nret2basic\n\n Joined on Dec 31, 2019\n\nFollow\nyan-man\n\nIs from Chicago, IL\nChicago, IL\n\nFollow\njeffierw\n\nIs from the planet of laugh up one's sleeve.\nthe planet of laugh up one's sleeve.\n\nFollow\nmusklone\n\n Joined on Oct 20, 2023\n\nFollow\nwandeha1\n\n Joined on Dec 2, 2022\n\nFollow\nTattiers\n\n Joined on Apr 22, 2024\n\nFollow\ndo0x0ob\n\nIs from Taichung\nTaichung\n\nFollow\nPreviousNext\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    },
    {
      "title": "GitHub - sui-foundation/sui-move-intro-course: Introductory Course to the Sui Move language",
      "url": "https://github.com/sui-foundation/sui-move-intro-course",
      "html": "Skip to content\nNavigation Menu\nProduct\nSolutions\nOpen Source\nPricing\nSearch or jump to...\nSign in\nSign up\nsui-foundation\n/\nsui-move-intro-course\nPublic\nNotifications\nFork 73\n Star 2k\nCode\nIssues\n1\nPull requests\n1\nActions\nProjects\nSecurity\nInsights\nsui-foundation/sui-move-intro-course\n main\nBranches\nTags\nCode\nFolders and files\nName\tLast commit message\tLast commit date\n\nLatest commit\n \nHistory\n335 Commits\n\n\n.github\n\t\n \n\t\n \n\n\nadvanced-topics\n\t\n \n\t\n \n\n\nexercises\n\t\n \n\t\n \n\n\nsrc\n\t\n \n\t\n \n\n\nunit-five\n\t\n \n\t\n \n\n\nunit-four\n\t\n \n\t\n \n\n\nunit-one\n\t\n \n\t\n \n\n\nunit-three\n\t\n \n\t\n \n\n\nunit-two\n\t\n \n\t\n \n\n\n.gitignore\n\t\n \n\t\n \n\n\nLICENSE\n\t\n \n\t\n \n\n\nREADME.md\n\t\n \n\t\n \n\n\nSUMMARY.md\n\t\n \n\t\n \n\n\nbook.toml\n\t\n \n\t\n \nRepository files navigation\nREADME\nCC-BY-SA-4.0 license\nMove Intro Course\n\nIntroductory course to the Move language maintained by Sui Foundation.\n\nContent\nUnit One: Environment Setup and Hello World\nSet Up Environment\nSui Project Structure\nCustom Types and Abilities\nFunctions\nContract Deployment\nUnit Two: Working with Sui Objects\nIntroduction\nOwnership\nParameter Passing and Object Deletion\nObject Wrapping\nObject Wrapping by Example\nCapability Design Pattern\nEvents\nUnit Three: Fungible Tokens\nSui Framework\nIntro to Generics\nWitness Design Pattern\nThe Coin Resource and create_currency Method\nManaged Coin Example\nClock and Locked Coin\nUnit Testing\nUnit Four: Marketplace\nHomogeneous Collections\nDynamic Fields\nHeterogeneous Collections\nMarketplace Contract\nDeployment and Testing\nUnit Five: Sui Kiosk\nProgrammable Transaction Block\nHot Potato Design Pattern\nSui Kiosk Basic Concepts\nSui Kiosk Basic Usage\nTransfer Policy\nAdvanced Topics\nBCS Encoding\nTODOs\n Write BCS lesson for advanced topics\n Create a multi-platform Docker image\n Create exercises for each unit\n Add content on Display.move\n Add content on clock and example on token unlocking\n Write advanced topic lesson on closed loop token standard\n Write advanced topic lesson on package upgrades\n Write new lesson on kiosks\n Check and update Unit One against latest version of Sui\n Check and update Unit Two against latest version of Sui\n Check and update Unit Three against latest version of Sui\n Check and update Unit Four against latest version of Sui\n Check and update Advanced Topics against latest version of Sui\nGeneral Developer Resources\nSui Developer Documentation\nSui Developer Portal\nSui GitHub\nSui Framework Documentation\nSui Typescript SDK (official)\nSui Typescript SDK (community)\nSui Rust SDK (official)\nSui Golang SDK (community)\nSui Python SDK (community)\nSui Java SDK (community)\nSui Kotlin SDK (community)\nSui C# SDK (community)\nSui Dart SDK(community)\nSui Explorer\nSocials and Communities\n\nIf you want to join Sui's online communities, you can join via following links:\n\nSui Network Twitter\nSui Official Discord\nSui Developer Forums\nRepo Translations\n English\n Chinese\n Thai\n\nPlease get in touch if you want to help translate this into other languages.\n\nVideos and Other Formats\n Encode Club Video Series (English) YouTube playlist | tutorial and code\n BuidlerDAO Video Series (Chinese)\n MoveBit Move on Sui Course (English) YouTube playlist | tutorial and code\nFAQ\n\nCan I use the content of this repo to produce other educational content related to Sui or Sui Move programming language?\n\nYes. That is the original intention of this repo, to allow content creators and educational platforms to use and expand on the material within this repo to create different forms of media or technical content about Sui or the Sui Move language.\n\nThis repo is licensed under the Creative Common License; CC-BY-SA-4.0 license, to be specific. This allows anyone to remix, transform, build or share the content in this repo for whatever purposes, but any content based on this repo also needs to be licensed under the same Creative Common License, and give an attribution to the source.\n\nHow can I contribute to this repo?\n\nFork and open a PR against the upstream repo. We are open to community contributions.\n\nAbout\n\nIntroductory Course to the Sui Move language\n\nResources\n Readme\nLicense\n CC-BY-SA-4.0 license\n Activity\n Custom properties\nStars\n 2k stars\nWatchers\n 17 watching\nForks\n 73 forks\nReport repository\n\n\nReleases\nNo releases published\n\n\nPackages\nNo packages published\n\n\n\nContributors\n20\n+ 6 contributors\n\n\nLanguages\nMove\n91.4%\n \nJavaScript\n8.6%\nFooter\n© 2024 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information"
    }
  ]